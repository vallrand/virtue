"use strict";var _shapeGeometry;var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}!function(global){"use strict";var Op=Object.prototype;var hasOwn=Op.hasOwnProperty;var undefined;var $Symbol=typeof Symbol==="function"?Symbol:{};var iteratorSymbol=$Symbol.iterator||"@@iterator";var asyncIteratorSymbol=$Symbol.asyncIterator||"@@asyncIterator";var toStringTagSymbol=$Symbol.toStringTag||"@@toStringTag";var inModule=(typeof module==="undefined"?"undefined":_typeof(module))==="object";var runtime=global.regeneratorRuntime;if(runtime){if(inModule){module.exports=runtime;}return;}runtime=global.regeneratorRuntime=inModule?module.exports:{};function wrap(innerFn,outerFn,self,tryLocsList){var protoGenerator=outerFn&&outerFn.prototype instanceof Generator?outerFn:Generator;var generator=Object.create(protoGenerator.prototype);var context=new Context(tryLocsList||[]);generator._invoke=makeInvokeMethod(innerFn,self,context);return generator;}runtime.wrap=wrap;function tryCatch(fn,obj,arg){try{return{type:"normal",arg:fn.call(obj,arg)};}catch(err){return{type:"throw",arg:err};}}var GenStateSuspendedStart="suspendedStart";var GenStateSuspendedYield="suspendedYield";var GenStateExecuting="executing";var GenStateCompleted="completed";var ContinueSentinel={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var IteratorPrototype={};IteratorPrototype[iteratorSymbol]=function(){return this;};var getProto=Object.getPrototypeOf;var NativeIteratorPrototype=getProto&&getProto(getProto(values([])));if(NativeIteratorPrototype&&NativeIteratorPrototype!==Op&&hasOwn.call(NativeIteratorPrototype,iteratorSymbol)){IteratorPrototype=NativeIteratorPrototype;}var Gp=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(IteratorPrototype);GeneratorFunction.prototype=Gp.constructor=GeneratorFunctionPrototype;GeneratorFunctionPrototype.constructor=GeneratorFunction;GeneratorFunctionPrototype[toStringTagSymbol]=GeneratorFunction.displayName="GeneratorFunction";function defineIteratorMethods(prototype){["next","throw","return"].forEach(function(method){prototype[method]=function(arg){return this._invoke(method,arg);};});}runtime.isGeneratorFunction=function(genFun){var ctor=typeof genFun==="function"&&genFun.constructor;return ctor?ctor===GeneratorFunction||(ctor.displayName||ctor.name)==="GeneratorFunction":false;};runtime.mark=function(genFun){if(Object.setPrototypeOf){Object.setPrototypeOf(genFun,GeneratorFunctionPrototype);}else{genFun.__proto__=GeneratorFunctionPrototype;if(!(toStringTagSymbol in genFun)){genFun[toStringTagSymbol]="GeneratorFunction";}}genFun.prototype=Object.create(Gp);return genFun;};runtime.awrap=function(arg){return{__await:arg};};function AsyncIterator(generator){function invoke(method,arg,resolve,reject){var record=tryCatch(generator[method],generator,arg);if(record.type==="throw"){reject(record.arg);}else{var result=record.arg;var value=result.value;if(value&&(typeof value==="undefined"?"undefined":_typeof(value))==="object"&&hasOwn.call(value,"__await")){return Promise.resolve(value.__await).then(function(value){invoke("next",value,resolve,reject);},function(err){invoke("throw",err,resolve,reject);});}return Promise.resolve(value).then(function(unwrapped){result.value=unwrapped;resolve(result);},reject);}}var previousPromise;function enqueue(method,arg){function callInvokeWithMethodAndArg(){return new Promise(function(resolve,reject){invoke(method,arg,resolve,reject);});}return previousPromise=previousPromise?previousPromise.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg();}this._invoke=enqueue;}defineIteratorMethods(AsyncIterator.prototype);AsyncIterator.prototype[asyncIteratorSymbol]=function(){return this;};runtime.AsyncIterator=AsyncIterator;runtime.async=function(innerFn,outerFn,self,tryLocsList){var iter=new AsyncIterator(wrap(innerFn,outerFn,self,tryLocsList));return runtime.isGeneratorFunction(outerFn)?iter:iter.next().then(function(result){return result.done?result.value:iter.next();});};function makeInvokeMethod(innerFn,self,context){var state=GenStateSuspendedStart;return function invoke(method,arg){if(state===GenStateExecuting){throw new Error("Generator is already running");}if(state===GenStateCompleted){if(method==="throw"){throw arg;}return doneResult();}context.method=method;context.arg=arg;while(true){var delegate=context.delegate;if(delegate){var delegateResult=maybeInvokeDelegate(delegate,context);if(delegateResult){if(delegateResult===ContinueSentinel)continue;return delegateResult;}}if(context.method==="next"){context.sent=context._sent=context.arg;}else if(context.method==="throw"){if(state===GenStateSuspendedStart){state=GenStateCompleted;throw context.arg;}context.dispatchException(context.arg);}else if(context.method==="return"){context.abrupt("return",context.arg);}state=GenStateExecuting;var record=tryCatch(innerFn,self,context);if(record.type==="normal"){state=context.done?GenStateCompleted:GenStateSuspendedYield;if(record.arg===ContinueSentinel){continue;}return{value:record.arg,done:context.done};}else if(record.type==="throw"){state=GenStateCompleted;context.method="throw";context.arg=record.arg;}}};}function maybeInvokeDelegate(delegate,context){var method=delegate.iterator[context.method];if(method===undefined){context.delegate=null;if(context.method==="throw"){if(delegate.iterator.return){context.method="return";context.arg=undefined;maybeInvokeDelegate(delegate,context);if(context.method==="throw"){return ContinueSentinel;}}context.method="throw";context.arg=new TypeError("The iterator does not provide a 'throw' method");}return ContinueSentinel;}var record=tryCatch(method,delegate.iterator,context.arg);if(record.type==="throw"){context.method="throw";context.arg=record.arg;context.delegate=null;return ContinueSentinel;}var info=record.arg;if(!info){context.method="throw";context.arg=new TypeError("iterator result is not an object");context.delegate=null;return ContinueSentinel;}if(info.done){context[delegate.resultName]=info.value;context.next=delegate.nextLoc;if(context.method!=="return"){context.method="next";context.arg=undefined;}}else{return info;}context.delegate=null;return ContinueSentinel;}defineIteratorMethods(Gp);Gp[toStringTagSymbol]="Generator";Gp[iteratorSymbol]=function(){return this;};Gp.toString=function(){return"[object Generator]";};function pushTryEntry(locs){var entry={tryLoc:locs[0]};if(1 in locs){entry.catchLoc=locs[1];}if(2 in locs){entry.finallyLoc=locs[2];entry.afterLoc=locs[3];}this.tryEntries.push(entry);}function resetTryEntry(entry){var record=entry.completion||{};record.type="normal";delete record.arg;entry.completion=record;}function Context(tryLocsList){this.tryEntries=[{tryLoc:"root"}];tryLocsList.forEach(pushTryEntry,this);this.reset(true);}runtime.keys=function(object){var keys=[];for(var key in object){keys.push(key);}keys.reverse();return function next(){while(keys.length){var key=keys.pop();if(key in object){next.value=key;next.done=false;return next;}}next.done=true;return next;};};function values(iterable){if(iterable){var iteratorMethod=iterable[iteratorSymbol];if(iteratorMethod){return iteratorMethod.call(iterable);}if(typeof iterable.next==="function"){return iterable;}if(!isNaN(iterable.length)){var i=-1,next=function next(){while(++i<iterable.length){if(hasOwn.call(iterable,i)){next.value=iterable[i];next.done=false;return next;}}next.value=undefined;next.done=true;return next;};return next.next=next;}}return{next:doneResult};}runtime.values=values;function doneResult(){return{value:undefined,done:true};}Context.prototype={constructor:Context,reset:function reset(skipTempReset){this.prev=0;this.next=0;this.sent=this._sent=undefined;this.done=false;this.delegate=null;this.method="next";this.arg=undefined;this.tryEntries.forEach(resetTryEntry);if(!skipTempReset){for(var name in this){if(name.charAt(0)==="t"&&hasOwn.call(this,name)&&!isNaN(+name.slice(1))){this[name]=undefined;}}}},stop:function stop(){this.done=true;var rootEntry=this.tryEntries[0];var rootRecord=rootEntry.completion;if(rootRecord.type==="throw"){throw rootRecord.arg;}return this.rval;},dispatchException:function dispatchException(exception){if(this.done){throw exception;}var context=this;function handle(loc,caught){record.type="throw";record.arg=exception;context.next=loc;if(caught){context.method="next";context.arg=undefined;}return!!caught;}for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];var record=entry.completion;if(entry.tryLoc==="root"){return handle("end");}if(entry.tryLoc<=this.prev){var hasCatch=hasOwn.call(entry,"catchLoc");var hasFinally=hasOwn.call(entry,"finallyLoc");if(hasCatch&&hasFinally){if(this.prev<entry.catchLoc){return handle(entry.catchLoc,true);}else if(this.prev<entry.finallyLoc){return handle(entry.finallyLoc);}}else if(hasCatch){if(this.prev<entry.catchLoc){return handle(entry.catchLoc,true);}}else if(hasFinally){if(this.prev<entry.finallyLoc){return handle(entry.finallyLoc);}}else{throw new Error("try statement without catch or finally");}}}},abrupt:function abrupt(type,arg){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc<=this.prev&&hasOwn.call(entry,"finallyLoc")&&this.prev<entry.finallyLoc){var finallyEntry=entry;break;}}if(finallyEntry&&(type==="break"||type==="continue")&&finallyEntry.tryLoc<=arg&&arg<=finallyEntry.finallyLoc){finallyEntry=null;}var record=finallyEntry?finallyEntry.completion:{};record.type=type;record.arg=arg;if(finallyEntry){this.method="next";this.next=finallyEntry.finallyLoc;return ContinueSentinel;}return this.complete(record);},complete:function complete(record,afterLoc){if(record.type==="throw"){throw record.arg;}if(record.type==="break"||record.type==="continue"){this.next=record.arg;}else if(record.type==="return"){this.rval=this.arg=record.arg;this.method="return";this.next="end";}else if(record.type==="normal"&&afterLoc){this.next=afterLoc;}return ContinueSentinel;},finish:function finish(finallyLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.finallyLoc===finallyLoc){this.complete(entry.completion,entry.afterLoc);resetTryEntry(entry);return ContinueSentinel;}}},"catch":function _catch(tryLoc){for(var i=this.tryEntries.length-1;i>=0;--i){var entry=this.tryEntries[i];if(entry.tryLoc===tryLoc){var record=entry.completion;if(record.type==="throw"){var thrown=record.arg;resetTryEntry(entry);}return thrown;}}throw new Error("illegal catch attempt");},delegateYield:function delegateYield(iterable,resultName,nextLoc){this.delegate={iterator:values(iterable),resultName:resultName,nextLoc:nextLoc};if(this.method==="next"){this.arg=undefined;}return ContinueSentinel;}};}(function(){return this;}()||Function("return this")());if(typeof global!=='undefined')global.window=global;if(!window.performance)window.performance={now:function(startOffset){return function(_){return Date.now()-startOffset;};}(Date.now())};var decodeText=window.TextDecoder?TextDecoder.prototype.decode.bind(new TextDecoder('utf-8')):function(array){var out='',idx=array.length;while(idx--){out=String.fromCharCode(array[idx])+out;}return out;};if(!Object.keys)Object.keys=function(obj){var keys=[];for(var key in obj){keys.push(key);}return keys;};if(!Object.values)Object.values=function(target){return Object.keys(target).map(function(key){return target[key];});};Object.deepEquals=function(a,b){if(!a||!b||(typeof a==="undefined"?"undefined":_typeof(a))!=='object'||(typeof b==="undefined"?"undefined":_typeof(b))!=='object')return a===b;var k1=Object.keys(a),k2=Object.keys(b);if(k1.length!==k2.length)return false;for(var i=0;i<k1.length;i++){if(!Object.deepEquals(a[k1[i]],b[k2[i]]))return false;}return true;};Array.prototype.remove=function(){for(var _len=arguments.length,elements=Array(_len),_key=0;_key<_len;_key++){elements[_key]=arguments[_key];}var idx=elements.length;while(idx--){var index=this.indexOf(elements[idx]);if(index!==-1)this.splice(index,1);}return this;};Array.range=function(from,to){if(to===undefined){to=from;from=0;}var result=[];for(var i=from,c=0;i<to;i++,c++){result[c]=i;}return result;};Array.prototype.shuffle=function(){for(var j,i=this.length;i;j=Math.random()*i--|0,(_ref=[this[j],this[i]],this[i]=_ref[0],this[j]=_ref[1],_ref)){var _ref;}return this;};Array.prototype.flatten=function(){var out=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];for(var length=this.length,i=0;i<length;i++){for(var inner=this[i],innerLength=inner.length,j=0;j<innerLength;j++){out.push(inner[j]);}}return out;};Array.prototype.unique=function(uniqueBy){var result=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var lookupMap=Object.create(null);for(var length=this.length,i=0;i<length;i++){var value=this[i],fieldValue=uniqueBy(value);if(lookupMap[fieldValue])continue;lookupMap[fieldValue]=true;result.push(value);}return result;};Function.prototype.once=function(){var original=this;return function(){var _original;if(original===null)return false;for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}(_original=original).call.apply(_original,[this].concat(args));original=null;};};Function.prototype.if=function(assert){var original=this;return function(){for(var _len3=arguments.length,args=Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}if(assert.call.apply(assert,[this].concat(args)))original.call.apply(original,[this].concat(args));};};Function.prototype.extend=function(base){var original=this;return base?function(){for(var _len4=arguments.length,args=Array(_len4),_key4=0;_key4<_len4;_key4++){args[_key4]=arguments[_key4];}original.call.apply(original,[this].concat(args));return base.call.apply(base,[this].concat(args));}:this;};var tie=function tie(target){for(var _len5=arguments.length,modules=Array(_len5>1?_len5-1:0),_key5=1;_key5<_len5;_key5++){modules[_key5-1]=arguments[_key5];}modules.filter(function(instance){return!!instance;}).forEach(function(module){return Object.getOwnPropertyNames(module).forEach(function(property){return Object.defineProperty(target,property,Object.getOwnPropertyDescriptor(module,property));});});return target;};var factory=function(core){var map=Object.create(null);return tie(core,{declare:function declare(location,provider){return map[location]?map[location].push(provider):map[location]=[provider],core;},build:function build(location){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Object.create(null);return!map[location]?null:map[location].reduce(function(target,provider){return tie(target,provider(target,options)||{});},Object.create(null));}});}(Object.create(null));var Queue=function Queue(){var queue=Object.create(Queue.prototype);queue.front=[];queue.tail=[];queue.frontIdx=0;queue.tailIdx=0;return queue;};Queue.prototype=tie(Object.create(null),{push:function push(item){this.front[this.frontIdx++]=item;return this;},shift:function shift(){if(this.tailIdx>=this.tail.length){this.front.length=this.frontIdx;var front=this.tail;this.tail=this.front;this.front=front;this.frontIdx=0;this.tailIdx=0;}if(this.tail.length<=0)return null;var item=this.tail[this.tailIdx];this.tail[this.tailIdx++]=undefined;return item;},get length(){return this.frontIdx+this.tail.length-this.tailIdx;},hasElement:function hasElement(el){return this.front.indexOf(el)!=-1||this.tail.indexOf(el)!=-1;}});var worker=function(core){var queue=Queue();var requestId=null;var drain=function drain(){var callback=null;while(callback=queue.shift()){callback();}requestId=null;};return tie(core,{schedule:function schedule(callback){return queue.push(callback),requestId||(requestId=window.setTimeout(drain,0));}});}(Object.create(null));var defer=function defer(callback){var time=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;return time?window.setTimeout(callback,time):worker.schedule(callback);};var Signal=function Signal(executor){var signal=Object.create(Signal.prototype);signal.status=Signal.PENDING;if(executor)executor(signal.onSuccess.bind(signal),signal.onError.bind(signal));return signal;};Signal.PENDING=0;Signal.SUCCEEDED=1;Signal.FAILED=2;Signal.prototype=tie(Object.create(null),{callHandler:function callHandler(handler,value){try{var _result=handler(value);if(_result instanceof Signal)_result.listen(this.onSuccess.bind(this),this.onError.bind(this));else this.onSuccess(_result);}catch(error){this.onError(error);}},listen:function listen(onSuccess,onError){var defer$$1=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;if(this.status===Signal.SUCCEEDED)onSuccess(this.value);else if(this.status===Signal.FAILED)onError(this.value);else this.nextNode={next:this.nextNode,defer:defer$$1,onSuccess:onSuccess,onError:onError};},onSuccess:function onSuccess(value){if(this.status!==Signal.PENDING)return false;this.status=Signal.SUCCEEDED;this.value=value;while(this.nextNode){this.nextNode=(this.nextNode.defer?defer(this.nextNode.onSuccess.bind(null,value)):this.nextNode.onSuccess(value),this.nextNode.next);}},onError:function onError(error){if(this.status!==Signal.PENDING)return false;this.status=Signal.FAILED;this.value=error;while(this.nextNode){this.nextNode=(this.nextNode.defer?defer(this.nextNode.onError.bind(null,error)):this.nextNode.onError(error),this.nextNode.next);}},pipe:function pipe(transform,defer$$1){var next=Signal();this.listen(next.callHandler.bind(next,transform),next.onError.bind(next),defer$$1);return next;},fix:function fix(transform,defer$$1){var next=Signal();this.listen(next.onSuccess.bind(next),next.callHandler.bind(next,transform),defer$$1);return next;},filter:function filter(validate){var next=Signal();this.listen(next.onSuccess.bind(next).if(validate),next.onError.bind(next));return next;},split:function split(){var _this=this;for(var _len6=arguments.length,signals=Array(_len6),_key6=0;_key6<_len6;_key6++){signals[_key6]=arguments[_key6];}return Signal.all(signals.reverse().map(function(transform){var intermediate=Signal();_this.listen(intermediate.callHandler.bind(intermediate,transform),intermediate.onError.bind(intermediate));return intermediate;}));}});Signal.just=function(value){return Signal(function(succeed,fail){return succeed(value);});};Signal.error=function(error){return Signal(function(succeed,fail){return fail(error);});};Signal.delay=function(time){return Signal(function(succeed){return window.setTimeout(succeed,time);});};Signal.all=function(signals){return Signal(function(succeed,fail){var values=[];signals.forEach(function(signal,idx){return signal.listen(function(value){return values[idx]=value,signals.every(function(s){return s.status!==Signal.PENDING;})&&succeed(values);},function(error){return fail(error);});});});};var onReady=function onReady(_){return Signal(function(resolve){return window.document.readyState==='complete'?resolve():window.addEventListener('load',resolve);});};var Stream=function Stream(emitter){var stream=Object.create(Stream.prototype);if(emitter)defer(emitter.bind(stream,stream.onSuccess.bind(stream)));return stream;};Stream.prototype=tie(Object.create(null),{onSuccess:function onSuccess(value){var node=this.nextNode;while(node){node=(node.defer?defer(node.onSuccess.bind(null,value)):node.onSuccess(value),node.nextNode);}},onError:function onError(error){var node=this.nextNode;while(node){node=(node.defer?defer(node.onError.bind(null,error)):node.onError(error),node.nextNode);}},attach:function attach(onSuccess,onError){var defer$$1=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var node=this.nextNode={prevNode:this,nextNode:this.nextNode,onSuccess:onSuccess,onError:onError,defer:defer$$1};if(node.nextNode)node.nextNode.prevNode=node;return node;},detach:function detach(node){if(!node)return false;if(node.prevNode)node.prevNode.nextNode=node.nextNode;if(node.nextNode)node.nextNode.prevNode=node.prevNode;},callHandler:function callHandler(handler,value){try{var _result2=handler.call(this,value);if(_result2 instanceof Stream)_result2.attach(this.onSuccess.bind(this),this.onError.bind(this));else if(_result2 instanceof Signal)_result2.listen(this.onSuccess.bind(this),this.onError.bind(this));else this.onSuccess(_result2);}catch(error){this.onError(error);}},pipe:function pipe(transform,defer$$1){var next=Stream();this.attach(next.callHandler.bind(next,transform),next.onError.bind(next),defer$$1);return next;},fix:function fix(transform,defer$$1){var next=Stream();this.attach(next.onSuccess.bind(next),next.callHandler.bind(next,transform),defer$$1);return next;},default:function _default(value){this.attach=function(onSuccess,onError){defer(onSuccess.bind(null,value));Stream.prototype.attach.call(this,onSuccess,onError);};return this;},once:function once(){var _this2=this;var next=Stream(),node=this.attach(function(value){return _this2.detach(node),next.onSuccess(value);},function(error){return _this2.detach(node),next.onError(error);});return next;},until:function until(initCallback){var next=Stream(),node=this.attach(next.onSuccess.bind(next),next.onError.bind(next));initCallback(this.detach.bind(this,node).once());return next;},filter:function filter(validate){var next=Stream();this.attach(next.onSuccess.bind(next).if(validate),next.onError.bind(next));return next;},clear:function clear(){while(this.nextNode){this.detach(this.nextNode);}},buffer:function buffer(bufferSize,executor){var valueCount=0;var next=Stream(),buffer=[],emitValue=function emitValue(value){return valueCount++,Signal(executor.bind(null,value)).listen(spreadValue,spreadError);},spreadValue=function spreadValue(value){return valueCount--,buffer.length==0||emitValue(buffer.shift()),next.onSuccess.call(next,value);},spreadError=function spreadError(error){return valueCount--,buffer.length==0||emitValue(buffer.shift()),next.onError.call(next,error);};this.attach(function(value){return valueCount<bufferSize?emitValue(value):buffer.push(value);},next.onError.bind(next));return next;}});Stream.minInterval=function(minTime){var timeoutId=null;return function(_){return Signal(function(resolve){return window.clearTimeout(timeoutId),timeoutId=window.setTimeout(resolve,minTime);});};};Stream.from=function(array){return Stream(function(consume){return array.forEach(function(value){return consume(value);});});};var Pool=function Pool(factoryFunction){var pool=[];var index=0;return{get size(){return pool.length;},allocate:function allocate(size){var extend=Math.max(pool.length-size,0);while(extend--){pool.push(factoryFunction(index++));}},clear:function clear(_){return pool.length=0;},obtain:function obtain(_){return pool.pop()||factoryFunction(index++);},release:function release(){return pool.push.apply(pool,arguments);}};};var PoolManager=function PoolManager(globalPool){var pool=Pool(function(id){var manager=Object.create(null),trackedItems=[];var item=null;return Object.assign(manager,{release:function release(_){globalPool.release.apply(globalPool,trackedItems);pool.release(manager);trackedItems.length=0;},obtain:function obtain(_){item=globalPool.obtain();trackedItems.push(item);return item;}});});return pool.obtain.bind(pool);};var ObjectPool=function ObjectPool(factoryFunction){var pool=Pool(factoryFunction);Object.assign(pool,{obtain:function(obtain){var item=obtain();item.release=pool.release.bind(pool,item);return item;}(pool.obtain)});return pool;};var snapshot=function snapshot(object){return JSON.parse(JSON.stringify(object||null));};var genRandomFloat=function genRandomFloat(min,max){var rand=arguments.length>2&&arguments[2]!==undefined?arguments[2]:Math.random;return rand()*(max-min)+min;};var genRandomInt=function genRandomInt(min,max){var rand=arguments.length>2&&arguments[2]!==undefined?arguments[2]:Math.random;return Math.floor(rand()*(max-min+1))+min;};var unCapitalize=function unCapitalize(string){return string.replace(/\w\S*/g,function(word){return word.charAt(0).toLowerCase()+word.substr(1);});};var path=function path(fullpath){return{get extension(){return fullpath.split('.').pop();},get base(){return fullpath.substr(0,fullpath.lastIndexOf('/')+1)||fullpath;}};};function URLQuery(url){url=url?Object.assign(document.createElement('a'),{href:url}):location;var out=Object.create(null);var query=url.search.substring(1);var regex=/[?&]?([^=]+)=([^&]*)/g;for(var tokens;tokens=regex.exec(query);out[decodeURIComponent(tokens[1])]=decodeURIComponent(tokens[2])){}return out;}var util=Object.freeze({decodeText:decodeText,tie:tie,factory:factory,Queue:Queue,worker:worker,defer:defer,Signal:Signal,onReady:onReady,Stream:Stream,Pool:Pool,PoolManager:PoolManager,ObjectPool:ObjectPool,snapshot:snapshot,genRandomFloat:genRandomFloat,genRandomInt:genRandomInt,unCapitalize:unCapitalize,path:path,URLQuery:URLQuery});Math.clamp=function(v,min,max){return v<min?min:v>max?max:v;};Math.mod=function(n,m){return(n%m+m)%m;};var unrollVectorBinaryOperator=function unrollVectorBinaryOperator(length,defaultValue,operator){var callable=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;return new Function('v0','v1','out',["out = out || this()"].concat(Array(length).fill().map(function(_,idx){return callable?"out["+idx+"] = "+operator+"(v0["+idx+"],v1["+idx+"])":"out["+idx+"] = v0["+idx+"] "+operator+" v1["+idx+"]";})).concat('return out').join(';')).bind(defaultValue);};var unrollVectorScalarOperator=function unrollVectorScalarOperator(length,defaultValue,operator){var callable=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;return new Function('v0','s','out',["out = out || this()"].concat(Array(length).fill().map(function(_,idx){return callable?"out["+idx+"] = "+operator+"(v0["+idx+"],s)":"out["+idx+"] = v0["+idx+"] "+operator+" s";})).concat('return out').join(';')).bind(defaultValue);};var unrollVectorUnaryOperator=function unrollVectorUnaryOperator(length,defaultValue,operator){var callable=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;return new Function('v0','out',["out = out || this()"].concat(Array(length).fill().map(function(_,idx){return callable?"out["+idx+"] = "+operator+"(v0["+idx+"])":"out["+idx+"] = "+operator+" v0["+idx+"]";})).concat('return out').join(';')).bind(defaultValue);};var lerp=function lerp(v1,v2,f){return v1+f*(v2-v1);};var generateUUID=function(rng){var id=0;return function(_){return++id;};var lookupTable=Array(256).fill().map(function(_,i){return(i<16?'0':'')+i.toString(16);});var randomNumbers=new Uint32Array(4);var formatUUID=function formatUUID(_ref2){var _ref3=_slicedToArray(_ref2,4),d0=_ref3[0],d1=_ref3[1],d2=_ref3[2],d3=_ref3[3];return lookupTable[d0&0xFF]+lookupTable[d0>>8&0xFF]+lookupTable[d0>>16&0xFF]+lookupTable[d0>>24&0xFF]+'-'+lookupTable[d1&0xFF]+lookupTable[d1>>8&0xFF]+'-'+lookupTable[d1>>16&0x0F|0x40]+lookupTable[d1>>24&0xFF]+'-'+lookupTable[d2&0x3F|0x80]+lookupTable[d2>>8&0xFF]+'-'+lookupTable[d2>>16&0xFF]+lookupTable[d2>>24&0xFF]+lookupTable[d3&0xFF]+lookupTable[d3>>8&0xFF]+lookupTable[d3>>16&0xFF]+lookupTable[d3>>24&0xFF];};return function(_){randomNumbers[0]=Math.random()*0x100000000>>>0;randomNumbers[1]=Math.random()*0x100000000>>>0;randomNumbers[2]=Math.random()*0x100000000>>>0;randomNumbers[3]=Math.random()*0x100000000>>>0;return formatUUID(randomNumbers);};}(Math.random);function greatestCommonDivisor(a,b){a=Math.abs(a);b=Math.abs(b);while(b>1e-6){var temp=b;b=a%b;a=temp;}return a;}var HALF_DEG_RAD=0.5*Math.PI/180;var DEG_RAD=Math.PI/180;var EPSILON=1e-6;var SQRT2=Math.sqrt(2);var vec2=function vec2(){for(var _len7=arguments.length,args=Array(_len7),_key7=0;_key7<_len7;_key7++){args[_key7]=arguments[_key7];}return new Float32Array(args.length?args.length===2?args:Array(2).fill(args[0]):2);};vec2.copy=unrollVectorUnaryOperator(2,vec2,'');vec2.scale=unrollVectorScalarOperator(2,vec2,'*');vec2.add=unrollVectorBinaryOperator(2,vec2,'+');vec2.subtract=unrollVectorBinaryOperator(2,vec2,'-');vec2.multiply=unrollVectorBinaryOperator(2,vec2,'*');vec2.divide=unrollVectorBinaryOperator(2,vec2,'/');vec2.min=unrollVectorBinaryOperator(2,vec2,'Math.min',true);vec2.max=unrollVectorBinaryOperator(2,vec2,'Math.max',true);vec2.sqrtLength=function(v){return v[0]*v[0]+v[1]*v[1];};vec2.distance=function(v){return Math.sqrt(vec2.sqrtLength(v));};vec2.normalize=function(v){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec2();var x=v[0],y=v[1],sqrt=Math.sqrt(x*x+y*y),invSqrt=sqrt?1.0/sqrt:0;out[0]=x*invSqrt;out[1]=y*invSqrt;return out;};vec2.dot=function(a,b){return a[0]*b[0]+a[1]*b[1];};vec2.lerp=function(a,b,f){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:vec2();var ax=a[0],ay=a[1];out[0]=ax+f*(b[0]-ax);out[1]=ay+f*(b[1]-ay);return out;};vec2.direction=function(angle){var scale=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:vec2();out[0]=Math.cos(angle)*scale;out[1]=Math.sin(angle)*scale;return out;};vec2.truncate=function(v,maxLength){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:vec2();var scale=Math.min(maxLength/vec2.distance(v),1.0);out[0]=scale*v[0];out[1]=scale*v[1];return out;};vec2.ZERO=vec2();vec2.rotation=function(v){return Math.atan2(v[1],v[0]);};vec2.fromAngle=function(angle,length){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:vec2();out[0]=Math.cos(angle)*length;out[1]=Math.sin(angle)*length;return out;};vec2.angle=function(a,b){return Math.atan2(a[0]*b[1]-a[1]*b[0],a[0]*b[0]+a[1]*b[1]);};vec2.rotate=function(vec,angle){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:vec2();out[0]=Math.cos(angle)*vec[0]-Math.sin(angle)*vec[1];out[1]=Math.sin(angle)*vec[0]+Math.cos(angle)*vec[1];return out;};var vec3$1=function vec3$1(){for(var _len8=arguments.length,args=Array(_len8),_key8=0;_key8<_len8;_key8++){args[_key8]=arguments[_key8];}return new Float32Array(args.length?args.length===3?args:Array(3).fill(args[0]):3);};vec3$1.copy=unrollVectorUnaryOperator(3,vec3$1,'');vec3$1.abs=unrollVectorUnaryOperator(3,vec3$1,'Math.abs',true);vec3$1.scale=unrollVectorScalarOperator(3,vec3$1,'*');vec3$1.add=unrollVectorBinaryOperator(3,vec3$1,'+');vec3$1.subtract=unrollVectorBinaryOperator(3,vec3$1,'-');vec3$1.multiply=unrollVectorBinaryOperator(3,vec3$1,'*');vec3$1.divide=unrollVectorBinaryOperator(3,vec3$1,'/');vec3$1.min=unrollVectorBinaryOperator(3,vec3$1,'Math.min',true);vec3$1.max=unrollVectorBinaryOperator(3,vec3$1,'Math.max',true);vec3$1.sqrtLength=function(v){return v[0]*v[0]+v[1]*v[1]+v[2]*v[2];};vec3$1.distance=function(v){return Math.sqrt(vec3$1.sqrtLength(v));};vec3$1.manhattan=function(v){return Math.abs(v[0])+Math.abs(v[1])+Math.abs(v[2]);};vec3$1.normalize=function(v){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec3$1();var x=v[0],y=v[1],z=v[2],sqrt=Math.sqrt(x*x+y*y+z*z),invSqrt=sqrt?1.0/sqrt:0;out[0]=x*invSqrt;out[1]=y*invSqrt;out[2]=z*invSqrt;return out;};vec3$1.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2];};vec3$1.cross=function(a,b){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:vec3$1();var ax=a[0],ay=a[1],az=a[2],bx=b[0],by=b[1],bz=b[2];out[0]=ay*bz-az*by;out[1]=az*bx-ax*bz;out[2]=ax*by-ay*bx;return out;};vec3$1.lerp=function(a,b,f){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:vec3$1();var ax=a[0],ay=a[1],az=a[2];out[0]=ax+f*(b[0]-ax);out[1]=ay+f*(b[1]-ay);out[2]=az+f*(b[2]-az);return out;};vec3$1.transformQuat=function(v,q){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:vec3$1();var x=v[0],y=v[1],z=v[2],qx=q[0],qy=q[1],qz=q[2],qw=q[3],ix=qw*x+qy*z-qz*y,iy=qw*y+qz*x-qx*z,iz=qw*z+qx*y-qy*x,iw=-qx*x-qy*y-qz*z;out[0]=ix*qw+iw*-qx+iy*-qz-iz*-qy;out[1]=iy*qw+iw*-qy+iz*-qx-ix*-qz;out[2]=iz*qw+iw*-qz+ix*-qy-iy*-qx;return out;};vec3$1.eyeUp=function(q){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec3$1();var x=q[0],y=q[1],z=q[2],w=q[3];out[0]=2*(x*y-w*z);out[1]=1-2*(x*x+z*z);out[2]=2*(y*z+w*x);return out;};vec3$1.eyeForward=function(q){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec3$1();var x=q[0],y=q[1],z=q[2],w=q[3];out[0]=2*(x*z-w*y);out[1]=2*(y*x+w*x);out[2]=1-2*(x*x+y*y);return out;};vec3$1.eyeRight=function(q){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec3$1();var x=q[0],y=q[1],z=q[2],w=q[3];out[0]=1-2*(y*y-z*z);out[1]=2*(x*y+w*z);out[2]=2*(x*z+w*y);return out;};vec3$1.UP=vec3$1(0,1,0);vec3$1.LEFT=vec3$1(1,0,0);vec3$1.eulerFromMat3=function(mat){var order=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'XYZ';var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:vec3$1();var m00=mat[0],m01=mat[4],m02=mat[8],m10=mat[1],m11=mat[5],m12=mat[9],m20=mat[2],m21=mat[6],m22=mat[10];if(order==='XYZ'){out[1]=Math.asin(Math.clamp(m02,-1,1));if(Math.abs(m02)<0.99999){out[0]=Math.atan2(-m12,m22);out[2]=Math.atan2(-m01,m00);}else{out[0]=Math.atan2(m21,m11);out[2]=0;}}else if(order==='YXZ'){out[0]=Math.asin(-Math.clamp(m12,-1,1));if(Math.abs(m12)<0.99999){out[1]=Math.atan2(m02,m22);out[2]=Math.atan2(m10,m11);}else{out[1]=Math.atan2(-m20,m00);out[2]=0;}}else if(order==='ZXY'){out[0]=Math.asin(Math.clamp(m21,-1,1));if(Math.abs(m21)<0.99999){out[1]=Math.atan2(-m20,m22);out[2]=Math.atan2(-m01,m11);}else{out[1]=0;out[2]=Math.atan2(m10,m00);}}else if(order==='ZYX'){out[1]=Math.asin(-Math.clamp(m20,-1,1));if(Math.abs(m20)<0.99999){out[0]=Math.atan2(m21,m22);out[2]=Math.atan2(m10,m00);}else{out[0]=0;out[2]=Math.atan2(-m01,m11);}}else if(order==='YZX'){out[2]=Math.asin(Math.clamp(m10,-1,1));if(Math.abs(m10)<0.99999){out[0]=Math.atan2(-m12,m11);out[1]=Math.atan2(-m20,m00);}else{out[0]=0;out[1]=Math.atan2(m02,m22);}}else if(order==='XZY'){out[2]=Math.asin(-Math.clamp(m01,-1,1));if(Math.abs(m01)<0.99999){out[0]=Math.atan2(m21,m11);out[1]=Math.atan2(m02,m00);}else{out[0]=Math.atan2(-m12,m22);out[1]=0;}}return out;};vec3$1.translationFromMat4=function(mat){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec3$1();out[0]=mat[12];out[1]=mat[13];out[2]=mat[14];return out;};vec3$1.scaleFromMat4=function(mat){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec3$1();var m00=mat[0],m01=mat[1],m02=mat[2],m10=mat[4],m11=mat[5],m12=mat[6],m20=mat[8],m21=mat[9],m22=mat[10];out[0]=Math.sqrt(m00*m00+m01*m01+m02*m02);out[1]=Math.sqrt(m10*m10+m11*m11+m12*m12);out[2]=Math.sqrt(m20*m20+m21*m21+m22*m22);return out;};vec3$1.truncate=function(v,maxLength){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:vec3$1();var scale=Math.min(maxLength/vec3$1.distance(v),1.0);out[0]=scale*v[0];out[1]=scale*v[1];out[2]=scale*v[2];return out;};vec3$1.unproject=function(v,m){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:vec3$1();var x=v[0],y=v[1],z=v[2],m00=m[0],m01=m[1],m02=m[2],m03=m[3],m10=m[4],m11=m[5],m12=m[6],m13=m[7],m20=m[8],m21=m[9],m22=m[10],m23=m[11],m30=m[12],m31=m[13],m32=m[14],m33=m[15],w=x*m03+y*m13+z*m23+m33,invW=w?1/w:0;out[0]=(x*m00+y*m10+z*m20+m30)*invW;out[1]=(x*m01+y*m11+z*m21+m31)*invW;out[2]=(x*m02+y*m12+z*m22+m32)*invW;return out;};var vec4=function vec4(){for(var _len9=arguments.length,args=Array(_len9),_key9=0;_key9<_len9;_key9++){args[_key9]=arguments[_key9];}return new Float32Array(args.length?args.length===4?args:Array(4).fill(args[0]):4);};vec4.copy=unrollVectorUnaryOperator(4,vec4,'');vec4.scale=unrollVectorScalarOperator(4,vec4,'*');vec4.add=unrollVectorBinaryOperator(4,vec4,'+');vec4.subtract=unrollVectorBinaryOperator(4,vec4,'-');vec4.multiply=unrollVectorBinaryOperator(4,vec4,'*');vec4.divide=unrollVectorBinaryOperator(4,vec4,'/');vec4.sqrtLength=function(v){return v[0]*v[0]+v[1]*v[1]+v[2]*v[2]+v[3]*v[3];};vec4.distance=function(v){return Math.sqrt(vec4.sqrtLength(v));};vec4.dot=function(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3];};vec4.lerp=function(a,b,f){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:vec4();var ax=a[0],ay=a[1],az=a[2],aw=a[3];out[0]=ax+f*(b[0]-ax);out[1]=ay+f*(b[1]-ay);out[2]=az+f*(b[2]-az);out[3]=aw+f*(b[3]-aw);return out;};vec4.normalize=function(v){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec4();var x=v[0],y=v[1],z=v[2],w=v[3],sqrt=Math.sqrt(x*x+y*y+z*z+w*w),invSqrt=sqrt?1.0/sqrt:0;out[0]=x*invSqrt;out[1]=y*invSqrt;out[2]=z*invSqrt;out[3]=w*invSqrt;return out;};vec4.transform=function(v,m){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:vec4();var x=v[0],y=v[1],z=v[2],w=v[3]===undefined?1:v[3];out[0]=m[0]*x+m[4]*y+m[8]*z+m[12]*w;out[1]=m[1]*x+m[5]*y+m[9]*z+m[13]*w;out[2]=m[2]*x+m[6]*y+m[10]*z+m[14]*w;out[3]=m[3]*x+m[7]*y+m[11]*z+m[15]*w;return out;};vec4.transformQuat=function(v,q){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:vec4();var x=v[0],y=v[1],z=v[2],rx=q[0],ry=q[1],rz=q[2],rw=q[3],ix=rw*x+ry*z-rz*y,iy=rw*y+rz*x-rx*z,iz=rw*z+rx*y-ry*x,iw=-rx*x-ry*y-rz*z;out[0]=ix*rw+iw*-rx+iy*-rz-iz*-ry;out[1]=iy*rw+iw*-ry+iz*-rx-ix*-rz;out[2]=iz*rw+iw*-rz+ix*-ry-iy*-rx;out[3]=v[3]===undefined?1:v[3];return out;};var mat2=function mat2(){for(var _len10=arguments.length,args=Array(_len10),_key10=0;_key10<_len10;_key10++){args[_key10]=arguments[_key10];}return new Float32Array(args.length?args.length===4?args:Array(4).fill(args[0]):4);};mat2.copy=unrollVectorUnaryOperator(4,mat2,'');mat2.identity=function(){var out=arguments.length>0&&arguments[0]!==undefined?arguments[0]:mat2();out[0]=1;out[1]=0;out[2]=0;out[3]=1;return out;};mat2.transpose=function(m){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:mat2();if(out===m){out[1]=m[2];out[2]=m1;}else{out[0]=m[0];out[1]=m[2];out[2]=m[1];out[3]=m[3];}return out;};mat2.invert=function(m){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:mat2();var m00=m[0],m01=m[1],m10=m[2],m11=m[3],det=m00*m11-m10*m01,invDet=det?1.0/det:0;out[0]=invDet*m11;out[1]=invDet*-m01;out[2]=invDet*-m10;out[3]=invDet*m00;return out;};var mat3=function mat3(){for(var _len11=arguments.length,args=Array(_len11),_key11=0;_key11<_len11;_key11++){args[_key11]=arguments[_key11];}return new Float32Array(args.length?args.length===9?args:Array(9).fill(args[0]):9);};mat3.copy=unrollVectorUnaryOperator(9,mat3,'');mat3.identity=function(){var out=arguments.length>0&&arguments[0]!==undefined?arguments[0]:mat3();out[0]=1;out[1]=0;out[2]=0;out[3]=0;out[4]=1;out[5]=0;out[6]=0;out[7]=0;out[8]=1;return out;};mat3.transpose=function(m){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:mat3();if(out===m){var tm01=m[1],tm02=m[2],tm12=m[5];out[1]=m[3];out[2]=m[6];out[3]=tm01;out[5]=m[7];out[6]=tm02;out[7]=tm12;}else{out[0]=m[0];out[1]=m[3];out[2]=m[6];out[3]=m[1];out[4]=m[4];out[5]=m[7];out[6]=m[2];out[7]=m[5];out[8]=m[8];}return out;};mat3.invert=function(m){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:mat3();var m00=m[0],m01=m[1],m02=m[2],m10=m[3],m11=m[4],m12=m[5],m20=m[6],m21=m[7],m22=m[8],d01=m22*m11-m12*m21,d11=m12*m20-m22*m10,d21=m21*m10-m11*m20,det=m00*d01+m01*d11+m02*d21,invDet=det?1.0/det:0;out[0]=invDet*d01;out[1]=invDet*(m02*m21-m22*m01);out[2]=invDet*(m12*m01-m02*m11);out[3]=invDet*d11;out[4]=invDet*(m22*m00-m02*m20);out[5]=invDet*(m02*m10-m12*m00);out[6]=invDet*d21;out[7]=invDet*(m01*m20-m21*m00);out[8]=invDet*(m11*m00-m01*m10);return out;};mat3.fromQuat=function(q){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:mat3();var x=q[0],y=q[1],z=q[2],w=q[3],x2=2*x,y2=2*y,z2=2*z,xx=x*x2,yy=y*y2,zz=z*z2,yx=x*y2,zx=x*z2,zy=y*z2,wx=w*x2,wy=w*y2,wz=w*z2;out[0]=1-yy-zz;out[1]=yx+wz;out[2]=zx-wy;out[3]=yx-wz;out[4]=1-xx-zz;out[5]=zy+wx;out[6]=zx+wy;out[7]=zy-wx;out[8]=1-xx-yy;return out;};mat3.fromMat4=function(m){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:mat3();out[0]=m[0];out[1]=m[1];out[2]=m[2];out[3]=m[4];out[4]=m[5];out[5]=m[6];out[6]=m[8];out[7]=m[9];out[8]=m[10];return out;};mat3.multiply=function(m1,m2){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:mat3();var m00=m1[0],m01=m1[1],m02=m1[2],m10=m1[3],m11=m1[4],m12=m1[5],m20=m1[6],m21=m1[7],m22=m1[8];var by0=m2[0],by1=m2[1],by2=m2[2];out[0]=by0*m00+by1*m10+by2*m20;out[1]=by0*m01+by1*m11+by2*m21;out[2]=by0*m02+by1*m12+by2*m22;by0=m2[3],by1=m2[4],by2=m2[5];out[3]=by0*m00+by1*m10+by2*m20;out[4]=by0*m01+by1*m11+by2*m21;out[5]=by0*m02+by1*m12+by2*m22;by0=m2[6],by1=m2[7],by2=m2[8];out[6]=by0*m00+by1*m10+by2*m20;out[7]=by0*m01+by1*m11+by2*m21;out[8]=by0*m02+by1*m12+by2*m22;return out;};var mat4=function mat4(){for(var _len12=arguments.length,args=Array(_len12),_key12=0;_key12<_len12;_key12++){args[_key12]=arguments[_key12];}return new Float32Array(args.length?args.length===16?args:Array(16).fill(args[0]):16);};mat4.copy=unrollVectorUnaryOperator(16,mat4,'');mat4.identity=function(){var out=arguments.length>0&&arguments[0]!==undefined?arguments[0]:mat4();out[0]=1;out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[5]=1;out[6]=0;out[7]=0;out[8]=0;out[9]=0;out[10]=1;out[11]=0;out[12]=0;out[13]=0;out[14]=0;out[15]=1;return out;};mat4.transpose=function(m){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:mat4();if(out===m){var m01=m[1],m02=m[2],m03=m[3],m12=m[6],m13=m[7],m23=m[11];out[1]=m[4];out[2]=m[8];out[3]=m[12];out[4]=m01;out[6]=m[9];out[7]=m[13];out[8]=m02;out[9]=m12;out[11]=m[14];out[12]=m03;out[13]=m13;out[14]=m23;}else{out[0]=m[0];out[1]=m[4];out[2]=m[8];out[3]=m[12];out[4]=m[1];out[5]=m[5];out[6]=m[9];out[7]=m[13];out[8]=m[2];out[9]=m[6];out[10]=m[10];out[11]=m[14];out[12]=m[3];out[13]=m[7];out[14]=m[11];out[15]=m[15];}return out;};mat4.invert=function(m){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:mat4();var m00=m[0],m01=m[1],m02=m[2],m03=m[3],m10=m[4],m11=m[5],m12=m[6],m13=m[7],m20=m[8],m21=m[9],m22=m[10],m23=m[11],m30=m[12],m31=m[13],m32=m[14],m33=m[15],d00=m00*m11-m01*m10,d01=m00*m12-m02*m10,d02=m00*m13-m03*m10,d03=m01*m12-m02*m11,d04=m01*m13-m03*m11,d05=m02*m13-m03*m12,d06=m20*m31-m21*m30,d07=m20*m32-m22*m30,d08=m20*m33-m23*m30,d09=m21*m32-m22*m31,d10=m21*m33-m23*m31,d11=m22*m33-m23*m32,det=d00*d11-d01*d10+d02*d09+d03*d08-d04*d07+d05*d06,invDet=det?1.0/det:0;out[0]=invDet*(m11*d11-m12*d10+m13*d09);out[1]=invDet*(m02*d10-m01*d11-m03*d09);out[2]=invDet*(m31*d05-m32*d04+m33*d03);out[3]=invDet*(m22*d04-m21*d05-m23*d03);out[4]=invDet*(m12*d08-m10*d11-m13*d07);out[5]=invDet*(m00*d11-m02*d08+m03*d07);out[6]=invDet*(m32*d02-m30*d05-m33*d01);out[7]=invDet*(m20*d05-m22*d02+m23*d01);out[8]=invDet*(m10*d10-m11*d08+m13*d06);out[9]=invDet*(m01*d08-m00*d10-m03*d06);out[10]=invDet*(m30*d04-m31*d02+m33*d00);out[11]=invDet*(m21*d02-m20*d04-m23*d00);out[12]=invDet*(m11*d07-m10*d09-m12*d06);out[13]=invDet*(m00*d09-m01*d07+m02*d06);out[14]=invDet*(m31*d01-m30*d03-m32*d00);out[15]=invDet*(m20*d03-m21*d01+m22*d00);return out;};mat4.frustum=function(left,right,bottom,top,zNear,zFar){var out=arguments.length>6&&arguments[6]!==undefined?arguments[6]:mat4();var rl=1/(right-left),tb=1/(top-bottom),nf=1/(zNear-zFar);out[0]=2*zNear*rl;out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[5]=2*zNear*tb;out[6]=0;out[7]=0;out[8]=(right+left)*rl;out[9]=(top+bottom)*tb;out[10]=(zFar+zNear)*nf;out[11]=-1;out[12]=0;out[13]=0;out[14]=2*zFar*zNear*nf;out[15]=0;return out;};mat4.perspective=function(fovy,aspectRatio,zNear,zFar){var out=arguments.length>4&&arguments[4]!==undefined?arguments[4]:mat4();var f=1/Math.tan(fovy/2),nf=1/(zNear-zFar);out[0]=f/aspectRatio;out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[5]=f;out[6]=0;out[7]=0;out[8]=0;out[9]=0;out[10]=(zFar+zNear)*nf;out[11]=-1;out[12]=0;out[13]=0;out[14]=2*zFar*zNear*nf;out[15]=0;return out;};mat4.ortho=function(left,right,bottom,top,zNear,zFar){var out=arguments.length>6&&arguments[6]!==undefined?arguments[6]:mat4();var lr=1/(left-right),bt=1/(bottom-top),nf=1/(zNear-zFar);out[0]=-2*lr;out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[5]=-2*bt;out[6]=0;out[7]=0;out[8]=0;out[9]=0;out[10]=2*nf;out[11]=0;out[12]=(left+right)*lr;out[13]=(top+bottom)*bt;out[14]=(zFar+zNear)*nf;out[15]=1;return out;};mat4.translate=function(mat,v){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:mat4();var x=v[0],y=v[1],z=v[2];out[12]=mat[0]*x+mat[4]*y+mat[8]*z+mat[12];out[13]=mat[1]*x+mat[5]*y+mat[9]*z+mat[13];out[14]=mat[2]*x+mat[6]*y+mat[10]*z+mat[14];out[15]=mat[3]*x+mat[7]*y+mat[11]*z+mat[15];if(out!==mat){out[0]=mat[0];out[1]=mat[1];out[2]=mat[2];out[3]=mat[3];out[4]=mat[4];out[5]=mat[5];out[6]=mat[6];out[7]=mat[7];out[8]=mat[8];out[9]=mat[9];out[10]=mat[10];out[11]=mat[11];}return out;};mat4.fromQuat=function(q){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:mat4();var x=q[0],y=q[1],z=q[2],w=q[3],x2=2*x,y2=2*y,z2=2*z,xx=x*x2,yy=y*y2,zz=z*z2,yx=x*y2,zx=x*z2,zy=y*z2,wx=w*x2,wy=w*y2,wz=w*z2;out[0]=1-yy-zz;out[1]=yx+wz;out[2]=zx-wy;out[3]=0;out[4]=yx-wz;out[5]=1-xx-zz;out[6]=zy+wx;out[7]=0;out[8]=zx+wy;out[9]=zy-wx;out[10]=1-xx-yy;out[11]=0;out[12]=0;out[13]=0;out[14]=0;out[15]=1;return out;};mat4.multiply=function(mat1,mat2){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:mat4();var m00=mat1[0],m01=mat1[1],m02=mat1[2],m03=mat1[3],m10=mat1[4],m11=mat1[5],m12=mat1[6],m13=mat1[7],m20=mat1[8],m21=mat1[9],m22=mat1[10],m23=mat1[11],m30=mat1[12],m31=mat1[13],m32=mat1[14],m33=mat1[15];var by0=mat2[0],by1=mat2[1],by2=mat2[2],by3=mat2[3];out[0]=by0*m00+by1*m10+by2*m20+by3*m30;out[1]=by0*m01+by1*m11+by2*m21+by3*m31;out[2]=by0*m02+by1*m12+by2*m22+by3*m32;out[3]=by0*m03+by1*m13+by2*m23+by3*m33;by0=mat2[4],by1=mat2[5],by2=mat2[6],by3=mat2[7];out[4]=by0*m00+by1*m10+by2*m20+by3*m30;out[5]=by0*m01+by1*m11+by2*m21+by3*m31;out[6]=by0*m02+by1*m12+by2*m22+by3*m32;out[7]=by0*m03+by1*m13+by2*m23+by3*m33;by0=mat2[8],by1=mat2[9],by2=mat2[10],by3=mat2[11];out[8]=by0*m00+by1*m10+by2*m20+by3*m30;out[9]=by0*m01+by1*m11+by2*m21+by3*m31;out[10]=by0*m02+by1*m12+by2*m22+by3*m32;out[11]=by0*m03+by1*m13+by2*m23+by3*m33;by0=mat2[12],by1=mat2[13],by2=mat2[14],by3=mat2[15];out[12]=by0*m00+by1*m10+by2*m20+by3*m30;out[13]=by0*m01+by1*m11+by2*m21+by3*m31;out[14]=by0*m02+by1*m12+by2*m22+by3*m32;out[15]=by0*m03+by1*m13+by2*m23+by3*m33;return out;};mat4.scale=function(mat,sv){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:mat4();var x=sv[0],y=sv[1],z=sv[2];out[0]=mat[0]*x;out[1]=mat[1]*x;out[2]=mat[2]*x;out[3]=mat[3]*x;out[4]=mat[4]*y;out[5]=mat[5]*y;out[6]=mat[6]*y;out[7]=mat[7]*y;out[8]=mat[8]*z;out[9]=mat[9]*z;out[10]=mat[10]*z;out[11]=mat[11]*z;out[12]=mat[12];out[13]=mat[13];out[14]=mat[14];out[15]=mat[15];return out;};mat4.rotate=function(mat,rad,rv){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:mat4();var x=rv[0],y=rv[1],z=rv[2],sin=Math.sin(rad),cos=Math.cos(rad),icos=1-cos,m00=mat[0],m01=mat[1],m02=mat[2],m03=mat[3],m10=mat[4],m11=mat[5],m12=mat[6],m13=mat[7],m20=mat[8],m21=mat[9],m22=mat[10],m23=mat[11],r00=x*x*icos+cos,r01=y*x*icos+z*sin,r02=z*x*icos-y*sin,r10=x*y*icos-z*sin,r11=y*y*icos+cos,r12=z*y*icos+x*sin,r20=x*z*icos+y*sin,r21=y*z*icos-x*sin,r22=z*z*icos+cos;out[0]=m00*r00+m10*r01+m20*r02;out[1]=m01*r00+m11*r01+m21*r02;out[2]=m02*r00+m12*r01+m22*r02;out[3]=m03*r00+m13*r01+m23*r02;out[4]=m00*r10+m10*r11+m20*r12;out[5]=m01*r10+m11*r11+m21*r12;out[6]=m02*r10+m12*r11+m22*r12;out[7]=m03*r10+m13*r11+m23*r12;out[8]=m00*r20+m10*r21+m20*r22;out[9]=m01*r20+m11*r21+m21*r22;out[10]=m02*r20+m12*r21+m22*r22;out[11]=m03*r20+m13*r21+m23*r22;out[12]=mat[12];out[13]=mat[13];out[14]=mat[14];out[15]=mat[15];return out;};mat4.fromEuler=function(angles){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:mat4();var x=angles[0],y=angles[1],z=angles[2],sinx=Math.sin(-x),cosx=Math.cos(-x),siny=Math.sin(-y),cosy=Math.cos(-y),sinz=Math.sin(-z),cosz=Math.cos(-z);out[0]=cosy*cosz;out[1]=-cosy*sinz;out[2]=siny;out[3]=0;out[4]=cosx*sinz+cosz*sinx*siny;out[5]=cosx*cosz-sinx*siny*sinz;out[6]=-cosy*sinx;out[7]=0;out[8]=sinx*sinz-cosx*cosz*siny;out[9]=cosz*sinx+cosx*siny*sinz;out[10]=cosx*cosy;out[11]=0;out[12]=0;out[13]=0;out[14]=0;out[15]=1;return out;};mat4.determinant=function(mat){var m00=mat[0],m01=mat[1],m02=mat[2],m03=mat[3],m10=mat[4],m11=mat[5],m12=mat[6],m13=mat[7],m20=mat[8],m21=mat[9],m22=mat[10],m23=mat[11],m30=mat[12],m31=mat[13],m32=mat[14],m33=mat[15],d00=m00*m11-m01*m10,d01=m00*m12-m02*m10,d02=m00*m13-m03*m10,d03=m01*m12-m02*m11,d04=m01*m13-m03*m11,d05=m02*m13-m03*m12,d06=m20*m31-m21*m30,d07=m20*m32-m22*m30,d08=m20*m33-m23*m30,d09=m21*m32-m22*m31,d10=m21*m33-m23*m31,d11=m22*m33-m23*m32;return d00*d11-d01*d10+d02*d09+d03*d08-d04*d07+d05*d06;};mat4.decompose=function(t,r,scale,m){var sx=1/Math.sqrt(m[0]*m[0]+m[1]*m[1]+m[2]*m[2])*(mat4.determinant(m)<0?-1:1);var sy=1/Math.sqrt(m[4]*m[4]+m[5]*m[5]+m[6]*m[6]);var sz=1/Math.sqrt(m[8]*m[8]+m[9]*m[9]+m[10]*m[10]);t[0]=m[12];t[1]=m[13];t[2]=m[14];scale[0]=1/sx;scale[1]=1/sy;scale[2]=1/sz;var r00=sx*m[0],r01=sx*m[1],r02=sx*m[2],r10=sy*m[4],r11=sy*m[5],r12=sy*m[6],r20=sz*m[8],r21=sz*m[9],r22=sz*m[10];var trace=r00+r11+r22;var s=0;if(trace>0){s=0.5/Math.sqrt(trace+1.0);r[3]=0.25/s;r[0]=(r21-r12)*s;r[1]=(r02-r20)*s;r[2]=(r10-r01)*s;}else if(r00>r11&&r00>r22){s=2.0/Math.sqrt(1.0+r00-r11-r22);r[3]=(r21-r12)/s;r[0]=0.25*s;r[1]=(r01+r10)/s;r[2]=(r02+r20)/s;}else if(r11>r22){s=2.0*Math.sqrt(1.0+r11-r00-r22);r[3]=(r02-r20)/s;r[0]=(r01+r10)/s;r[1]=0.25*s;r[2]=(r12+r21)/s;}else{s=2.0*Math.sqrt(1.0+r22-r00-r11);r[3]=(r10-r01)/s;r[0]=(r02+r20)/s;r[1]=(r12+r21)/s;r[2]=0.25*s;}};mat4.fromRotationTranslationScale=function(q,v,s){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:mat4();var x=q[0],y=q[1],z=q[2],w=q[3],x2=x+x,y2=y+y,z2=z+z,xx=x*x2,xy=x*y2,xz=x*z2,yy=y*y2,yz=y*z2,zz=z*z2,wx=w*x2,wy=w*y2,wz=w*z2,sx=s[0],sy=s[1],sz=s[2];out[0]=(1-(yy+zz))*sx;out[1]=(xy+wz)*sx;out[2]=(xz-wy)*sx;out[3]=0;out[4]=(xy-wz)*sy;out[5]=(1-(xx+zz))*sy;out[6]=(yz+wx)*sy;out[7]=0;out[8]=(xz+wy)*sz;out[9]=(yz-wx)*sz;out[10]=(1-(xx+yy))*sz;out[11]=0;out[12]=v[0];out[13]=v[1];out[14]=v[2];out[15]=1;return out;};mat4.lookAt=function(eye,target,up){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:mat4();var eyeX=eye[0],eyeY=eye[1],eyeZ=eye[2],targetX=target[0],targetY=target[1],targetZ=target[2],upX=up[0],upY=up[1],upZ=up[2];var z0=eyeX-targetX,z1=eyeY-targetY,z2=eyeZ-targetZ,length=Math.sqrt(z0*z0+z1*z1+z2*z2),invLength=length?1/length:0;z0*=invLength;z1*=invLength;z2*=invLength;var x0=upY*z2-upZ*z1,x1=upZ*z0-upX*z2,x2=upX*z1-upY*z0;length=Math.sqrt(x0*x0+x1*x1+x2*x2);invLength=length?1/length:0;x0*=invLength;x1*=invLength;x2*=invLength;var y0=z1*x2-z2*x1,y1=z2*x0-z0*x2,y2=z0*x1-z1*x0;length=Math.sqrt(y0*y0+y1*y1+y2*y2);invLength=length?1/length:0;y0*=invLength;y1*=invLength;y2*=invLength;out[0]=x0;out[1]=y0;out[2]=z0;out[3]=0;out[4]=x1;out[5]=y1;out[6]=z1;out[7]=0;out[8]=x2;out[9]=y2;out[10]=z2;out[11]=0;out[12]=-(x0*eyeX+x1*eyeY+x2*eyeZ);out[13]=-(y0*eyeX+y1*eyeY+y2*eyeZ);out[14]=-(z0*eyeX+z1*eyeY+z2*eyeZ);out[15]=1;return out;};mat4.targetTo=function(eye,target,up){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:mat4();var eyeX=eye[0],eyeY=eye[1],eyeZ=eye[2],upX=up[0],upY=up[1],upZ=up[2];var z0=eyeX-target[0],z1=eyeY-target[1],z2=eyeZ-target[2],length=Math.sqrt(z0*z0+z1*z1+z2*z2),invLength=length?1/length:1;z0*=invLength;z1*=invLength;z2*=invLength;var x0=upY*z2-upZ*z1,x1=upZ*z0-upX*z2,x2=upX*z1-upY*z0;length=Math.sqrt(x0*x0+x1*x1+x2*x2);invLength=length?1/length:1;x0*=invLength;x1*=invLength;x2*=invLength;out[0]=x0;out[1]=x1;out[2]=x2;out[3]=0;out[4]=z1*x2-z2*x1;out[5]=z2*x0-z0*x2;out[6]=z0*x1-z1*x0;out[7]=0;out[8]=z0;out[9]=z1;out[10]=z2;out[11]=0;out[12]=eyeX;out[13]=eyeY;out[14]=eyeZ;out[15]=1;return out;};mat4.fromDualquat=function(dq){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:mat4();var rx=dq[0],ry=dq[1],rz=dq[2],rw=dq[3],tx=dq[4],ty=dq[5],tz=dq[6],tw=dq[7],xx=2.0*rx*rx,yy=2.0*ry*ry,zz=2.0*rz*rz,xy=2.0*rx*ry,xz=2.0*rx*rz,xw=2.0*rx*rw,yz=2.0*ry*rz,yw=2.0*ry*rw,zw=2.0*rz*rw;out[0]=1.0-yy-zz;out[1]=xy+zw;out[2]=xz-yw;out[3]=0;out[4]=xy-zw;out[5]=1.0-xx-zz;out[6]=yz+xw;out[7]=0;out[8]=xz+yw;out[9]=yz-xw;out[10]=1.0-xx-yy;out[11]=0;out[12]=2.0*(-tw*rx+tx*rw-ty*rz+tz*ry);out[13]=2.0*(-tw*ry+tx*rz+ty*rw-tz*rx);out[14]=2.0*(-tw*rz-tx*ry+ty*rx+tz*rw);out[15]=1;return out;};var quat$1=function quat$1(_){return vec4(0,0,0,1);};quat$1.copy=vec4.copy;quat$1.normalize=vec4.normalize;quat$1.multiply=function(q1,q2){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:quat$1();var x1=q1[0],y1=q1[1],z1=q1[2],w1=q1[3],x2=q2[0],y2=q2[1],z2=q2[2],w2=q2[3];out[0]=x1*w2+w1*x2+y1*z2-z1*y2;out[1]=y1*w2+w1*y2+z1*x2-x1*z2;out[2]=z1*w2+w1*z2+x1*y2-y1*x2;out[3]=w1*w2-x1*x2-y1*y2-z1*z2;return out;};quat$1.rotateX=function(q,rad){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:quat$1();rad*=0.5;var x=q[0],y=q[1],z=q[2],w=q[3],sin=Math.sin(rad),cos=Math.cos(rad);out[0]=x*cos+w*sin;out[1]=y*cos+z*sin;out[2]=z*cos-y*sin;out[3]=w*cos-x*sin;return out;};quat$1.rotateY=function(q,rad){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:quat$1();rad*=0.5;var x=q[0],y=q[1],z=q[2],w=q[3],sin=Math.sin(rad),cos=Math.cos(rad);out[0]=x*cos-z*sin;out[1]=y*cos+w*sin;out[2]=z*cos+x*sin;out[3]=w*cos-y*sin;return out;};quat$1.rotateZ=function(q,rad){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:quat$1();rad*=0.5;var x=q[0],y=q[1],z=q[2],w=q[3],sin=Math.sin(rad),cos=Math.cos(rad);out[0]=x*cos+y*sin;out[1]=y*cos-x*sin;out[2]=z*cos+w*sin;out[3]=w*cos-z*sin;return out;};quat$1.setAxisAngle=function(axis,rad){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:quat$1();rad*=0.5;var sin=Math.sin(rad);out[0]=sin*axis[0];out[1]=sin*axis[1];out[2]=sin*axis[2];out[3]=Math.cos(rad);return out;};quat$1.fromEulerOrdered=function(x,y,z){var order=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'XYZ';var out=arguments.length>4&&arguments[4]!==undefined?arguments[4]:quat$1();var cx=Math.cos(x/2),cy=Math.cos(y/2),cz=Math.cos(z/2),sx=Math.sin(x/2),sy=Math.sin(y/2),sz=Math.sin(z/2);if(order==='XYZ'){out[0]=sx*cy*cz+cx*sy*sz;out[1]=cx*sy*cz-sx*cy*sz;out[2]=cx*cy*sz+sx*sy*cz;out[3]=cx*cy*cz-sx*sy*sz;}else if(order==='YXZ'){out[0]=sx*cy*cz+cx*sy*sz;out[1]=cx*sy*cz-sx*cy*sz;out[2]=cx*cy*sz-sx*sy*cz;out[3]=cx*cy*cz+sx*sy*sz;}else if(order==='ZXY'){out[0]=sx*cy*cz-cx*sy*sz;out[1]=cx*sy*cz+sx*cy*sz;out[2]=cx*cy*sz+sx*sy*cz;out[3]=cx*cy*cz-sx*sy*sz;}else if(order==='ZYX'){out[0]=sx*cy*cz-cx*sy*sz;out[1]=cx*sy*cz+sx*cy*sz;out[2]=cx*cy*sz-sx*sy*cz;out[3]=cx*cy*cz+sx*sy*sz;}else if(order==='YZX'){out[0]=sx*cy*cz+cx*sy*sz;out[1]=cx*sy*cz+sx*cy*sz;out[2]=cx*cy*sz-sx*sy*cz;out[3]=cx*cy*cz-sx*sy*sz;}else if(order==='XZY'){out[0]=sx*cy*cz-cx*sy*sz;out[1]=cx*sy*cz-sx*cy*sz;out[2]=cx*cy*sz+sx*sy*cz;out[3]=cx*cy*cz+sx*sy*sz;}return out;};quat$1.slerp=function(q1,q2,f){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:quat$1();var x1=q1[0],y1=q1[1],z1=q1[2],w1=q1[3],x2=q2[0],y2=q2[1],z2=q2[2],w2=q2[3],coshTheta=x1*x2+y1*y2+z1*z2+w1*w2,ratio1=void 0,ratio2=void 0,hTheta=void 0,sinhTheta=void 0;if(coshTheta<0.0){coshTheta=-coshTheta;x2=-x2;y2=-y2;z2=-z2;w2=-w2;}if(1.0-coshTheta>0.000001){hTheta=Math.acos(coshTheta);sinhTheta=Math.sin(hTheta);ratio1=Math.sin((1.0-f)*hTheta)/sinhTheta;ratio2=Math.sin(f*hTheta)/sinhTheta;}else{ratio1=1.0-f;ratio2=f;}out[0]=ratio1*x1+ratio2*x2;out[1]=ratio1*y1+ratio2*y2;out[2]=ratio1*z1+ratio2*z2;out[3]=ratio1*w1+ratio2*w2;return out;};quat$1.fromMat3=function(mat){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:quat$1();var fTrace=mat[0]+mat[4]+mat[8];var fRoot=void 0;if(fTrace>0.0){fRoot=Math.sqrt(fTrace+1.0);out[3]=0.5*fRoot;fRoot=0.5/fRoot;out[0]=(mat[5]-mat[7])*fRoot;out[1]=(mat[6]-mat[2])*fRoot;out[2]=(mat[1]-mat[3])*fRoot;}else{var i=mat[4]>mat[0]?1:0;if(mat[8]>mat[i*3+i])i=2;var j=(i+1)%3,k=(i+2)%3;fRoot=Math.sqrt(mat[i*3+i]-mat[j*3+j]-mat[k*3+k]+1.0);out[i]=0.5*fRoot;fRoot=0.5/fRoot;out[3]=(mat[j*3+k]-mat[k*3+j])*fRoot;out[j]=(mat[j*3+i]+mat[i*3+j])*fRoot;out[k]=(mat[k*3+i]+mat[i*3+k])*fRoot;}return out;};quat$1.fromMat4=function(mat){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:quat$1();var trace=mat[0]+mat[5]+mat[10];var S=0;if(trace>0){S=Math.sqrt(trace+1.0)*2;out[3]=0.25*S;out[0]=(mat[6]-mat[9])/S;out[1]=(mat[8]-mat[2])/S;out[2]=(mat[1]-mat[4])/S;}else if(mat[0]>mat[5]&mat[0]>mat[10]){S=Math.sqrt(1.0+mat[0]-mat[5]-mat[10])*2;out[3]=(mat[6]-mat[9])/S;out[0]=0.25*S;out[1]=(mat[1]+mat[4])/S;out[2]=(mat[8]+mat[2])/S;}else if(mat[5]>mat[10]){S=Math.sqrt(1.0+mat[5]-mat[0]-mat[10])*2;out[3]=(mat[8]-mat[2])/S;out[0]=(mat[1]+mat[4])/S;out[1]=0.25*S;out[2]=(mat[6]+mat[9])/S;}else{S=Math.sqrt(1.0+mat[10]-mat[0]-mat[5])*2;out[3]=(mat[1]-mat[4])/S;out[0]=(mat[8]+mat[2])/S;out[1]=(mat[6]+mat[9])/S;out[2]=0.25*S;}return out;};quat$1.rotationTo=function(from,to){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:quat$1();var dot=vec3$1.dot(from,to);if(dot<-0.999999){var temp=vec3$1.cross(vec3$1(),vec3$1.AXIS_X,from);if(vec3$1.distance(temp)<0.000001)vec3$1.cross(vec3$1.AXIS_Y,from,temp);vec3$1.normalize(temp,temp);quat$1.setAxisAngle(temp,Math.PI,out);}else if(dot>0.999999){out[0]=0;out[1]=0;out[2]=0;out[3]=1;}else{var _temp=vec3$1.cross(from,to,vec3$1());out[0]=_temp[0];out[1]=_temp[1];out[2]=_temp[2];out[3]=1+dot;quat$1.normalize(out,out);}return out;};quat$1.invert=function(a){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:quat$1();var a0=a[0],a1=a[1],a2=a[2],a3=a[3],dot=a0*a0+a1*a1+a2*a2+a3*a3,invDot=dot?1/dot:0;out[0]=-a0*invDot;out[1]=-a1*invDot;out[2]=-a2*invDot;out[3]=a0*invDot;return out;};var dualquat=function dualquat(){for(var _len13=arguments.length,args=Array(_len13),_key13=0;_key13<_len13;_key13++){args[_key13]=arguments[_key13];}return new Float32Array(args.length?args.length===8?args:Array(8).fill(args[8]):[0,0,0,1,0,0,0,0]);};dualquat.copy=unrollVectorUnaryOperator(8,'dualquat()','');dualquat.fromMat4=function(mat){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:dualquat();var rotationMat=mat3.fromMat4(mat),tVec=vec4(mat[12],mat[13],mat[14],0);quat$1.fromMat3(rotationMat,out);quat$1.multiply(tVec,out,tVec);out[4]=tVec[0]*0.5;out[5]=tVec[1]*0.5;out[6]=tVec[2]*0.5;out[7]=tVec[3]*0.5;return out;};dualquat.lerp=function(dq1,dq2,f){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:dualquat();var rx1=dq1[0],ry1=dq1[1],rz1=dq1[2],rw1=dq1[3],rx2=dq2[0],ry2=dq2[1],rz2=dq2[2],rw2=dq2[3],px1=dq1[4],py1=dq1[5],pz1=dq1[6],pw1=dq1[7],dotProduct=rx1*rx2+ry1*ry2+rz1*rz2+rw1*rw2;if(dotProduct<0.0){out[0]=-rx1+f*(rx2+rx1);out[1]=-ry1+f*(ry2+ry1);out[2]=-rz1+f*(rz2+rz1);out[3]=-rw1+f*(rw2+rw1);out[4]=-px1+f*(dq2[4]+px1);out[5]=-py1+f*(dq2[5]+py1);out[6]=-pz1+f*(dq2[6]+pz1);out[7]=-pw1+f*(dq2[7]+pw1);}else{out[0]=rx1+f*(rx2-rx1);out[1]=ry1+f*(ry2-ry1);out[2]=rz1+f*(rz2-rz1);out[3]=rw1+f*(rw2-rw1);out[4]=px1+f*(dq2[4]-px1);out[5]=py1+f*(dq2[5]-py1);out[6]=pz1+f*(dq2[6]-pz1);out[7]=pw1+f*(dq2[7]-pw1);}return out;};dualquat.fromRotationTranslation=function(q,v){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:dualquat();var rx=q[0],ry=q[1],rz=q[2],rw=q[3],tx=0.5*v[0],ty=0.5*v[1],tz=0.5*v[2];out[0]=rx;out[1]=ry;out[2]=rz;out[3]=rw;out[4]=+tx*rw+ty*rz-tz*ry;out[5]=-tx*rz+ty*rw+tz*rx;out[6]=+tx*ry-ty*rx+tz*rw;out[7]=-tx*rx-ty*ry-tz*rz;return out;};dualquat.multiply=function(a,b){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:dualquat();var ax0=a[0],ay0=a[1],az0=a[2],aw0=a[3],bx1=b[4],by1=b[5],bz1=b[6],bw1=b[7],ax1=a[4],ay1=a[5],az1=a[6],aw1=a[7],bx0=b[0],by0=b[1],bz0=b[2],bw0=b[3];out[0]=ax0*bw0+aw0*bx0+ay0*bz0-az0*by0;out[1]=ay0*bw0+aw0*by0+az0*bx0-ax0*bz0;out[2]=az0*bw0+aw0*bz0+ax0*by0-ay0*bx0;out[3]=aw0*bw0-ax0*bx0-ay0*by0-az0*bz0;out[4]=ax0*bw1+aw0*bx1+ay0*bz1-az0*by1+ax1*bw0+aw1*bx0+ay1*bz0-az1*by0;out[5]=ay0*bw1+aw0*by1+az0*bx1-ax0*bz1+ay1*bw0+aw1*by0+az1*bx0-ax1*bz0;out[6]=az0*bw1+aw0*bz1+ax0*by1-ay0*bx1+az1*bw0+aw1*bz0+ax1*by0-ay1*bx0;out[7]=aw0*bw1-ax0*bx1-ay0*by1-az0*bz1+aw1*bw0-ax1*bx0-ay1*by0-az1*bz0;return out;};var frustum=function frustum(_){return new Float32Array(6*4);};frustum.fromMat=function(mat){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:frustum();var m00=mat[0],m01=mat[1],m02=mat[2],m03=mat[3],m10=mat[4],m11=mat[5],m12=mat[6],m13=mat[7],m20=mat[8],m21=mat[9],m22=mat[10],m23=mat[11],m30=mat[12],m31=mat[13],m32=mat[14],m33=mat[15];var x=m03-m00,y=m13-m10,z=m23-m20,w=m33-m30,il=1.0/Math.sqrt(x*x+y*y+z*z)||0;out[0]=il*x;out[1]=il*y;out[2]=il*z;out[3]=il*w;x=m03+m00,y=m13+m10,z=m23+m20,w=m33+m30,il=1.0/Math.sqrt(x*x+y*y+z*z)||0;out[4]=il*x;out[5]=il*y;out[6]=il*z;out[7]=il*w;x=m03+m01,y=m13+m11,z=m23+m21,w=m33+m31,il=1.0/Math.sqrt(x*x+y*y+z*z)||0;out[8]=il*x;out[9]=il*y;out[10]=il*z;out[11]=il*w;x=m03-m01,y=m13-m11,z=m23-m21,w=m33-m31,il=1.0/Math.sqrt(x*x+y*y+z*z)||0;out[12]=il*x;out[13]=il*y;out[14]=il*z;out[15]=il*w;x=m03-m02,y=m13-m12,z=m23-m22,w=m33-m32,il=1.0/Math.sqrt(x*x+y*y+z*z)||0;out[16]=il*x;out[17]=il*y;out[18]=il*z;out[19]=il*w;x=m03+m02,y=m13+m12,z=m23+m22,w=m33+m32,il=1.0/Math.sqrt(x*x+y*y+z*z)||0;out[20]=il*x;out[21]=il*y;out[22]=il*z;out[23]=il*w;return out;};frustum.containsSphere=function(fr,v){var rad=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var x=v[0],y=v[1],z=v[2];rad=-rad;return!(fr[0]*x+fr[1]*y+fr[2]*z+fr[3]<rad||fr[4]*x+fr[5]*y+fr[6]*z+fr[7]<rad||fr[8]*x+fr[9]*y+fr[10]*z+fr[11]<rad||fr[12]*x+fr[13]*y+fr[14]*z+fr[15]<rad||fr[16]*x+fr[17]*y+fr[18]*z+fr[19]<rad||fr[20]*x+fr[21]*y+fr[22]*z+fr[23]<rad||false);};frustum.containsBox=function(fr,box){var x1=void 0,x2=void 0,y1=void 0,y2=void 0,z1=void 0,z2=void 0,x=void 0,y=void 0,z=void 0,w=void 0,planes=0;while(planes<24){x=fr[planes+0],y=fr[planes+1],z=fr[planes+2],w=fr[planes+3];x>0?(x1=box.minX,x2=box.maxX):(x1=box.maxX,x2=box.minX);y>0?(y1=box.minY,y2=box.maxY):(y1=box.maxY,y2=box.minY);z>0?(z1=box.minZ,z2=box.maxZ):(z1=box.maxZ,z2=box.minZ);if(x*x1+y*y1+z*z1+w<0&&x*x2+y*y2+z*z2+w<0)return false;planes+=4;}return true;};var Ray=function Ray(origin,direction){return{origin:origin,direction:direction};};Ray.fromProjectionCamera=function(camera,coords){var origin=vec3$1.copy(camera.position);var invViewProjectionMatrix=mat4.invert(mat4.multiply(camera.projectionMatrix,camera.viewMatrix));var direction=vec3$1(coords[0],coords[1],0.5);vec3$1.unproject(direction,invViewProjectionMatrix,direction);vec3$1.subtract(direction,origin,direction);vec3$1.normalize(direction,direction);return Ray(origin,direction);};Ray.fromOrthographicCamera=function(camera,coords){};Ray.intersectSphere=function(ray,sphere){var v0=vec3$1.subtract(sphere.center,ray.origin),tca=vec3$1.dot(v0,ray.direction),distSq=vec3$1.dot(v0,v0)-tca*tca,radiusSq=sphere.radius*sphere.radius;if(distSq>radiusSq)return null;var thc=Math.sqrt(radiusSq-distSq),t0=tca-thc,t1=tca+thc;if(t0<0&&t1<0)return null;return t0<0?t1:t0;};Ray.pointDistance=function(ray,point){var temp=vec3$1.subtract(point,ray.origin),directionDistance=vec3$1.dot(temp,ray.direction);if(directionDistance<0)return vec3$1.distance(temp);vec3$1.scale(ray.direction,directionDistance,temp);vec3$1.add(temp,ray.origin,temp);vec3$1.subtract(temp,point,temp);return vec3$1.distance(temp);};Ray.sphereIntersection=function(ray,sphere){return Ray.pointDistance(ray,sphere.center)<=sphere.radius;};Ray.intersectTriangle=function(ray,a,b,c){var ab=vec3$1.subtract(b,a);var ac=vec3$1.subtract(c,a);var normal=vec3$1.cross(ab,ac);vec3$1.normalize(normal,normal);if(vec3$1.dot(normal,ray.direction)>0)return null;var t=vec3$1.dot(normal,vec3$1.subtract(a,ray.origin))/vec3$1.dot(normal,ray.direction);if(t<=0)return null;var hit=vec3$1.scale(ray.direction,t);vec3$1.add(hit,ray.origin,hit);var toHit=vec3$1.subtract(hit,a);var dot00=vec3$1.dot(ac,ac);var dot01=vec3$1.dot(ac,ab);var dot02=vec3$1.dot(ac,toHit);var dot11=vec3$1.dot(ab,ab);var dot12=vec3$1.dot(ab,toHit);var divide=dot00*dot11-dot01*dot01;var u=(dot11*dot02-dot01*dot12)/divide;var v=(dot00*dot12-dot01*dot02)/divide;if(u>=0&&v>=0&&u+v<=1)return true;};Ray.intersectAABB=function(ray,aabb){var tmin=vec3$1.subtract(aabb.min,ray.origin);var tmax=vec3$1.subtract(aabb.max,ray.origin);if(Math.max(tmin[0],tmin[1],tmin[2])<0&&Math.min(tmax[0],tmax[1],tmax[2])>0)return true;var inv=vec3$1.divide(vec3$1(1,1,1),ray.direction);vec3$1.multiply(tmin,inv,tmin);vec3$1.multiply(tmax,inv,tmax);var t1=vec3$1.min(tmin,tmax);var t2=vec3$1.max(tmin,tmax);var tnear=Math.max(t1[0],t1[1],t1[2]);var tfar=Math.min(t2[0],t2[1],t2[2]);if(!(tnear>0&&tnear<tfar))return null;var hit=vec3$1.add(vec3$1.scale(ray.direction,tnear),ray.origin);var boxmin=vec3$1.add(aabb.min,vec3$1(EPSILON));var boxmax=vec3$1.subtract(aabb.max,vec3$1(EPSILON));return true;};var BinaryHeap=function BinaryHeap(comparator){return Object.assign(Object.create(BinaryHeap.prototype),{content:[],comparator:comparator});};BinaryHeap.prototype={push:function push(element){this.content.push(element);this.sinkDown(this.content.length-1);},pop:function pop(){var element=this.content[0],last=this.content.pop();if(this.content.length>0){this.content[0]=last;this.bubbleUp(0);}return element;},remove:function remove(element){var index=this.content.indexOf(element),last=this.content.pop();if(index===this.content.length-1)return false;this.content[index]=last;this.comparator(last,element)<0?this.sinkDown(index):this.bubbleUp(index);},get size(){return this.content.length;},updateElement:function updateElement(element){this.sinkDown(this.content.indexOf(element));},sinkDown:function sinkDown(index){var element=this.content[index];while(index>0){var parentIndex=(index+1>>1)-1,parent=this.content[parentIndex];if(this.comparator(element,parent)>=0)break;this.content[parentIndex]=element;this.content[index]=parent;index=parentIndex;}},bubbleUp:function bubbleUp(index){var length=this.content.length,element=this.content[index];while(1){var rightChildIndex=index+1<<1,leftChildIndex=rightChildIndex-1,compareNode=void 0,swapIndex=null;if(leftChildIndex<length&&this.comparator(compareNode=this.content[leftChildIndex],element)<0)swapIndex=leftChildIndex;else compareNode=element;if(rightChildIndex<length&&this.comparator(this.content[rightChildIndex],compareNode)<0)swapIndex=rightChildIndex;if(swapIndex===null)break;this.content[index]=this.content[swapIndex];this.content[swapIndex]=element;index=swapIndex;}}};var heuristics={manhattan:function manhattan(scale){return function(a,b){return scale*Math.abs(b.x-a.x)+Math.abs(b.y-a.y);};},diagonal:function diagonal(scale,scale2){return function(a,b){var dx=Math.abs(b.x-a.x),dy=Math.abs(b.y-a.y);return scale*(dx+dy)+(scale2-2*scale)*Math.min(dx,dy);};},euclidean:function euclidean(scale){return function(a,b){var dx=Math.abs(b.x-a.x),dy=Math.abs(b.y-a.y);return scale*Math.sqrt(dx*dx+dy*dy);};}};var Graph=function Graph(_){return Object.create(Graph.prototype);};Graph.prototype={init:function init(inputGrid,options){var minWeight=options.minWeight||1;this.diagonal=!!options.diagonal;this.heuristic=(this.diagonal?heuristics.diagonal:heuristics.manhattan)(minWeight,SQRT2);this.nodes=[];this.grid=[];for(var r=0,width=inputGrid.length;r<width;r++){for(var c=0,gridRow=this.grid[r]=[],inputGridRow=inputGrid[r],height=inputGridRow.length;c<height;c++){this.nodes.push(gridRow[c]=GridNode(r,c,inputGridRow[c]));}}this.dirtyNodes=this.nodes.slice();return this;},neighbors:function neighbors(node){var neighbors=[],x=node.x,y=node.y,grid=this.grid;if(grid[x-1]&&grid[x-1][y])neighbors.push(grid[x-1][y]);if(grid[x+1]&&grid[x+1][y])neighbors.push(grid[x+1][y]);if(grid[x]&&grid[x][y-1])neighbors.push(grid[x][y-1]);if(grid[x]&&grid[x][y+1])neighbors.push(grid[x][y+1]);if(this.diagonal){if(grid[x-1]&&grid[x-1][y-1]&&grid[x-1][y].traversable&&grid[x][y-1].traversable)neighbors.push(grid[x-1][y-1]);if(grid[x+1]&&grid[x+1][y-1]&&grid[x+1][y].traversable&&grid[x][y-1].traversable)neighbors.push(grid[x+1][y-1]);if(grid[x-1]&&grid[x-1][y+1]&&grid[x-1][y].traversable&&grid[x][y+1].traversable)neighbors.push(grid[x-1][y+1]);if(grid[x+1]&&grid[x+1][y+1]&&grid[x+1][y].traversable&&grid[x][y+1].traversable)neighbors.push(grid[x+1][y+1]);}return neighbors;},cleanDirty:function cleanDirty(cleanNode){var idx=this.dirtyNodes.length;while(idx--){cleanNode(this.dirtyNodes[idx]);}this.dirtyNodes.length=0;},markDirty:function markDirty(node){this.dirtyNodes.push(node);},estimateWeight:function estimateWeight(node,neighbour){if(!node.weight)return 0;if(neighbour&&neighbour.x!=node.x&&neighbour.y!=node.y)return node.weight*SQRT2;return node.weight;}};var GridNode=function GridNode(x,y,weight){return{x:x,y:y,weight:weight};};var rngMultiplyWithCarry=function rngMultiplyWithCarry(){var seed=arguments.length>0&&arguments[0]!==undefined?arguments[0]:123456789;var mask=0xFFFFFFFF;var w=seed,z=987654321;return function(_){z=36969*(z&65535)+(z>>16)&mask;w=18000*(w&65535)+(w>>16)&mask;return 0.5+((z<<16)+w&mask)/4294967296;};};var rngLinearCongruentialGenerator=function rngLinearCongruentialGenerator(){var seed=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var range=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Math.pow(2,32);var multiplier=arguments.length>2&&arguments[2]!==undefined?arguments[2]:134775813;return function(_){return(seed=(multiplier*seed+1)%range)/range;};};var rngSimple=function rngSimple(){var seed=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;return function(_){var x=Math.sin(seed++)*10000;return x-Math.floor(x);};};Math.random=rngSimple();var PoissonDisk=function PoissonDisk(){var _ref4=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},width=_ref4.width,height=_ref4.height,radius=_ref4.radius,_ref4$rng=_ref4.rng,rng=_ref4$rng===undefined?Math.random:_ref4$rng;var rejectThreshold=30,radiusSquared=radius*radius,cellSize=radius/Math.sqrt(2),gridWidth=Math.ceil(width/cellSize),gridHeight=Math.ceil(height/cellSize),grid=new Array(gridWidth*gridHeight),queue=[];var sampleSize=0,queueSize=0;var far=function far(x,y){var cellX=x/cellSize|0,cellY=y/cellSize|0,minX=Math.max(cellX-2,0),minY=Math.max(cellY-2,0),maxX=Math.min(cellX+3,gridWidth),maxY=Math.min(cellY+3,gridHeight);for(var i,col=minY;col<maxY;i=++col*gridWidth){for(var cell,row=minX;row<maxX;cell=grid[i+ ++row]){if(cell&&Math.pow(cell[0]-x)+Math.pow(cell[1]-y)<radiusSquared)return false;}}return true;};var sample=function sample(x,y){var s=[x,y];queue.push(s);grid[gridWidth*(y/cellSize|0)+(x/cellSize|0)]=s;sampleSize++;queueSize++;return s;};var generate=function generate(_){while(queueSize){var qi=rng()*queueSize|0,s=queue[qi];for(var i=0;i<rejectThreshold;++i){var rngAngle=rng()*2*Math.PI,rngRadius=Math.sqrt(rng()*3*radiusSquared+radiusSquared),x=s[0]+rngRadius*Math.cos(rngAngle),y=s[1]+rngRadius*Math.sin(rngAngle);if(x>=0&&x<width&&y>=0&&y<height&&far(x,y))return sample(x,y);}queue[qi]=queue[--queueSize];queue.length=queueSize;}};return function(limit,startingPoint){queue.length=sampleSize=queueSize=0;var samples=[startingPoint?sample(startingPoint[0]+width/2,startingPoint[0]+height/2):sample(rng()*width,rng()*height)],s=null;while((s=generate())&&--limit){samples.push(s);}var stride=2,sampleArray=new Float32Array(samples.length*stride);samples.forEach(function(s,i){sampleArray[i*stride+0]=s[0]-width/2;sampleArray[i*stride+1]=s[1]-height/2;});return sampleArray;};};var BinPacker=function BinPacker(){var sort=arguments.length>0&&arguments[0]!==undefined?arguments[0]:BinPacker.sort.maxside;var maxWidth=arguments[1];var maxHeight=arguments.length>2&&arguments[2]!==undefined?arguments[2]:maxWidth;var target=Object.create(null);var root={x:0,y:0,w:maxWidth||0,h:maxHeight||0},node=null;return tie(target,{get root(){return root;},insert:function insert(blocks){return blocks.sort(sort).forEach(function(block){root.w=root.w||block.w;root.h=root.h||block.h;if(node=target.findNode(root,block.w,block.h))block.fit=target.splitNode(node,block.w,block.h);else if(!maxHeight)block.fit=target.growNode(block.w,block.h);});},findNode:function findNode(root,w,h){return root.full?target.findNode(root.right,w,h)||target.findNode(root.down,w,h):w<=root.w&&h<=root.h?root:null;},splitNode:function splitNode(node,w,h){return Object.assign(node,{full:true,down:{x:node.x,y:node.y+h,w:node.w,h:node.h-h},right:{x:node.x+w,y:node.y,w:node.w-w,h:h}});},growNode:function growNode(w,h){return h<=root.h&&root.w<root.h+h?target.growRight(w,h):w<=root.w?target.growDown(w,h):null;},growRight:function growRight(w,h){return root={full:true,x:0,y:0,w:root.w+w,h:root.h,down:root,right:{x:root.w,y:0,w:w,h:root.h}},(node=target.findNode(root,w,h))?target.splitNode(node,w,h):null;},growDown:function growDown(w,h){return root={full:true,x:0,y:0,w:root.w,h:root.h+h,down:{x:0,y:root.h,w:root.w,h:h},right:root},(node=target.findNode(root,w,h))?target.splitNode(node,w,h):null;},clear:function clear(_){return root={x:0,y:0,w:maxWidth||0,h:maxHeight||0},target;}});};BinPacker.sort={random:function random(a,b){return Math.random()-0.5;},height:function height(a,b){return b.h-a.h||b.w-a.w;},width:function width(a,b){return b.w-a.w||b.h-a.h;},area:function area(a,b){return b.w*b.w+b.h*b.h-(a.w*a.w+a.h*a.h)||BinPacker.sort.height(a,b);},maxside:function maxside(a,b){return Math.max(b.w,b.h)-Math.max(a.w,a.h)||Math.min(b.w,b.h)-Math.min(a.w,a.h)||BinPacker.sort.height(a,b);}};var Raycaster=function Raycaster(_){var target=Object.create(null);return tie(target,{});};Raycaster.fromCamera=function(camera,mouseCoords){var ray=Ray.fromProjectionCamera(camera,mouseCoords);return{intersect:function intersect(entity){return Ray.sphereIntersection(ray,{center:vec3$1.translationFromMat4(entity.modelMatrix),radius:entity.boundingSphereRadius});},get ray(){return ray;}};};var INDEX_INSIDE_CROSS=-1;var INDEX_OUTSIDE_OFFSET=2;var INDEX_OUTSIDE_POS_X=0;var INDEX_OUTSIDE_NEG_X=1;var INDEX_OUTSIDE_POS_Y=2;var INDEX_OUTSIDE_NEG_Y=3;var INDEX_OUTSIDE_POS_Z=4;var INDEX_OUTSIDE_NEG_Z=5;var FLAG_POS_X=1<<INDEX_OUTSIDE_POS_X+1;var FLAG_NEG_X=1<<INDEX_OUTSIDE_NEG_X+1;var FLAG_POS_Y=1<<INDEX_OUTSIDE_POS_Y+1;var FLAG_NEG_Y=1<<INDEX_OUTSIDE_NEG_Y+1;var FLAG_POS_Z=1<<INDEX_OUTSIDE_POS_Z+1;var FLAG_NEG_Z=1<<INDEX_OUTSIDE_NEG_Z+1;var INDEX_OUTSIDE_MAP=[];INDEX_OUTSIDE_MAP[INDEX_OUTSIDE_POS_X]={index:INDEX_OUTSIDE_POS_X,count:0,x:1,y:0,z:0};INDEX_OUTSIDE_MAP[INDEX_OUTSIDE_NEG_X]={index:INDEX_OUTSIDE_NEG_X,count:0,x:-1,y:0,z:0};INDEX_OUTSIDE_MAP[INDEX_OUTSIDE_POS_Y]={index:INDEX_OUTSIDE_POS_Y,count:0,x:0,y:1,z:0};INDEX_OUTSIDE_MAP[INDEX_OUTSIDE_NEG_Y]={index:INDEX_OUTSIDE_NEG_Y,count:0,x:0,y:-1,z:0};INDEX_OUTSIDE_MAP[INDEX_OUTSIDE_POS_Z]={index:INDEX_OUTSIDE_POS_Z,count:0,x:0,y:0,z:1};INDEX_OUTSIDE_MAP[INDEX_OUTSIDE_NEG_Z]={index:INDEX_OUTSIDE_NEG_Z,count:0,x:0,y:0,z:-1};var OctreeSegment=function OctreeSegment(pointer,segment){return tie(Object.create(OctreeSegment.prototype),{pointer:pointer,segment:segment,snapshot:{position:vec3$1(),radius:0,indexOctant:null}});};OctreeSegment.prototype={get radius(){return this.segment.radius;},get position(){return this.segment.position;},get dirty(){var position=this.position,prevPosition=this.snapshot.position,radius=this.radius,prevRadius=this.snapshot.radius;return radius!==prevRadius||position[0]!==prevPosition[0]||position[1]!==prevPosition[1]||position[2]!==prevPosition[2];},set dirty(value){if(!value){this.snapshot.radius=this.radius;vec3$1.copy(this.position,this.snapshot.position);}},get indexOctant(){return this.snapshot.indexOctant;},set indexOctant(value){this.snapshot.indexOctant=value;this.dirty=false;}};var Octree=function Octree(options){var tree=Object.create(Octree.prototype);options=Object.assign({maxDepth:Infinity,objectsThreshold:8,overlapPercent:0.15,deferred:true,tree:tree},options||{});var root=null;tie(tree,{nodeCount:0,objects:[],objectMap:{},segmentList:[],deferredActions:[],maxDepth:options.maxDepth,objectsThreshold:options.objectsThreshold,overlapPercent:options.overlapPercent,deferred:options.deferred,tempVec3:vec3$1(),update:function update(_){tree.deferredActions.forEach(function(deferred){return deferred.context[deferred.action].apply(deferred.context,deferred.args);});tree.deferredActions.length=0;},add:function add(pointer,mapper){return tree.deferred?tree.deferredActions.push({context:tree,action:'addDeferred',args:[pointer,mapper]}):tree.addDeferred(pointer,mapper);},addDeferred:function addDeferred(pointer,mapper){if(pointer instanceof OctreeSegment)pointer=pointer.pointer;if(!pointer.uuid)pointer.uuid=generateUUID();if(tree.objectMap[pointer.uuid])return false;tree.objects.push(pointer);tree.objectMap[pointer.uuid]=pointer;mapper(pointer).map(function(segment){return new OctreeSegment(pointer,segment);}).forEach(function(segment){tree.segmentList.push(segment);tree.root.addObject(segment);});},remove:function remove(pointer){if(pointer instanceof OctreeSegment)pointer=pointer.pointer;tree.deferredActions=tree.deferredActions.filter(function(deferred){return!(deferred.action==='addDeferred'&&deferred.args[0]===pointer);});if(!tree.objectMap[pointer.uuid])return true;tree.objectMap[pointer.uuid]=undefined;tree.objects.splice(tree.objects.indexOf(pointer),1);tree.root.removeObject(pointer).forEach(function(removedSegment){var index=tree.segmentList.indexOf(removedSegment);if(index!==-1)tree.segmentList.splice(index,1);});},extend:function extend(octree){var segmentMap=octree.objectData.reduce(function(segments,segment){segments[segment.pointer.uuid]=segments[segment.pointer.uuid]||[];segments[segment.pointer.uuid].push(segment.segment);return segments;},Object.create(null));var mapper=function mapper(pointer){return segmentMap[pointer.uuid];};octree.objects.forEach(function(pointer){return tree.add(pointer,mapper);});},rebuild:function rebuild(_){tree.segmentList.filter(function(segment){return segment.node instanceof OctreeNode&&segment.dirty&&segment.indexOctant!=segment.node.getOctantIndex(segment);}).map(function(segment){var node=segment.node;node.removeObject(segment);return{node:node,segment:segment};}).forEach(function(_ref5){var node=_ref5.node,segment=_ref5.segment;return node.attached?node.addObject(segment):tree.root.addObject(segment);});},search:function search(position,radius,direction){var options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};radius=radius>0?radius:Number.MAX_VALUE;var invDirection=direction?vec3$1.divide(vec3$1(1,1,1),vec3$1.normalize(direction),tree.tempVec3):null;var objects=tree.root.objects.slice();for(var i=0,l=tree.root.nodeIndices.length;i<l;i++){objects=tree.root.nodesByIndex[tree.root.nodeIndices[i]].search(position,radius,invDirection,objects);}if(!options.groupByObject)return objects;var results=[];var resultsObjectsIndices=[];for(var _i=0,_l=objects.length;_i<_l;_i++){var objectData=objects[_i];var object=objectData.pointer;var resultObjectIndex=resultsObjectsIndices.indexOf(object);if(resultObjectIndex===-1){results.push({object:object});resultsObjectsIndices.push(object);}}return results;},get root(){return root;},set root(value){if(!value instanceof OctreeNode)return false;root=value;value.updateProperties();},get depthEnd(){return tree.root.depthEnd;},get nodeCountEnd(){return tree.root.nodeCountEnd;},get objectCountEnd(){return tree.root.objectCountEnd;}});root=options.root||new OctreeNode(options);return tree;};var OctreeNode=function OctreeNode(_ref6){var tree=_ref6.tree,_ref6$position=_ref6.position,position=_ref6$position===undefined?vec3$1():_ref6$position,radius=_ref6.radius,indexOctant=_ref6.indexOctant,parent=_ref6.parent;var node=Object.create(OctreeNode.prototype);Object.assign(node,{tree:tree,position:position,indexOctant:indexOctant,depth:0,radius:Math.max(radius||0,1),id:tree.nodeCount++});node.reset(false);node.parent=parent;node.overlap=node.radius*tree.overlapPercent;node.radiusOverlap=node.radius+node.overlap;node.left=node.position[0]-node.radiusOverlap;node.right=node.position[0]+node.radiusOverlap;node.bottom=node.position[1]-node.radiusOverlap;node.top=node.position[1]+node.radiusOverlap;node.back=node.position[2]-node.radiusOverlap;node.front=node.position[2]+node.radiusOverlap;return node;};OctreeNode.prototype={set parent(parent){if(parent===this||this.parentNode===parent)return false;this.parentNode=parent;this.updateProperties();},get parent(){return this.parentNode;},get attached(){return this.parent||this.tree.root===this;},updateProperties:function updateProperties(){if(!this.parent)this.depth=0;else{this.tree=this.parent.tree;this.depth=this.parent.depth+1;}for(var i=0,l=this.nodeIndices.length;i<l;i++){this.nodesByIndex[this.nodeIndices[i]].updateProperties();}},reset:function reset(cascade){var _this3=this;(this.nodeIndices||[]).forEach(function(i){var node=_this3.nodesByIndex[i];node.parent=undefined;if(cascade)node.reset(cascade);});this.objects=[];this.nodeIndices=[];this.nodesByIndex=Object.create(null);},addNode:function addNode(node,indexOctant){node.indexOctant=indexOctant;if(this.nodeIndices.indexOf(indexOctant)===-1)this.nodeIndices.push(indexOctant);this.nodesByIndex[indexOctant]=node;if(node.parent!==this)node.parent=this;},removeNode:function removeNode(indexOctant){this.nodeIndices.splice(this.nodeIndices.indexOf(indexOctant),1);var node=this.nodesByIndex[indexOctant];delete this.nodesByIndex[indexOctant];if(node.parent===this)node.parent=undefined;},deferAction:function deferAction(action){var _this4=this;if(this.tree.deferred)if(!this.tree.deferredActions.some(function(deferred){return deferred.action===action&&deferred.context===_this4;}))this.tree.deferredActions.push({context:this,action:action});else this[action].call(this);},addObject:function addObject(object){var indexOctant=this.getOctantIndex(object);if(indexOctant>-1&&this.nodeIndices.length>0)this.branch(indexOctant).addObject(object);else if(indexOctant<-1&&this.parent instanceof OctreeNode)this.parent.addObject(object);else{if(this.objects.indexOf(object)===-1)this.objects.push(object);object.node=this;this.deferAction('checkGrow');}},transferObject:function transferObject(objects){var idx=objects.length;while(idx--){this.objects.push((objects[idx].node=this,objects[idx]));}},removeObject:function removeObject(object){var removeContext={searchComplete:false,nodesRemovedFrom:[],removedSegments:[]};this.removeObjectRecursive(object,removeContext);var idx=removeContext.nodesRemovedFrom.length;while(idx--){removeContext.nodesRemovedFrom[idx].deferAction('shrink');}return removeContext.removedSegments;},removeObjectRecursive:function removeObjectRecursive(object,removeContext){var wasRemoved=false;if(object instanceof OctreeSegment){var index=this.objects.indexOf(object);if(index!==-1){this.objects.splice(index,1);object.node=undefined;removeContext.removedSegments.push(object);wasRemoved=true;removeContext.searchComplete=true;}}else{for(var i=this.objects.length-1;i>=0;i--){var segment=this.objects[i];if(segment.pointer!==object)continue;this.objects.splice(i,1);segment.node=undefined;removeContext.removedSegments.push(segment);wasRemoved=true;}}if(wasRemoved)removeContext.nodesRemovedFrom.push(this);if(!removeContext.searchComplete)for(var _i2=0,l=this.nodeIndices.length;_i2<l;_i2++){if((removeContext=this.nodesByIndex[this.nodeIndices[_i2]].removeObjectRecursive(object,removeContext)).searchComplete)break;}return removeContext;},checkGrow:function checkGrow(){if(this.tree.objectsThreshold&&this.objects.length>this.tree.objectsThreshold)this.grow();},grow:function grow(){var objectsExpand=[],objectsExpandOctants=[],objectsSplit=[],objectsSplitOctants=[];var objectsRemaining=[];for(var i=0,l=this.objects.length;i<l;i++){var object=this.objects[i],indexOctant=this.getOctantIndex(object);if(indexOctant>-1){objectsSplit.push(object);objectsSplitOctants.push(indexOctant);}else if(indexOctant<-1){objectsExpand.push(object);objectsExpandOctants.push(indexOctant);}else objectsRemaining.push(object);}if(objectsSplit.length>0)objectsRemaining=objectsRemaining.concat(this.split(objectsSplit,objectsSplitOctants));if(objectsExpand.length>0)objectsRemaining=objectsRemaining.concat(this.expand(objectsExpand,objectsExpandOctants));this.objects=objectsRemaining;this.checkMerge();},split:function split(objects,octants){var _this5=this;if(this.depth>=this.tree.maxDepth)return this.objects;objects=objects||this.objects;octants=octants||[];var objectsRemaining=objects.filter(function(object,i){return octants[i]<=-1||_this5.branch(octants[i]).addObject(object)&0;});if(objects===this.objects)this.objects=objectsRemaining;if(objectsRemaining.length>0)console.log(objectsRemaining);return objectsRemaining;},branch:function branch(indexOctant){if(this.nodesByIndex[indexOctant]instanceof OctreeNode)return this.nodesByIndex[indexOctant];var radius=this.radiusOverlap*0.5,overlap=radius*this.tree.overlapPercent,radiusOffset=radius-overlap,position=vec3$1.add(this.position,vec3$1(indexOctant&1?radiusOffset:-radiusOffset,indexOctant&2?radiusOffset:-radiusOffset,indexOctant&4?radiusOffset:-radiusOffset)),node=new OctreeNode({tree:this.tree,parent:this,position:position,radius:radius,indexOctant:indexOctant});this.addNode(node,indexOctant);return node;},expand:function expand(){var objects=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.objects;var octants=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];if(this.tree.root.depthEnd>=this.tree.maxDepth)return objects;var objectsRemaining=[],objectsExpand=[];for(var i=0,l=INDEX_OUTSIDE_MAP.length;i<l;INDEX_OUTSIDE_MAP[i++].count=0){}for(var _i3=0,_l2=objects.length;_i3<_l2;_i3++){var object=objects[_i3];var indexOctant=octants[_i3];if(indexOctant<-1)objectsExpand.push(object);else{objectsRemaining.push(object);continue;}var flagsOutside=-indexOctant-INDEX_OUTSIDE_OFFSET;if(flagsOutside&FLAG_POS_X)INDEX_OUTSIDE_MAP[INDEX_OUTSIDE_POS_X].count++;else if(flagsOutside&FLAG_NEG_X)INDEX_OUTSIDE_MAP[INDEX_OUTSIDE_NEG_X].count++;if(flagsOutside&FLAG_POS_Y)INDEX_OUTSIDE_MAP[INDEX_OUTSIDE_POS_Y].count++;else if(flagsOutside&FLAG_NEG_Y)INDEX_OUTSIDE_MAP[INDEX_OUTSIDE_NEG_Y].count++;if(flagsOutside&FLAG_POS_Z)INDEX_OUTSIDE_MAP[INDEX_OUTSIDE_POS_Z].count++;else if(flagsOutside&FLAG_NEG_Z)INDEX_OUTSIDE_MAP[INDEX_OUTSIDE_NEG_Z].count++;}if(this.parent&&objectsExpand.length>0)objectsExpand.forEach(this.parent.addObject.bind(this.parent));else if(objectsExpand.length>0){var indexesOutside=INDEX_OUTSIDE_MAP.slice().sort(function(a,b){return b.count-a.count;}),indexOutside0=indexesOutside[0],indexBitwise0=indexOutside0.index|1,infoPotential1=indexesOutside[1],infoPotential2=indexesOutside[2],indexOutside1=(infoPotential1.index|1)!==indexBitwise0?infoPotential1:infoPotential2,indexOutsideBitwise2=indexOutside1.index|1,infoPotential3=indexesOutside[3],infoPotential4=indexesOutside[4],indexPotentialBitwise1=infoPotential2.index|1,indexPotentialBitwise2=infoPotential3.index|1,indexOutside2=indexPotentialBitwise1!==indexBitwise0&&indexPotentialBitwise1!==indexOutsideBitwise2?infoPotential2:indexPotentialBitwise2!==indexBitwise0&&indexPotentialBitwise2!==indexOutsideBitwise2?infoPotential3:infoPotential4,octantX=indexOutside0.x+indexOutside1.x+indexOutside2.x,octantY=indexOutside0.y+indexOutside1.y+indexOutside2.y,octantZ=indexOutside0.z+indexOutside1.z+indexOutside2.z,_indexOctant=this.getOctantIndexFromPosition(octantX,octantY,octantZ),indexOctantInverse=this.getOctantIndexFromPosition(-octantX,-octantY,-octantZ),radiusParent=this.tree.overlapPercent>0?this.overlap/(0.5*this.tree.overlapPercent*(1+this.tree.overlapPercent)):this.radius*2,overlapParent=radiusParent*this.tree.overlapPercent,radiusOffset=radiusParent+overlapParent-(this.radius+this.overlap);var position=vec3$1.add(this.position,vec3$1(_indexOctant&1?radiusOffset:-radiusOffset,_indexOctant&2?radiusOffset:-radiusOffset,_indexOctant&4?radiusOffset:-radiusOffset)),parent=new OctreeNode({tree:this.tree,position:position,radius:radiusParent});parent.addNode(this,indexOctantInverse);this.tree.root=parent;objectsExpand.forEach(this.tree.root.addObject.bind(this.tree.root));}if(objects===this.objects)this.objects=objectsRemaining;return objectsRemaining;},shrink:function shrink(){this.checkMerge();this.tree.root.checkContract();},checkMerge:function checkMerge(){var nodeParent=this,nodeMerge=null;while(nodeParent.parent&&nodeParent.objectCountEnd<this.tree.objectsThreshold){nodeMerge=nodeParent;nodeParent=nodeParent.parent;}if(nodeParent!==this)nodeParent.merge(nodeMerge);},merge:function merge(nodes){var _this6=this;nodes=nodes instanceof Array?nodes:[nodes];nodes.forEach(function(node){_this6.transferObject(node.objectsEnd);node.reset(true);_this6.removeNode(node.indexOctant,node);});this.checkMerge();},checkContract:function checkContract(){if(this.nodeIndices.length==0)return false;var nodeHeaviest=undefined,nodeHeaviestObjectsCount=0,outsideHeaviestObjectsCount=this.objects.length;for(var i=0,l=this.nodeIndices.length;i<l;i++){var node=this.nodesByIndex[this.nodeIndices[i]];var nodeObjectsCount=node.objectCountEnd;outsideHeaviestObjectsCount+=nodeObjectsCount;if(nodeHeaviest instanceof OctreeNode&&nodeObjectsCount<=nodeHeaviestObjectsCount)continue;nodeHeaviest=node;nodeHeaviestObjectsCount=nodeObjectsCount;}outsideHeaviestObjectsCount-=nodeHeaviestObjectsCount;if(nodeHeaviest instanceof OctreeNode&&outsideHeaviestObjectsCount<this.tree.objectsThreshold)this.contract(nodeHeaviest);},contract:function contract(rootNode){for(var i=0,l=this.nodeIndices.length;i<l;i++){var node=this.nodesByIndex[this.nodeIndices[i]];if(node===rootNode)continue;rootNode.transferObject(node.objectsEnd);node.reset(true);}rootNode.transferObject(this.objects);this.reset(false);this.tree.root=rootNode;rootNode.checkContract();},getOctantIndex:function getOctantIndex(segment){var objectRadius=segment.radius||0,objectPosition=segment.position,overlap=this.overlap,radiusOverlap=this.radiusOverlap,position=this.position;var indexOctant=0;var deltaX=objectPosition[0]-position[0],deltaY=objectPosition[1]-position[1],deltaZ=objectPosition[2]-position[2],distX=Math.abs(deltaX),distY=Math.abs(deltaY),distZ=Math.abs(deltaZ),distance=Math.max(distX,distY,distZ);if(distance+objectRadius>radiusOverlap){if(distX+objectRadius>radiusOverlap)indexOctant^=deltaX>0?FLAG_POS_X:FLAG_NEG_X;if(distY+objectRadius>radiusOverlap)indexOctant^=deltaY>0?FLAG_POS_Y:FLAG_NEG_Y;if(distZ+objectRadius>radiusOverlap)indexOctant^=deltaZ>0?FLAG_POS_Z:FLAG_NEG_Z;return segment.indexOctant=-indexOctant-INDEX_OUTSIDE_OFFSET;}if(deltaX-objectRadius>-overlap)indexOctant|=1;else if(deltaX+objectRadius>=overlap)return segment.indexOctant=INDEX_INSIDE_CROSS;if(deltaY-objectRadius>-overlap)indexOctant|=2;else if(deltaY+objectRadius>=overlap)return segment.indexOctant=INDEX_INSIDE_CROSS;if(deltaZ-objectRadius>-overlap)indexOctant|=4;else if(deltaZ+objectRadius>=overlap)return segment.indexOctant=INDEX_INSIDE_CROSS;return segment.indexOctant=indexOctant;},getOctantIndexFromPosition:function getOctantIndexFromPosition(x,y,z){return x>0|(y>0)<<1|(z>0)<<2;},search:function search(position,radius,invDirection,objects){if(invDirection?this.intersectRay(position,invDirection,radius):this.intersectSphere(position,radius)){objects=objects.concat(this.objects);for(var i=0,l=this.nodeIndices.length;i<l;i++){objects=this.nodesByIndex[this.nodeIndices[i]].search(position,radius,invDirection,objects);}}return objects;},intersectSphere:function intersectSphere(center,radius){var x=center[0],y=center[1],z=center[2];var distance=radius*radius,diff=0;if((diff=x-this.left)<0)distance-=diff*diff;else if((diff=x-this.right)>0)distance-=diff*diff;if((diff=y-this.bottom)<0)distance-=diff*diff;else if((diff=y-this.top)>0)distance-=diff*diff;if((diff=z-this.back)<0)distance-=diff*diff;else if((diff=z-this.front)>0)distance-=diff*diff;return distance>=0;},intersectRay:function intersectRay(origin,invDirection,maxDistance){var t0=invDirection[0]*(this.left-origin[0]),t1=invDirection[0]*(this.right-origin[0]),t2=invDirection[1]*(this.bottom-origin[1]),t3=invDirection[1]*(this.top-origin[1]),t4=invDirection[2]*(this.back-origin[2]),t5=invDirection[2]*(this.front-origin[2]),tmax=Math.min(Math.max(t0,t1),Math.max(t2,t3),Math.max(t4,t5));if(tmax<0)return false;var tmin=Math.max(Math.min(t0,t1),Math.min(t2,t3),Math.min(t4,t5));return tmin<tmax&&tmin<maxDistance;},get depthEnd(){var _this7=this;return this.nodeIndices.reduce(function(depth,i){return Math.max(depth,_this7.nodesByIndex[i].depthEnd);},this.depth);},get nodeCountEnd(){return this.tree.root.nodeCountRecursive+1;},get nodeCountRecursive(){var _this8=this;return this.nodeIndices.reduce(function(count,i){return count+_this8.nodesByIndex[i].nodeCountRecursive;},this.nodeIndices.length);},get objectsEnd(){var _this9=this;return this.nodeIndices.reduce(function(objects,i){return objects.concat(_this9.nodesByIndex[i].objectsEnd);},this.objects.slice());},get objectCountEnd(){var _this10=this;return this.nodeIndices.reduce(function(count,i){return count+_this10.nodesByIndex[i].objectCountEnd;},this.objects.length);},get objectCountStart(){var count=this.objects.length,parent=this;while(parent=parent.parent){count+=parent.objects.length;}return count;}};var astar={traversePath:function traversePath(node){var path=[node];while(node=node.parent){path.unshift(node);}return path;},smoothPath:function smoothPath(graph,path){var checkPath=astar.sampleLine.bind(null,graph);for(var i=path.length-1,node=path[i--];i>0;i--){checkPath(node,path[i-1])?path.splice(i,1):node=path[i];}return path;},sampleLine:function sampleLine(graph,start,end){var grid=graph.grid,minX=Math.min(start.x,end.x),minY=Math.min(start.y,end.y),maxX=Math.max(start.x,end.x),maxY=Math.max(start.y,end.y),dx=maxX-minX,dy=maxY-minY;for(var x=minX,y=minY,stepX=0,stepY=0;stepX<dx||stepY<dy;){var distX=(0.5+stepX)/dx,distY=(0.5+stepY)/dy;if(distX<distY)stepX++;else if(distX>distY)stepY++;else{stepX++;stepY++;if(!graph.estimateWeight(graph.grid[minX+stepX-1][minY+stepY]))return false;if(!graph.estimateWeight(graph.grid[minX+stepX][minY+stepY-1]))return false;}if(!graph.estimateWeight(graph.grid[minX+stepX][minY+stepY]))return false;}return true;},search:function search(graph,start,end){var options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};graph.cleanDirty(astar.cleanNode);var heuristic=options.heuristic||graph.heuristic;var findClosest=options.findClosest||false;var openHeap=BinaryHeap(function(a,b){return a.total-b.total||a.estimated-b.estimated;});var closestNode=start;start.estimated=heuristic(start,end);graph.markDirty(start);openHeap.push(start);while(openHeap.size>0){var node=openHeap.pop();if(node===end)return astar.traversePath(node);node.closed=true;var neighbors=graph.neighbors(node);for(var i=0,length=neighbors.length;i<length;i++){var neighbor=neighbors[i],traverseWeight=graph.estimateWeight(neighbor,node);if(neighbor.closed||!traverseWeight)continue;var shortestDistance=node.distance+traverseWeight;if(neighbor.visited&&shortestDistance>=neighbor.distance)continue;neighbor.parent=node;neighbor.estimated=neighbor.estimated||heuristic(neighbor,end);neighbor.distance=shortestDistance;neighbor.total=neighbor.estimated+neighbor.distance;graph.markDirty(neighbor);if(findClosest&&(closestNode.estimated-neighbor.estimated||closestNode.distance-neighbor.distance)>0)closestNode=neighbor;neighbor.visited?openHeap.updateElement(neighbor):openHeap.push(neighbor);neighbor.visited=true;}}return findClosest?astar.traversePath(closestNode):[];},cleanNode:function cleanNode(node){node.distance=node.estimated=node.total=0;node.visited=node.closed=false;node.parent=null;}};factory.declare('time',function(target){var requestId=null,prevTimestamp=0,stream=Stream();var update=function update(timestamp){var deltaTime=timestamp-prevTimestamp;prevTimestamp=timestamp;stream.onSuccess({metronome:target,deltaTime:deltaTime,timestamp:timestamp});if(requestId)requestId=window.requestAnimationFrame(update);};return{pulse:stream,get time(){return prevTimestamp;},get timestamp(){return window.performance.now();},get paused(){return requestId===null;},set paused(value){value?target.pause():target.start();},start:function start(){return requestId||(requestId=window.requestAnimationFrame(update)),target;},pause:function pause(){return requestId=(!requestId||window.cancelAnimationFrame(requestId),null),target;}};});factory.declare('eventbus',function(target){return{};});var EventEmitter=function EventEmitter(_){var events=Object.create(null);return{addEventListener:function addEventListener(event,listener){var once=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var listeners=events[event]||(events[event]=[]);if(listeners.indexOf(listener)!==-1)return false;if(once)listener.oneTime=true;listeners.push(listener);},removeEventListener:function removeEventListener(event,listener){var listeners=events[event]||(events[event]=[]),index=listeners.indexOf(listener);if(index===-1)return false;listeners.splice(index,1);},removeAllEventListeners:Object.values(events).forEach(function(listeners){return listeners.length=0;}),dispatchEvent:function dispatchEvent(event){for(var _len14=arguments.length,args=Array(_len14>1?_len14-1:0),_key14=1;_key14<_len14;_key14++){args[_key14-1]=arguments[_key14];}var listeners=events[event];if(!listeners)return false;for(var i=listeners.length-1;i>=0;i--){if(listeners[i].apply(null,args),listeners[i].oneTime)listeners.splice(i,1);}}};};var events=Object.freeze({EventEmitter:EventEmitter});var Cluster=function Cluster(options){options=Object.assign({padding:1e-3,capacityThreshold:Infinity,capacityScale:0},options||{});var cluster=Object.create(null),positions=[],pointers=[],accumulativeCentroid=vec3$1(0),centroid=vec3$1();var maxConnection=0,connectionFactor=0;return tie(cluster,{index:options.index,get pointers(){return pointers;},recompute:function recompute(_){vec3$1.scale(accumulativeCentroid,1/positions.length,centroid);positions.forEach(function(position){return maxConnection=Math.max(maxConnection,vec3$1.differenceSquared(position,centroid));});connectionFactor=(1+options.padding-Math.max(0,positions.length-options.capacityThreshold)*options.capacityScale)*maxConnection;},computeWeight:function computeWeight(position){return+positions.length&&vec3$1.differenceSquared(position,centroid)-connectionFactor;},add:function add(position,pointer){positions.push(position);pointers.push(pointer);vec3$1.add(accumulativeCentroid,position,accumulativeCentroid);cluster.recompute();},remove:function remove(pointer){var idx=pointers.indexOf(pointer);if(idx==-1)return false;vec3$1.subtract(accumulativeCentroid,positions[idx],accumulativeCentroid);cluster.recompute();positions.splice(idx,1);pointers.splice(idx,1);},get size(){return positions.length;},get averageVolume(){return positions.reduce(function(total,position){return total+vec3$1.differenceSquared(centroid,position);},0)/positions.length;}});};var StaticClusterPartitioning=function StaticClusterPartitioning(options){options=Object.assign({worldScale:100,limit:20,index:0},options||{});var target=Object.create(null),clusters=[Cluster(options)];return tie(target,{add:function add(position,pointer){var clusterIdx=void 0,minWeight=Number.MAX_VALUE;for(var i=clusters.length-1;i>=0;i--){var weight=clusters[i].computeWeight(position);if(weight>=minWeight)continue;minWeight=weight;clusterIdx=i;}minWeight/=options.worldScale;if(minWeight>1&&clusters.length<options.limit)clusterIdx=(options.index++,clusters.push(Cluster(options))-1);var cluster=clusters[clusterIdx],prevCluster=pointer.partitionCluster;if(prevCluster)if(prevCluster===cluster)return true;else target.remove(pointer);cluster.add(position,pointer);target.dispatchEvent('add',pointer.partitionCluster=cluster);},remove:function remove(pointer){var cluster=pointer.partitionCluster,clusterIdx=clusters.indexOf(cluster);delete pointer.partitionCluster;cluster.remove(pointer);if(clusterIdx==-1)return false;if(!cluster.size)target.dispatchEvent('remove',clusters.splice(clusterIdx,1)[0]);},get clusters(){return clusters;}},EventEmitter());};var math=Object.freeze({greatestCommonDivisor:greatestCommonDivisor,unrollVectorBinaryOperator:unrollVectorBinaryOperator,unrollVectorScalarOperator:unrollVectorScalarOperator,unrollVectorUnaryOperator:unrollVectorUnaryOperator,lerp:lerp,generateUUID:generateUUID,HALF_DEG_RAD:HALF_DEG_RAD,DEG_RAD:DEG_RAD,EPSILON:EPSILON,SQRT2:SQRT2,vec2:vec2,vec3:vec3$1,vec4:vec4,mat2:mat2,mat3:mat3,mat4:mat4,quat:quat$1,dualquat:dualquat,frustum:frustum,Ray:Ray,BinaryHeap:BinaryHeap,Graph:Graph,heuristics:heuristics,rngMultiplyWithCarry:rngMultiplyWithCarry,rngLinearCongruentialGenerator:rngLinearCongruentialGenerator,rngSimple:rngSimple,PoissonDisk:PoissonDisk,BinPacker:BinPacker,Raycaster:Raycaster,Octree:Octree,astar:astar,StaticClusterPartitioning:StaticClusterPartitioning,Cluster:Cluster});var PlaneGeometry=function PlaneGeometry(_ref7){var _ref7$halfWidth=_ref7.halfWidth,halfWidth=_ref7$halfWidth===undefined?1e4:_ref7$halfWidth,_ref7$halfHeight=_ref7.halfHeight,halfHeight=_ref7$halfHeight===undefined?1e4:_ref7$halfHeight,_ref7$normal=_ref7.normal,normal=_ref7$normal===undefined?vec3$1.AXIS_Z:_ref7$normal;var tangent=vec3$1(),binormal=vec3$1();vec3$1.extractTangents(normal,tangent,binormal);vec3$1.scale(tangent,halfWidth,tangent);vec3$1.scale(binormal,halfHeight,binormal);var vertices=[vec3$1.add(tangent,binormal),vec3$1.subtract(binormal,tangent),vec3$1.negate(vec3$1.add(tangent,binormal)),vec3$1.subtract(tangent,binormal)],indices=[0,1,2,0,2,3],normals=Array(4).fill(normal),uvs=[vec2(0,0),vec2(1,0),vec2(1,1),vec2(0,1)];return{vertices:vertices,indices:indices,normals:normals,uvs:uvs};};var BoxGeometry=function BoxGeometry(_ref8){var _ref8$halfX=_ref8.halfX,halfX=_ref8$halfX===undefined?10:_ref8$halfX,_ref8$halfY=_ref8.halfY,halfY=_ref8$halfY===undefined?10:_ref8$halfY,_ref8$halfZ=_ref8.halfZ,halfZ=_ref8$halfZ===undefined?10:_ref8$halfZ;var vertices=[vec3$1(halfX,halfY,halfZ),vec3$1(-halfX,halfY,halfZ),vec3$1(-halfX,-halfY,halfZ),vec3$1(halfX,-halfY,halfZ),vec3$1(halfX,halfY,halfZ),vec3$1(halfX,-halfY,halfZ),vec3$1(halfX,-halfY,-halfZ),vec3$1(halfX,halfY,-halfZ),vec3$1(halfX,halfY,halfZ),vec3$1(halfX,halfY,-halfZ),vec3$1(-halfX,halfY,-halfZ),vec3$1(-halfX,halfY,halfZ),vec3$1(-halfX,halfY,halfZ),vec3$1(-halfX,halfY,-halfZ),vec3$1(-halfX,-halfY,-halfZ),vec3$1(-halfX,-halfY,halfZ),vec3$1(-halfX,-halfY,-halfZ),vec3$1(halfX,-halfY,-halfZ),vec3$1(halfX,-halfY,halfZ),vec3$1(-halfX,-halfY,halfZ),vec3$1(halfX,-halfY,-halfZ),vec3$1(-halfX,-halfY,-halfZ),vec3$1(-halfX,halfY,-halfZ),vec3$1(halfX,halfY,-halfZ)],indices=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23],normals=[vec3$1(0,0,1),vec3$1(0,0,1),vec3$1(0,0,1),vec3$1(0,0,1),vec3$1(1,0,0),vec3$1(1,0,0),vec3$1(1,0,0),vec3$1(1,0,0),vec3$1(0,1,0),vec3$1(0,1,0),vec3$1(0,1,0),vec3$1(0,1,0),vec3$1(-1,0,0),vec3$1(-1,0,0),vec3$1(-1,0,0),vec3$1(-1,0,0),vec3$1(0,-1,0),vec3$1(0,-1,0),vec3$1(0,-1,0),vec3$1(0,-1,0),vec3$1(0,0,-1),vec3$1(0,0,-1),vec3$1(0,0,-1),vec3$1(0,0,-1)],uvs=[vec2(1,0),vec2(0,0),vec2(0,1),vec2(1,1),vec2(1,0),vec2(1,1),vec2(0,0),vec2(0,1),vec2(1,0),vec2(0,1),vec2(1,1),vec2(0,0),vec2(0,0),vec2(1,1),vec2(1,0),vec2(0,1),vec2(1,0),vec2(0,0),vec2(1,1),vec2(0,1),vec2(0,0),vec2(1,0),vec2(1,1),vec2(0,1)];return{vertices:vertices,indices:indices,normals:normals,uvs:uvs};};var SphereGeometry=function SphereGeometry(_ref9){var _ref9$radius=_ref9.radius,radius=_ref9$radius===undefined?10:_ref9$radius,_ref9$widthSegments=_ref9.widthSegments,widthSegments=_ref9$widthSegments===undefined?8:_ref9$widthSegments,_ref9$heightSegments=_ref9.heightSegments,heightSegments=_ref9$heightSegments===undefined?6:_ref9$heightSegments,_ref9$phi=_ref9.phi,phi=_ref9$phi===undefined?2*Math.PI:_ref9$phi,_ref9$theta=_ref9.theta,theta=_ref9$theta===undefined?Math.PI:_ref9$theta,_ref9$phiOffset=_ref9.phiOffset,phiOffset=_ref9$phiOffset===undefined?0:_ref9$phiOffset,_ref9$thetaOffset=_ref9.thetaOffset,thetaOffset=_ref9$thetaOffset===undefined?0:_ref9$thetaOffset;var vertices=[],indices=[],normals=[],uvs=[];for(var y=0;y<=heightSegments;y++){var stepY=y/heightSegments;for(var x=0;x<=widthSegments;x++){var stepX=x/widthSegments;var vertex=vec3$1(radius*-Math.cos(phiOffset+stepX*phi)*Math.sin(thetaOffset+stepY*theta),radius*Math.cos(thetaOffset+stepY*theta),radius*Math.sin(phiOffset+stepX*phi)*Math.sin(thetaOffset+stepY*theta));vertices.push(vertex);normals.push(vec3$1.normalize(vertex));uvs.push(vec2(stepX,1-stepY));if(y==heightSegments||x==widthSegments)continue;var a=y*(widthSegments+1)+(x+1),b=y*(widthSegments+1)+x,c=(y+1)*(widthSegments+1)+x,d=(y+1)*(widthSegments+1)+(x+1);if(y>0||thetaOffset>0)indices.push(a,b,d);if(y<heightSegments||thetaOffset+theta<Math.PI)indices.push(b,c,d);}}return{vertices:vertices,indices:indices,normals:normals,uvs:uvs};};var azimuth=function azimuth(v){return Math.atan2(v[2],-v[0]);};var inclination=function inclination(v){return Math.atan2(-v[1],Math.sqrt(v[0]*v[0]+v[2]*v[2]));};var ConvexPolyhedronGeometry=function ConvexPolyhedronGeometry(_ref10){var corners=_ref10.corners,faces=_ref10.faces,faceNormals=_ref10.faceNormals;var vertices=[],indices=[],normals=[],uvs=[];faces.map(function(face){return face.map(function(index){return vec3$1.copy(corners[index]);});}).forEach(function(face,faceIdx){var faceNormal=faceNormals?faceNormals[faceIdx]:vec3$1.faceNormal(face[0],face[1],face[2]);vec3$1.normalize(faceNormal,faceNormal);var offset=vertices.length,faceUvs=face.map(function(vertex){return vec2(0.5*azimuth(vertex)/Math.PI+0.5,1-inclination(vertex)/Math.PI+0.5);});vertices.push.apply(vertices,_toConsumableArray(face));normals.push.apply(normals,_toConsumableArray(Array(face.length).fill(faceNormal)));Array.range(face.length-2).forEach(function(index){var centroid=vec3$1.add(vec3$1.add(face[0],face[index+1]),face[index+2]);vec3$1.scale(centroid,1/3,centroid);var centroidAzimuth=azimuth(centroid);[0,index+1,index+2].forEach(function(idx){var uv=faceUvs[idx];if(centroidAzimuth<0&&uv[0]==1)uv[0]=uv[0]-1;if(face[idx][0]==0&&face[idx][2]==2)uv[0]=0.5*centroidAzimuth/Math.PI+0.5;});indices.push(offset,offset+index+1,offset+index+2);});uvs.push.apply(uvs,_toConsumableArray(faceUvs));});return{vertices:vertices,indices:indices,normals:normals,uvs:uvs};};var GridGeometry=function GridGeometry(_ref11){var _ref11$columns=_ref11.columns,columns=_ref11$columns===undefined?1:_ref11$columns,_ref11$rows=_ref11.rows,rows=_ref11$rows===undefined?1:_ref11$rows,_ref11$width=_ref11.width,width=_ref11$width===undefined?100:_ref11$width,_ref11$height=_ref11.height,height=_ref11$height===undefined?100:_ref11$height,_ref11$normal=_ref11.normal,normal=_ref11$normal===undefined?vec3$1.AXIS_Y:_ref11$normal;var tangent=vec3$1(),binormal=vec3$1();vec3$1.extractTangents(normal,tangent,binormal);vec3$1.scale(tangent,width/columns,tangent);vec3$1.scale(binormal,height/rows,binormal);var vertices=[];var uvs=[];var normals=[];for(var row=0;row<=rows;row++){for(var column=0;column<=columns;column++){vertices.push(vec3$1(tangent[0]*column+binormal[0]*row,tangent[1]*column+binormal[1]*row,tangent[2]*column+binormal[2]*row));uvs.push(vec2(column/columns,1-row/rows));normals.push(normal);}}var indices=[];for(var _row=0;_row<rows;_row++){for(var _column=0;_column<columns;_column++){var a=_column+_row*(columns+1);var b=_column+(_row+1)*(columns+1);var c=_column+1+(_row+1)*(columns+1);var d=_column+1+_row*(columns+1);indices.push(a,b,d);indices.push(b,c,d);}}return{vertices:vertices,indices:indices,normals:normals,uvs:uvs};};vec3$1.faceNormal=function(a,b,c){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:vec3$1();var ax=a[0]-b[0],ay=a[1]-b[1],az=a[2]-b[2],bx=a[0]-c[0],by=a[1]-c[1],bz=a[2]-c[2];out[0]=ay*bz-az*by;out[1]=az*bx-ax*bz;out[2]=ax*by-ay*bx;return out;};vec3$1.round=function(vec,precision){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:vec3$1();out[0]=vec[0].toFixed(precision);out[1]=vec[1].toFixed(precision);out[2]=vec[2].toFixed(precision);return out;};vec3$1.angle=function(a,b){return Math.acos(Math.clamp(vec3$1.dot(a,b)/Math.sqrt(vec3$1.distanceSquared(a)*vec3$1.distanceSquared(b)),-1,1));};vec2.key=function(vector){var precision=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1e3;return Math.round(vector[0]*precision)+"-"+Math.round(vector[1]*precision);};vec3$1.key=function(vector){var precision=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1e3;return Math.round(vector[0]*precision)+"-"+Math.round(vector[1]*precision)+"-"+Math.round(vector[2]*precision);};vec4.key=function(vector){var precision=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1e3;return Math.round(vector[0]*precision)+"-"+Math.round(vector[1]*precision)+"-"+Math.round(vector[2]*precision)+"-"+Math.round(vector[3]*precision);};vec4.negate=function(v){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec4();out[0]=-v[0];out[1]=-v[1];out[2]=-v[2];out[3]=-v[3];return out;};var constructPolygonPlane=function constructPolygonPlane(vertices){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec4();var a=vertices[0],b=vertices[1];for(var i=vertices.length-1;i>=2;i--){if(!vec3$1.equals(vec3$1.ZERO,vec3$1.faceNormal(a,b,vertices[i],out)))break;}vec3$1.normalize(out,out);out[3]=vec3$1.dot(out,a);return out;};var mergePolygons=function mergePolygons(verticesA,verticesB){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];var vertices=[],indicesA=verticesA.map(function(vertex){return(vertices.indexOf(vertex)+1||vertices.push(vertex))-1;}),indicesB=verticesB.map(function(vertex){return(vertices.indexOf(vertex)+1||vertices.push(vertex))-1;}),contourA=[],contourB=[],edges=[];if(verticesA.length+verticesB.length-vertices.length<2)return null;for(var i=indicesA.length-1;i>=0;contourA[indicesA[(i||indicesA.length)-1]]=indicesA[i--]){}for(var _i4=indicesB.length-1;_i4>=0;contourB[indicesB[(_i4||indicesB.length)-1]]=indicesB[_i4--]){}var sharedEdges=contourA.filter(function(next,prev){return contourB[next]==prev||(edges[prev]=next,false);}).length;if(!sharedEdges)return null;contourB.forEach(function(next,prev){return contourA[next]==prev||(edges[prev]=next);});for(var index=0,next=edges[index];next!=-1;edges[index]=-1,next=edges[index=next]){out.push(vertices[index]);}if(vertices.length!=out.length-sharedEdges+1)return null;return out;};var sharedPolygonIndices=function sharedPolygonIndices(a,b){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];var indexMap=Object.create(null);for(var i=b.length-1;i>=0;indexMap[b[i--]]=true){}var startIndex=void 0,value=void 0,lengthA=a.length;for(startIndex=lengthA-1;startIndex>=0;startIndex--){if(!indexMap[a[(startIndex||lengthA)-1]]&&indexMap[a[startIndex]])break;}for(var _i5=0;_i5<lengthA;_i5++){if(indexMap[value=a[(startIndex+_i5)%lengthA]])out.push(value);}return out;};var mergeConvexColinearEdges=function mergeConvexColinearEdges(vertices){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var precision=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1e5;var length=vertices.length;if(length<3)return false;var previousEdge=vec3$1.subtract(vertices[length-1],vertices[length-2],vec3$1()),nextEdge=vec3$1(),orientation=void 0,angleSum=0;for(var i=0;i<length;i++){var vertex=vertices[(i||length)-1];vec3$1.subtract(vertices[i],vertex,nextEdge);var angle=vec3$1.angle(previousEdge,nextEdge);if(Math.round(angle*precision)==0)continue;if(!orientation)orientation=Math.sign(angle);else if(orientation!=Math.sign(angle))return false;angleSum+=Math.abs(angle);out.push(vertex);vec3$1.copy(nextEdge,previousEdge);}return Math.round(angleSum/(Math.PI*2))==1?out:false;};var transformGeometry=function transformGeometry(geometry,transform){var vertices=geometry.vertices;for(var i=vertices.length-1;i>=0;i--){transform.call(geometry,vertices[i]);}return geometry;};var Plane=function Plane(){var _ref12=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref12$dimensions=_ref12.dimensions,dimensions=_ref12$dimensions===undefined?vec2(1e3):_ref12$dimensions;var vertices=Array.range(4).map(function(i){return vec3$1(dimensions[0]*(i&1?0.5:-0.5),dimensions[1]*(i&2?0.5:-0.5),0);}),faces=[[0,1,3,2]];return{vertices:vertices,faces:faces};};var Sphere=function Sphere(){var _ref13=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref13$wedges=_ref13.wedges,wedges=_ref13$wedges===undefined?16:_ref13$wedges,_ref13$rings=_ref13.rings,rings=_ref13$rings===undefined?8:_ref13$rings,_ref13$radius=_ref13.radius,radius=_ref13$radius===undefined?1:_ref13$radius;var thetaAngle=2*Math.PI/wedges,phiAngle=Math.PI/rings,vertices=[],faces=[],indices=Array.range(rings+1).map(function(y){return Array.range(y==0||y==rings||wedges).map(function(x){var theta=x*thetaAngle,phi=y*phiAngle,normal=vec3$1(Math.cos(theta)*Math.sin(phi),Math.cos(phi),Math.sin(theta)*Math.sin(phi));return vertices.push(vec3$1.scale(normal,radius,normal))-1;});});for(var y=0;y<rings;y++){for(var x=0;x<wedges;x++){faces.push(y==0&&[indices[y+1][x],indices[y][0],indices[y+1][(x+1)%wedges]]||y==rings-1&&[indices[y+1][0],indices[y][x],indices[y][(x+1)%wedges]]||[indices[y+1][x],indices[y][x],indices[y][(x+1)%wedges],indices[y+1][(x+1)%wedges]]);}}return{vertices:vertices,faces:faces};};var Cuboid=function Cuboid(){var _ref14=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref14$halfExtents=_ref14.halfExtents,halfExtents=_ref14$halfExtents===undefined?vec3$1.ONE:_ref14$halfExtents;var vertices=Array.range(8).map(function(idx){return vec3$1(idx&1?halfExtents[0]:-halfExtents[0],idx&2?halfExtents[1]:-halfExtents[1],idx&4?halfExtents[2]:-halfExtents[2]);}),faces=[[0,4,6,2],[1,3,7,5],[0,1,5,4],[2,6,7,3],[0,2,3,1],[4,5,7,6]];return{vertices:vertices,faces:faces};};var Cylinder=function Cylinder(){var _ref15=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref15$segments=_ref15.segments,segments=_ref15$segments===undefined?16:_ref15$segments,_ref15$height=_ref15.height,height=_ref15$height===undefined?1:_ref15$height,_ref15$radius=_ref15.radius,radius=_ref15$radius===undefined?1:_ref15$radius;var thetaAngle=2*Math.PI/segments,vertices=[],faces=[];var top=[],bottom=[];for(var i=0,j=segments-1;i<segments;j=i++){var theta=thetaAngle*i,x=Math.sin(theta)*radius,z=Math.cos(theta)*radius;vertices.push(vec3$1(z,x,0.5*height),vec3$1(z,x,-0.5*height));faces.push([2*j,2*j+1,2*i+1,2*i]);top.push(2*i);bottom.push(2*i+1);}faces.push(top,bottom.reverse());return{vertices:vertices,faces:faces};};var Polyhedron=function Polyhedron(_ref16){var vertices=_ref16.vertices,faces=_ref16.faces;return{vertices:vertices.map(function(vertex){return vec3$1.copy(vertex);}),faces:faces.map(function(face){return face.slice();})};};var Polygon=function Polygon(vertices,plane){return{vertices:vertices,plane:plane?vec4.copy(plane):constructPolygonPlane(vertices)};};var intoPolygonList=function intoPolygonList(_ref17){var vertices=_ref17.vertices,faces=_ref17.faces;return faces.map(function(face){return Polygon(face.map(function(index){return vertices[index];}));});};var PLANE_NEAR_TOLERANCE=1e-4;var COPLANAR=0;var FRONT=1;var BACK=2;var SPANNING=3;var splitPolygonByPlane=function splitPolygonByPlane(plane,polygon,coplanarFront,coplanarBack,front,back){var dot=vec3$1.dot(plane,polygon.plane);var polygonSide=0;var vertexSides=polygon.vertices.map(function(vertex){var distance=vec3$1.dot(plane,vertex)-plane[3];var side=distance<-PLANE_NEAR_TOLERANCE&&BACK||distance>PLANE_NEAR_TOLERANCE&&FRONT||COPLANAR;polygonSide|=side;return side;});switch(polygonSide){case COPLANAR:(dot>0?coplanarFront:coplanarBack).push(polygon);break;case FRONT:front.push(polygon);break;case BACK:back.push(polygon);break;case SPANNING:var frontVertices=[],backVertices=[];for(var length=polygon.vertices.length,i=0,j=length-1;i<length;j=i++){var sideA=vertexSides[j],sideB=vertexSides[i],vertexA=polygon.vertices[j],vertexB=polygon.vertices[i];if(sideA!=BACK)frontVertices.push(vertexA);if(sideA!=FRONT)backVertices.push(vertexA);if((sideA|sideB)===SPANNING){var factor=(plane[3]-vec3$1.dot(plane,vertexA))/vec3$1.dot(plane,vec3$1.subtract(vertexB,vertexA,vec3$1.temp));var middleVertex=vec3$1.lerp(vertexA,vertexB,factor,vec3$1());frontVertices.push(middleVertex);backVertices.push(middleVertex);}}frontVertices.length>=3&&front.push(Polygon(frontVertices,polygon.plane));backVertices.length>=3&&back.push(Polygon(backVertices,polygon.plane));break;}};var BSPNode=function BSPNode(_){var node=Object.create(BSPNode.prototype);node.plane=null;node.front=null;node.back=null;node.nodePolygons=[];return node;};Object.assign(BSPNode,{insertPolygons:regeneratorRuntime.mark(function insertPolygons(root,polygons){var stack,polygonList,node,splittingPolygon,front,back,i;return regeneratorRuntime.wrap(function insertPolygons$(_context){while(1){switch(_context.prev=_context.next){case 0:stack=[root,polygons];case 1:if(!stack.length){_context.next=14;break;}polygonList=stack.pop(),node=stack.pop();if(polygonList.length){_context.next=5;break;}return _context.abrupt("continue",1);case 5:if(!node.plane){splittingPolygon=polygonList.shift();node.nodePolygons.push(splittingPolygon);node.plane=vec4.copy(splittingPolygon.plane);}front=[],back=[];for(i=polygonList.length-1;i>=0;i--){splitPolygonByPlane(node.plane,polygonList[i],node.nodePolygons,node.nodePolygons,front,back);}if(front.length)stack.push(node.front=node.front||BSPNode(),front);if(back.length)stack.push(node.back=node.back||BSPNode(),back);_context.next=12;return;case 12:_context.next=1;break;case 14:case"end":return _context.stop();}}},insertPolygons,this);}),fetchPolygons:regeneratorRuntime.mark(function fetchPolygons(root){var out,stack,node;return regeneratorRuntime.wrap(function fetchPolygons$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:out=[],stack=[root];case 1:if(!stack.length){_context2.next=10;break;}node=stack.pop();out=out.concat(node.nodePolygons);if(node.front)stack.push(node.front);if(node.back)stack.push(node.back);_context2.next=8;return;case 8:_context2.next=1;break;case 10:return _context2.abrupt("return",out);case 11:case"end":return _context2.stop();}}},fetchPolygons,this);}),invert:regeneratorRuntime.mark(function invert(root){var stack,node,swap;return regeneratorRuntime.wrap(function invert$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:stack=[root];case 1:if(!stack.length){_context3.next=14;break;}node=stack.pop();node.nodePolygons.forEach(function(polygon){polygon.vertices.reverse();vec4.negate(polygon.plane,polygon.plane);});vec4.negate(node.plane,node.plane);swap=node.front;node.front=node.back;node.back=swap;node.front&&stack.push(node.front);node.back&&stack.push(node.back);_context3.next=12;return;case 12:_context3.next=1;break;case 14:case"end":return _context3.stop();}}},invert,this);}),clipTo:regeneratorRuntime.mark(function clipTo(root,bspNode,clipCoplanar){var outerStack,innerStack,node,clippedPolygons,polygons,clippingNode,front,coplanarFront,back,i;return regeneratorRuntime.wrap(function clipTo$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:outerStack=[root],innerStack=[];case 1:if(!outerStack.length){_context4.next=21;break;}node=outerStack.pop();if(node.front)outerStack.push(node.front);if(node.back)outerStack.push(node.back);clippedPolygons=[];innerStack.push(bspNode,node.nodePolygons);case 7:if(!innerStack.length){_context4.next=18;break;}polygons=innerStack.pop();clippingNode=innerStack.pop();front=[],coplanarFront=[],back=[];for(i=polygons.length-1;i>=0;i--){splitPolygonByPlane(clippingNode.plane,polygons[i],clipCoplanar?back:front,back,front,back);}if(clippingNode.front)innerStack.push(clippingNode.front,front);else clippedPolygons=clippedPolygons.concat(front);if(clippingNode.back)innerStack.push(clippingNode.back,back);_context4.next=16;return;case 16:_context4.next=7;break;case 18:node.nodePolygons=clippedPolygons;_context4.next=1;break;case 21:case"end":return _context4.stop();}}},clipTo,this);})});var union=regeneratorRuntime.mark(function union(polygonsA,polygonsB){var a,b,clippedPolygonsB,clippedPolygonsA;return regeneratorRuntime.wrap(function union$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:a=BSPNode(),b=BSPNode();return _context5.delegateYield(BSPNode.insertPolygons(a,polygonsA),"t0",2);case 2:return _context5.delegateYield(BSPNode.insertPolygons(b,polygonsB),"t1",3);case 3:return _context5.delegateYield(BSPNode.clipTo(a,b,false),"t2",4);case 4:return _context5.delegateYield(BSPNode.clipTo(b,a,true),"t3",5);case 5:return _context5.delegateYield(BSPNode.fetchPolygons(b),"t4",6);case 6:clippedPolygonsB=_context5.t4;return _context5.delegateYield(BSPNode.insertPolygons(a,clippedPolygonsB),"t5",8);case 8:return _context5.delegateYield(BSPNode.fetchPolygons(a),"t6",9);case 9:clippedPolygonsA=_context5.t6;return _context5.abrupt("return",clippedPolygonsA);case 11:case"end":return _context5.stop();}}},union,this);});var subtract=regeneratorRuntime.mark(function subtract(polygonsA,polygonsB){var a,b,clippedPolygonsB,clippedPolygonsA;return regeneratorRuntime.wrap(function subtract$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:a=BSPNode(),b=BSPNode();return _context6.delegateYield(BSPNode.insertPolygons(a,polygonsA),"t0",2);case 2:return _context6.delegateYield(BSPNode.insertPolygons(b,polygonsB),"t1",3);case 3:return _context6.delegateYield(BSPNode.invert(a),"t2",4);case 4:return _context6.delegateYield(BSPNode.clipTo(a,b,false),"t3",5);case 5:return _context6.delegateYield(BSPNode.clipTo(b,a,true),"t4",6);case 6:return _context6.delegateYield(BSPNode.fetchPolygons(b),"t5",7);case 7:clippedPolygonsB=_context6.t5;return _context6.delegateYield(BSPNode.insertPolygons(a,clippedPolygonsB),"t6",9);case 9:return _context6.delegateYield(BSPNode.invert(a),"t7",10);case 10:return _context6.delegateYield(BSPNode.fetchPolygons(a),"t8",11);case 11:clippedPolygonsA=_context6.t8;return _context6.abrupt("return",clippedPolygonsA);case 13:case"end":return _context6.stop();}}},subtract,this);});var invert=regeneratorRuntime.mark(function invert(polygons){var i,polygon;return regeneratorRuntime.wrap(function invert$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:i=polygons.length-1;case 1:if(!(i>=0)){_context7.next=10;break;}polygon=polygons[i];polygon.vertices.reverse();vec4.negate(polygon.plane,polygon.plane);_context7.next=7;return;case 7:i--;_context7.next=1;break;case 10:return _context7.abrupt("return",polygons);case 11:case"end":return _context7.stop();}}},invert,this);});var intersect=regeneratorRuntime.mark(function intersect(polygonsA,polygonsB){var a,b,clippedPolygonsB,clippedPolygonsA;return regeneratorRuntime.wrap(function intersect$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:a=BSPNode(),b=BSPNode();return _context8.delegateYield(BSPNode.insertPolygons(a,polygonsA),"t0",2);case 2:return _context8.delegateYield(BSPNode.insertPolygons(b,polygonsB),"t1",3);case 3:return _context8.delegateYield(BSPNode.invert(a),"t2",4);case 4:return _context8.delegateYield(BSPNode.clipTo(b,a,false),"t3",5);case 5:return _context8.delegateYield(BSPNode.invert(b),"t4",6);case 6:return _context8.delegateYield(BSPNode.clipTo(a,b,false),"t5",7);case 7:return _context8.delegateYield(BSPNode.clipTo(b,a,false),"t6",8);case 8:return _context8.delegateYield(BSPNode.fetchPolygons(b),"t7",9);case 9:clippedPolygonsB=_context8.t7;return _context8.delegateYield(BSPNode.insertPolygons(a,clippedPolygonsB),"t8",11);case 11:return _context8.delegateYield(BSPNode.invert(a),"t9",12);case 12:return _context8.delegateYield(BSPNode.fetchPolygons(a),"t10",13);case 13:clippedPolygonsA=_context8.t10;return _context8.abrupt("return",clippedPolygonsA);case 15:case"end":return _context8.stop();}}},intersect,this);});var expand=regeneratorRuntime.mark(function expand(polygons){var padding=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var vertices;return regeneratorRuntime.wrap(function expand$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:vertices=[];polygons.forEach(function(polygon){return polygon.vertices.forEach(function(vertex){return vertex.planeList?vertex.planeList.push(polygon.plane):(vertices.push(vertex),vertex.planeList=[polygon.plane]);});});vertices.forEach(function(vertex){var averageNormal=vertex.planeList.reduce(function(average,normal){return vec3$1.add(average,normal,average);},vec3$1(0));vec3$1.normalize(averageNormal,averageNormal);var dot=vec3$1.dot(averageNormal,vertex.planeList[0]);vec3$1.scale(averageNormal,padding/dot,averageNormal);vec3$1.add(vertex,averageNormal,vertex);delete vertex.planeList;});polygons.forEach(function(polygon){return constructPolygonPlane(polygon.vertices,polygon.plane);});return _context9.abrupt("return",polygons);case 5:case"end":return _context9.stop();}}},expand,this);});var simplify=regeneratorRuntime.mark(function simplify(polygons){var precision=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1e2;var vertexMap,planeMap,i,polygon,_i6,_polygon,plane,key,planes,mergedPolygons,_i7,coplanarPolygons,_i8,polygonA,j,polygonB,contourUnion;return regeneratorRuntime.wrap(function simplify$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:vertexMap=Object.create(null),planeMap=Object.create(null);i=polygons.length-1;case 2:if(!(i>=0)){_context10.next=10;break;}polygon=polygons[i];polygon.vertices=polygon.vertices.map(function(vertex){var key=vec3$1.key(vertex,precision);return vertexMap[key]||(vertexMap[key]=vertex);}).filter(function(vertex,idx,vertices){return vertices.indexOf(vertex)==idx;});_context10.next=7;return;case 7:i--;_context10.next=2;break;case 10:_i6=polygons.length-1;case 11:if(!(_i6>=0)){_context10.next=24;break;}_polygon=polygons[_i6];if(!(_polygon.vertices.length<3)){_context10.next=15;break;}return _context10.abrupt("continue",21);case 15:plane=_polygon.plane;key=vec4.key(plane,precision);if(!planeMap[key])planeMap[key]=[];planeMap[key].push(_polygon);_context10.next=21;return;case 21:_i6--;_context10.next=11;break;case 24:planes=Object.values(planeMap),mergedPolygons=[];_i7=planes.length-1;case 26:if(!(_i7>=0)){_context10.next=53;break;}coplanarPolygons=planes[_i7];_i8=coplanarPolygons.length-1;case 29:if(!(_i8>=0)){_context10.next=49;break;}polygonA=coplanarPolygons[_i8],j=_i8-1;case 31:if(!(j>=0)){_context10.next=46;break;}if(!(_i8==j)){_context10.next=34;break;}return _context10.abrupt("continue",43);case 34:polygonB=coplanarPolygons[j],contourUnion=mergePolygons(polygonA.vertices,polygonB.vertices);_context10.next=37;return;case 37:if(!(!contourUnion||!(contourUnion=mergeConvexColinearEdges(contourUnion)))){_context10.next=39;break;}return _context10.abrupt("continue",43);case 39:polygonA.vertices=contourUnion;coplanarPolygons.splice(j,1);_i8--;j=coplanarPolygons.length;case 43:j--;_context10.next=31;break;case 46:_i8--;_context10.next=29;break;case 49:mergedPolygons[_i7]=coplanarPolygons;case 50:_i7--;_context10.next=26;break;case 53:return _context10.abrupt("return",mergedPolygons.flatten());case 54:case"end":return _context10.stop();}}},simplify,this);});var inwardOffset=regeneratorRuntime.mark(function inwardOffset(vertices,polygons,offset){var vertexOffsets,prevEdge,nextEdge,inwardNormal,i,vertexOffset,vertex,adjacent,j,polygon,index,prevVertex,nextVertex,angle,planeNormal,_i9;return regeneratorRuntime.wrap(function inwardOffset$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:vertexOffsets=[];prevEdge=vec3$1(),nextEdge=vec3$1(),inwardNormal=vec3$1();i=vertices.length-1;case 3:if(!(i>=0)){_context11.next=38;break;}vertexOffset=vertexOffsets[i]=vec3$1();vertex=vertices[i];adjacent=0;j=polygons.length-1;case 8:if(!(j>=0)){_context11.next=32;break;}polygon=polygons[j];index=polygon.indices.indexOf(i);if(!(index==-1)){_context11.next=13;break;}return _context11.abrupt("continue",29);case 13:adjacent++;prevVertex=vertices[polygon.indices[Math.mod(index-1,polygon.indices.length)]];nextVertex=vertices[polygon.indices[Math.mod(index+1,polygon.indices.length)]];vec3$1.subtract(vertex,prevVertex,prevEdge);vec3$1.subtract(nextVertex,vertex,nextEdge);vec3$1.cross(prevEdge,polygon.normal,prevEdge);vec3$1.cross(nextEdge,polygon.normal,nextEdge);vec3$1.normalize(prevEdge,prevEdge);vec3$1.normalize(nextEdge,nextEdge);vec3$1.add(prevEdge,nextEdge,inwardNormal);vec3$1.normalize(inwardNormal,inwardNormal);angle=vec3$1.angle(inwardNormal,nextEdge);vec3$1.scale(inwardNormal,-offset/Math.cos(angle),inwardNormal);vec3$1.add(inwardNormal,vertexOffset,vertexOffset);planeNormal=vec3$1.scale(polygon.normal,offset);vec3$1.add(planeNormal,vertexOffset,vertexOffset);case 29:j--;_context11.next=8;break;case 32:vec3$1.scale(vertexOffset,1/adjacent,vertexOffset);_context11.next=35;return;case 35:i--;_context11.next=3;break;case 38:for(_i9=vertexOffsets.length-1;_i9>=0;_i9--){vec3$1.add(vertexOffsets[_i9],vertices[_i9],vertices[_i9]);}case 39:case"end":return _context11.stop();}}},inwardOffset,this);});var pointInsidePolygon=function pointInsidePolygon(polygon,point){var planeNearThreshold=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0.5;var flag=false;var min=Number.MAX_VALUE,max=-Number.MAX_VALUE;for(var i=polygon.length-1;i>=0;i--){var edgeA=polygon[i],edgeB=polygon[(i||polygon.length)-1];min=Math.min(edgeA[1],min);max=Math.max(edgeA[1],max);if(edgeA[2]>point[2]==edgeB[2]>point[2])continue;if(point[0]-edgeA[0]<(edgeB[0]-edgeA[0])*(point[2]-edgeA[2])/(edgeB[2]-edgeA[2]))flag=!flag;}if(point[1]>max+planeNearThreshold||point[1]<min-planeNearThreshold)return false;return flag;};var findClosestNode=function findClosestNode(position,polygons,vertices){var options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var minDistance=options.maxThreshold||Number.MAX_VALUE,closestNode=null;for(var i=polygons.length-1;i>=0;i--){var node=polygons[i],measuredDistance=vec3$1.differenceSquared(position,node.centroid);if(measuredDistance>=minDistance)continue;if(options.checkBounds&&!pointInsidePolygon(node.indices.map(function(idx){return vertices[idx];}),position,options.planeNearThreshold))continue;closestNode=node;minDistance=measuredDistance;}return{distance:minDistance,node:closestNode};};var mergeVertices=function mergeVertices(vertices,faces){var precision=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1e4;vertices.forEach(function(vertex){return vec3$1.round(vertex,2,vertex);});var verticesMap=Object.create(null),unique=[],duplicates=vertices.map(function(vertex,idx){var key=vec3$1.key(vertex,precision);return verticesMap[key]||(verticesMap[key]=unique.push(vertex));}),polygons=faces.map(function(face){return face.map(function(idx){return duplicates[idx]-1;}).filter(function(idx,i,indices){return indices.indexOf(idx)==i;});}).filter(function(face){return face.length>2;}).map(function(indices){return{indices:indices,normal:vec3$1.faceNormal(indices.map(function(idx){return unique[idx];}),vec3$1())};});return{polygons:polygons,vertices:vertices};};var MeshGraph=function MeshGraph(_){return Object.create(MeshGraph.prototype);};MeshGraph.prototype={init:function init(mesh){this.nodes=mesh;this.dirtyNodes=this.nodes.slice();return this;},neighbors:function neighbors(node){return node.neighbours;},cleanDirty:function cleanDirty(cleanNode){var idx=this.dirtyNodes.length;while(idx--){cleanNode(this.dirtyNodes[idx]);}this.dirtyNodes.length=0;},markDirty:function markDirty(node){this.dirtyNodes.push(node);},estimateWeight:function estimateWeight(node,neighbour){return 1.0;},heuristic:function heuristic(a,b){return vec3$1.differenceSquared(a.centroid,b.centroid);}};var triangleAreaSquared=function triangleAreaSquared(a,b,c){var ax=b[0]-a[0],az=b[2]-a[2],bx=c[0]-a[0],bz=c[2]-a[2];return bx*az-ax*bz;};var Funnel=function Funnel(_){var portalsL=[],portalsR=[];var length=0,path=[];return{get path(){return path;},clear:function clear(_){return portalsL.length=portalsR.length=length=0;},push:function push(left){var right=arguments.length>1&&arguments[1]!==undefined?arguments[1]:left;portalsL[length]=left;portalsR[length]=right;length++;},traverse:function traverse(_){path.length=0;var leftIndex=0,rightIndex=0,leftPortal=portalsL[leftIndex],rightPortal=portalsR[rightIndex],apexPortal=leftPortal;path.push(apexPortal);for(var i=0;i<length;i++){var left=portalsL[i],right=portalsR[i];if(triangleAreaSquared(apexPortal,rightPortal,right)<=0.0)if(vec3$1.equals(apexPortal,rightPortal)||triangleAreaSquared(apexPortal,leftPortal,right)>0.0){rightPortal=right;rightIndex=i;}else{apexPortal=rightPortal=leftPortal;i=rightIndex=leftIndex;path.push(apexPortal);continue;}if(triangleAreaSquared(apexPortal,leftPortal,left)>=0.0)if(vec3$1.equals(apexPortal,leftPortal)||triangleAreaSquared(apexPortal,rightPortal,left)<0.0){leftPortal=left;leftIndex=i;}else{apexPortal=leftPortal=rightPortal;i=leftIndex=rightIndex;path.push(apexPortal);continue;}}if(!path.length||!vec3$1.equals(path[path.length-1],portalsL[length-1]))path.push(portalsL[length-1]);return path;}};};var logger=function(target){var history=[],styles=Object.create(null),filter=[];return Object.assign(target,{filter:filter,info:function info(style){for(var _len15=arguments.length,args=Array(_len15>1?_len15-1:0),_key15=1;_key15<_len15;_key15++){args[_key15-1]=arguments[_key15];}if(window.DEBUG&&filter.indexOf(style)==-1)args.forEach(function(msg){return(typeof msg==="undefined"?"undefined":_typeof(msg))==='object'?console.dir(msg):styles[style]?console.log('%c'+msg,styles[style]):console.log(msg);});return target;},registerStyle:function registerStyle(style,cssText){return styles[style]=cssText,target;}});}(Object.create(null));logger.registerStyle('webgl','color:#22cc9c;background:#111;border-bottom:4px solid #779977').registerStyle('loader','color:#000099;background:#ccffff').registerStyle('buffer','color:#357235;text-decoration:underline').registerStyle('memory','color:#ac33bb;font-style:italic').registerStyle('lightmap','color:#5588CC').registerStyle('navigation','color:#002266;text-shadow:0px 0px 1px #bbffbb').registerStyle('ai','color:#af3814;border-bottom:1px solid #444444').registerStyle('fx','color:#663399;font-size:8pt;border-bottom:1px #663399 dashed').registerStyle('spatial','color:#e73d4d;font-weight:bold;text-shadow:0px 0px 1px #000000');var buildConfigurationSpace=regeneratorRuntime.mark(function buildConfigurationSpace(solids,options){var geometry,combinedGeometry,i,solid,simplifiedGeometry,vertexMap,vertices,polygons,_i10,polygon,_i11,_polygon2,plane,indices,_i12,vertexA,vertexB,edgeLength,j,vertexC,distance,difference;return regeneratorRuntime.wrap(function buildConfigurationSpace$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:options=Object.assign({padding:1,margin:0,steepness:Math.PI/4,precision:1e3,nearThreshold:1e-5},options||{});geometry=solids.flatten(),combinedGeometry=null;i=geometry.length-1;case 3:if(!(i>=0)){_context12.next=17;break;}solid=geometry[i]=intoPolygonList(geometry[i]);if(!options.margin){_context12.next=7;break;}return _context12.delegateYield(expand(solid,options.margin),"t0",7);case 7:if(!combinedGeometry){_context12.next=12;break;}return _context12.delegateYield(union(combinedGeometry,solid),"t2",9);case 9:_context12.t1=_context12.t2;_context12.next=13;break;case 12:_context12.t1=solid;case 13:combinedGeometry=_context12.t1;case 14:i--;_context12.next=3;break;case 17:return _context12.delegateYield(simplify(combinedGeometry),"t3",18);case 18:simplifiedGeometry=_context12.t3;geometry=simplifiedGeometry.filter(function(polygon){return Math.acos(vec3$1.dot(vec3$1.AXIS_Y,polygon.plane))<options.steepness;});logger.info('navigation',"Configuration Space: combined "+combinedGeometry.length+" simplified "+simplifiedGeometry.length+" final "+geometry.length);vertexMap=Object.create(null),vertices=[],polygons=[];_i10=geometry.length-1;case 23:if(!(_i10>=0)){_context12.next=31;break;}polygon=geometry[_i10];polygons[_i10]={normal:vec3$1.copy(polygon.plane),indices:polygon.vertices.map(function(vertex){var key=vec3$1.key(vertex,options.precision);var index=vertexMap[key]||(vertexMap[key]=vertices.push(vertex));return index-1;})};_context12.next=28;return;case 28:_i10--;_context12.next=23;break;case 31:_i11=polygons.length-1;case 32:if(!(_i11>=0)){_context12.next=65;break;}_polygon2=polygons[_i11],plane=geometry[_i11].plane,indices=_polygon2.indices;_i12=0;case 35:if(!(_i12<indices.length)){_context12.next=60;break;}vertexA=vertices[indices[_i12]];vertexB=vertices[indices[(_i12+1)%indices.length]];edgeLength=vec3$1.difference(vertexB,vertexA);j=0;case 40:if(!(j<vertices.length)){_context12.next=57;break;}_context12.next=43;return;case 43:vertexC=vertices[j];if(!(indices.indexOf(j)!=-1)){_context12.next=46;break;}return _context12.abrupt("continue",54);case 46:if(!(Math.abs(plane[3]-vec3$1.dot(plane,vertexC))>options.nearThreshold)){_context12.next=48;break;}return _context12.abrupt("continue",54);case 48:distance=vec3$1.difference(vertexC,vertexA),difference=(distance+vec3$1.difference(vertexB,vertexC))/edgeLength;if(!(Math.abs(difference-1)>options.nearThreshold)){_context12.next=51;break;}return _context12.abrupt("continue",54);case 51:indices.splice(_i12+1,0,j);edgeLength=distance;vertexB=vertexC;case 54:j++;_context12.next=40;break;case 57:_i12++;_context12.next=35;break;case 60:_context12.next=62;return;case 62:_i11--;_context12.next=32;break;case 65:if(!options.padding){_context12.next=67;break;}return _context12.delegateYield(inwardOffset(vertices,polygons,options.padding),"t4",67);case 67:return _context12.abrupt("return",{polygons:polygons,vertices:vertices});case 68:case"end":return _context12.stop();}}},buildConfigurationSpace,this);});var linkNavigationGeometry=regeneratorRuntime.mark(function linkNavigationGeometry(_ref18){var _this11=this;var vertices=_ref18.vertices,polygons=_ref18.polygons;var _loop,idx;return regeneratorRuntime.wrap(function linkNavigationGeometry$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:_loop=regeneratorRuntime.mark(function _loop(idx){var polygon,indices,centroid,vertexIdxMap,i,radiusSquared,_i13,neighbours;return regeneratorRuntime.wrap(function _loop$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:polygon=polygons[idx],indices=polygon.indices,centroid=vec3$1(0),vertexIdxMap=Object.create(null);for(i=indices.length-1;i>=0;i--){vec3$1.add(centroid,vertices[indices[i]],centroid);vertexIdxMap[indices[i]]=true;}vec3$1.scale(centroid,1/indices.length,centroid);vec3$1.round(centroid,2,centroid);radiusSquared=0;for(_i13=indices.length-1;_i13>=0;radiusSquared=Math.max(radiusSquared,vec3$1.differenceSquared(centroid,vertices[indices[_i13--]]))){}neighbours=polygons.filter(function(neighbour,i){return i!=idx&&neighbour.indices.filter(function(vertexIdx){return vertexIdxMap[vertexIdx];}).length>=2;});Object.assign(polygon,{centroid:centroid,neighbours:neighbours,boundingRadius:Math.sqrt(radiusSquared)});_context13.next=10;return;case 10:case"end":return _context13.stop();}}},_loop,_this11);});idx=polygons.length-1;case 2:if(!(idx>=0)){_context14.next=7;break;}return _context14.delegateYield(_loop(idx),"t0",4);case 4:idx--;_context14.next=2;break;case 7:return _context14.abrupt("return",{vertices:vertices,polygons:polygons});case 8:case"end":return _context14.stop();}}},linkNavigationGeometry,this);});var groupNavigationMesh=regeneratorRuntime.mark(function groupNavigationMesh(_ref19,options){var _this12=this;var vertices=_ref19.vertices,polygons=_ref19.polygons;var groups,groupCount,polygonIdx,polygonsToProcess,i,polygon,_i14,neighbour,_loop2,group,_loop3;return regeneratorRuntime.wrap(function groupNavigationMesh$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:options=Object.assign({expectedGroups:1},options||{});groups=[],groupCount=0,polygonIdx=polygons.length,polygonsToProcess=[];i=polygons.length-1;case 3:if(!(i>=0)){_context17.next=30;break;}polygon=polygonsToProcess.pop();if(polygon){_context17.next=14;break;}case 6:if(!polygonIdx--){_context17.next=14;break;}polygon=polygons[polygonIdx];if(!(polygon.group!==undefined)){_context17.next=10;break;}return _context17.abrupt("continue",6);case 10:groups[polygon.group=groupCount++]=[];return _context17.abrupt("break",14);case 14:groups[polygon.group].push(polygon);_i14=polygon.neighbours.length-1;case 16:if(!(_i14>=0)){_context17.next=25;break;}neighbour=polygon.neighbours[_i14];if(!(neighbour.group!==undefined)){_context17.next=20;break;}return _context17.abrupt("continue",22);case 20:neighbour.group=polygon.group;polygonsToProcess.push(neighbour);case 22:_i14--;_context17.next=16;break;case 25:_context17.next=27;return;case 27:i--;_context17.next=3;break;case 30:groups=groups.sort(function(a,b){return b.length-a.length;}).slice(0,options.expectedGroups);_loop2=regeneratorRuntime.mark(function _loop2(group){var reindexed,filtered,polygons,_i15,_polygon3;return regeneratorRuntime.wrap(function _loop2$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:reindexed=[],filtered=[],polygons=groups[group];groups[group]={polygons:polygons,vertices:filtered};_i15=polygons.length-1;case 3:if(!(_i15>=0)){_context15.next=12;break;}_polygon3=polygons[_i15];_polygon3.group=group;_polygon3.indices=_polygon3.indices.map(function(index){return(reindexed[index]||(reindexed[index]=filtered.push(vertices[index])))-1;});_context15.next=9;return;case 9:_i15--;_context15.next=3;break;case 12:case"end":return _context15.stop();}}},_loop2,_this12);});group=groups.length-1;case 33:if(!(group>=0)){_context17.next=38;break;}return _context17.delegateYield(_loop2(group),"t0",35);case 35:group--;_context17.next=33;break;case 38:_loop3=regeneratorRuntime.mark(function _loop3(group){var polygons,groupVertices,_i16,_polygon4,neighbours,portals,j;return regeneratorRuntime.wrap(function _loop3$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:polygons=groups[group].polygons,groupVertices=groups[group].vertices;_i16=polygons.length-1;case 2:if(!(_i16>=0)){_context16.next=16;break;}_polygon4=polygons[_i16],neighbours=_polygon4.neighbours,portals=_polygon4.portals=[];j=neighbours.length-1;case 5:if(!(j>=0)){_context16.next=13;break;}portals[j]=sharedPolygonIndices(_polygon4.indices,neighbours[j].indices).map(function(idx){return groupVertices[idx];});portals[j].splice(1,portals[j].length-2);_context16.next=10;return;case 10:j--;_context16.next=5;break;case 13:_i16--;_context16.next=2;break;case 16:case"end":return _context16.stop();}}},_loop3,_this12);});group=groups.length-1;case 40:if(!(group>=0)){_context17.next=45;break;}return _context17.delegateYield(_loop3(group),"t1",42);case 42:group--;_context17.next=40;break;case 45:return _context17.abrupt("return",groups);case 46:case"end":return _context17.stop();}}},groupNavigationMesh,this);});var findIntersectionLine=regeneratorRuntime.mark(function findIntersectionLine(normal,indicesA,verticesA,indicesB,verticesB){var nearPrecision=arguments.length>5&&arguments[5]!==undefined?arguments[5]:1e-1;var edge,direction,a0,a1,vertexA0,vertexA1,planeW,directionW,b0,b1,vertexB0,vertexB1,edgeB,dotA,dotB,dotC,dotD;return regeneratorRuntime.wrap(function findIntersectionLine$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:edge=vec3(),direction=vec3();a0=indicesA.length-1,a1=0;case 2:if(!(a0>=0)){_context18.next=38;break;}vertexA0=verticesA[indicesA[a0]],vertexA1=verticesA[indicesA[a1]];vec3.subtract(vertexA1,vertexA0,edge);vec3.normalize(edge,edge);vec3.cross(edge,normal,direction);planeW=vec3.dot(normal,vertexA0),directionW=vec3.dot(direction,vertexA0);b0=indicesB.length-1,b1=0;case 9:if(!(b0>=0)){_context18.next=35;break;}vertexB0=verticesB[indicesB[b0]],vertexB1=verticesB[indicesB[b1]],edgeB=vec3.subtract(vertexB1,vertexB0,vec3());if(!(vec3.dot(edge,edgeB)>=0)){_context18.next=13;break;}return _context18.abrupt("continue",32);case 13:if(!(Math.abs(vec3.dot(normal,vertexB0)-planeW)>nearPrecision)){_context18.next=15;break;}return _context18.abrupt("continue",32);case 15:if(!(Math.abs(vec3.dot(direction,vertexB0)-directionW)>nearPrecision)){_context18.next=17;break;}return _context18.abrupt("continue",32);case 17:if(!(Math.abs(vec3.dot(normal,vertexB1)-planeW)>nearPrecision)){_context18.next=19;break;}return _context18.abrupt("continue",32);case 19:if(!(Math.abs(vec3.dot(direction,vertexB1)-directionW)>nearPrecision)){_context18.next=21;break;}return _context18.abrupt("continue",32);case 21:dotA=vec3.dot(edge,vertexA0),dotB=vec3.dot(edge,vertexA1),dotC=vec3.dot(edge,vertexB0),dotD=vec3.dot(edge,vertexB1);if(!(dotD>=dotB||dotA>=dotC)){_context18.next=24;break;}return _context18.abrupt("continue",32);case 24:if(!(dotA<=dotD&&dotB>=dotC)){_context18.next=26;break;}return _context18.abrupt("return",[vertexB1,vertexB0]);case 26:if(!(dotA>=dotD&&dotB<=dotC)){_context18.next=28;break;}return _context18.abrupt("return",[vertexA0,vertexA1]);case 28:if(!(dotA<=dotD&&dotB<=dotC)){_context18.next=30;break;}return _context18.abrupt("return",[vertexB1,vertexA1]);case 30:if(!(dotA>=dotD&&dotB>=dotC)){_context18.next=32;break;}return _context18.abrupt("return",[vertexA0,vertexB0]);case 32:b1=b0--;_context18.next=9;break;case 35:a1=a0--;_context18.next=2;break;case 38:return _context18.abrupt("return",null);case 39:case"end":return _context18.stop();}}},findIntersectionLine,this);});var attachNavigationMesh=regeneratorRuntime.mark(function attachNavigationMesh(existingGroups,navigationMesh){var prevPolygons,polygons,a,polygonA,b,polygonB,combinedRadius,distanceSquared,portal,groupOffset;return regeneratorRuntime.wrap(function attachNavigationMesh$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:if(existingGroups){_context19.next=2;break;}return _context19.abrupt("return",navigationMesh);case 2:prevPolygons=existingGroups.map(function(group){return group.polygons;}).flatten(),polygons=navigationMesh.map(function(group){return group.polygons;}).flatten();a=polygons.length-1;case 4:if(!(a>=0)){_context19.next=26;break;}polygonA=polygons[a],b=prevPolygons.length-1;case 6:if(!(b>=0)){_context19.next=23;break;}polygonB=prevPolygons[b],combinedRadius=polygonA.boundingRadius+polygonB.boundingRadius,distanceSquared=vec3.differenceSquared(polygonA.centroid,polygonB.centroid);_context19.next=10;return;case 10:if(!(combinedRadius*combinedRadius<distanceSquared)){_context19.next=12;break;}return _context19.abrupt("continue",20);case 12:return _context19.delegateYield(findIntersectionLine(polygonA.normal,polygonA.indices,navigationMesh[polygonA.group].vertices,polygonB.indices,existingGroups[polygonB.group].vertices),"t0",13);case 13:portal=_context19.t0;if(portal){_context19.next=16;break;}return _context19.abrupt("continue",20);case 16:polygonB.neighbours.push(polygonA);polygonA.neighbours.push(polygonB);polygonA.portals.push(portal);polygonB.portals.push(portal.slice().reverse()),(polygonA.joints=polygonA.joint||[]).push(polygonB),(polygonA.joints=polygonA.joint||[]).push(polygonB);case 20:b--;_context19.next=6;break;case 23:a--;_context19.next=4;break;case 26:groupOffset=existingGroups.length;navigationMesh.forEach(function(group){return group.polygons.forEach(function(polygon){return polygon.group+=groupOffset;});});existingGroups.push.apply(existingGroups,_toConsumableArray(navigationMesh));return _context19.abrupt("return",existingGroups);case 30:case"end":return _context19.stop();}}},attachNavigationMesh,this);});var detachNavigationMesh=regeneratorRuntime.mark(function detachNavigationMesh(existingGroups,group){var idx;return regeneratorRuntime.wrap(function detachNavigationMesh$(_context20){while(1){switch(_context20.prev=_context20.next){case 0:idx=existingGroups.indexOf(group);if(!(idx==-1)){_context20.next=3;break;}return _context20.abrupt("return",existingGroups);case 3:group.polygons.filter(function(polygon){return polygon.joint;}).forEach(function(polygon){return polygon.joints.forEach(function(jointPolygon){var idx=jointPolygon.neighbours.indexOf(polygon);jointPolygon.neighbours.splice(idx,1);jointPolygon.portals.splice(idx,1);jointPolygon.joints.remove(polygon);if(!jointPolygon.joints.length)delete jointPolygon.joints;});});existingGroups.splice(idx,1);existingGroups.slice(idx).forEach(function(group,idx){return group.polygons.forEach(function(polygon){return--polygon.group;});});return _context20.abrupt("return",existingGroups);case 7:case"end":return _context20.stop();}}},detachNavigationMesh,this);});factory.declare('navigation_mesh',function(target,options){var layers=Object.create(null),taskManager=options.taskManager,syncWrapLayer=function syncWrapLayer(layer,nextTask){return(layers[layer]=layers[layer]||{queue:Signal.just({})}).queue=layers[layer].queue.pipe(function(layerData){return nextTask.call(target,layerData.groups);}).pipe(function(layerGroups){return tie(layers[layer],{groups:layerGroups,graph:MeshGraph().init(layerGroups.map(function(group){return group.polygons;}).flatten())});});};return{get layers(){return layers;},buildNodes:function buildNodes(solidGeometry,layer){return taskManager.runGenerator(buildConfigurationSpace(solidGeometry,{steepness:Math.PI/3})).pipe(function(geometry){return taskManager.runGenerator(linkNavigationGeometry(geometry));}).pipe(function(navigationMesh){return taskManager.runGenerator(groupNavigationMesh(navigationMesh,{expectedGroups:1}));}).pipe(function(nodeGroups){return syncWrapLayer(layer,function(groups){return taskManager.runGenerator(attachNavigationMesh(groups,nodeGroups));});});},deleteNodes:function deleteNodes(layer,group){return syncWrapLayer(layer,function(groups){return taskManager.runGenerator(detachNavigationMesh(groups,group));});},detectNearestNode:function detectNearestNode(position,layer,options){if(!layers[layer])return null;var closestNode=layers[layer].groups.reduce(function(nodeA,nodeB,idx){return nodeB=findClosestNode(position,nodeB.polygons,nodeB.vertices,options),nodeA&&nodeA.distance<nodeB.distance?nodeA:nodeB.node&&nodeB;},null);return closestNode&&closestNode.node;},queryNodes:function queryNodes(layer,nearPosition,nearRange){if(!layers[layer])return null;var nearRangeSquared=nearRange*nearRange;return layers[layer].groups.map(function(group){return group.polygons.filter(function(polygon){return vec3$1.differenceSquared(nearPosition,polygon.centroid)<nearRangeSquared;});}).flatten();},findPath:function findPath(startPosition,targetPosition,layer){if(!layers[layer])return null;var closestNode=target.detectNearestNode(startPosition,layer),farthestNode=target.detectNearestNode(targetPosition,layer,{checkBounds:true}),graph=layers[layer].graph;if(!closestNode||!farthestNode)return null;var nodeList=astar.search(graph,closestNode,farthestNode);var pathBuilder=Funnel();pathBuilder.push(startPosition);for(var i=1,length=nodeList.length;i<length;i++){var prevPolygon=nodeList[i-1],polygon=nodeList[i],portals=prevPolygon.portals[prevPolygon.neighbours.indexOf(polygon)];pathBuilder.push(portals[0],portals[1]);}pathBuilder.push(targetPosition);var path=pathBuilder.traverse();return path.slice(1);}};});var shapeMapper={'plane':Plane,'box':Cuboid,'sphere':Sphere,'cylinder':Cylinder,'convex':Polyhedron};var deserialize=function deserialize(json){var offset=vec3$1(0),orientation=quat$1();var staticObjects=json.filter(function(object){return!object.mass;});var solidGeometry=staticObjects.map(function(object){var position=object.position||vec3$1.ZERO,quaternion=object.quaternion||quat$1();return object.shapes.map(function(shape){if(!shapeMapper[shape.type])throw new Error("Unrecognized shape "+shape.type);var localOffset=shape.offset||vec3$1.ZERO,localOrientation=shape.orientation||quat$1();quat$1.multiply(localOrientation,quaternion,orientation);vec3$1.transformQuat(localOffset,quaternion,offset);vec3$1.add(position,offset,offset);return transformGeometry(shapeMapper[shape.type](shape),function(vertex){vec3$1.transformQuat(vertex,orientation,vertex);vec3$1.add(vertex,offset,vertex);});});});return solidGeometry;};var geometry=Object.freeze({PlaneGeometry:PlaneGeometry,BoxGeometry:BoxGeometry,SphereGeometry:SphereGeometry,ConvexPolyhedronGeometry:ConvexPolyhedronGeometry,GridGeometry:GridGeometry,constructPolygonPlane:constructPolygonPlane,mergeConvexColinearEdges:mergeConvexColinearEdges,mergePolygons:mergePolygons,sharedPolygonIndices:sharedPolygonIndices,Plane:Plane,Sphere:Sphere,Cuboid:Cuboid,Cylinder:Cylinder,Polyhedron:Polyhedron,transformGeometry:transformGeometry,BSPNode:BSPNode,Polygon:Polygon,intoPolygonList:intoPolygonList,splitPolygonByPlane:splitPolygonByPlane,invert:invert,union:union,subtract:subtract,intersect:intersect,expand:expand,simplify:simplify,inwardOffset:inwardOffset,pointInsidePolygon:pointInsidePolygon,findClosestNode:findClosestNode,mergeVertices:mergeVertices,MeshGraph:MeshGraph,Funnel:Funnel,buildConfigurationSpace:buildConfigurationSpace,linkNavigationGeometry:linkNavigationGeometry,deserialize:deserialize,shapeMapper:shapeMapper});factory.declare('screen',function(target){return{get width(){return Math.floor(Math.min(window.document.documentElement.clientWidth,window.innerWidth));},get height(){return Math.floor(Math.min(window.document.documentElement.clientHeight,window.innerHeight));},get dpr(){return Math.round(window.devicePixelRatio);},resize:Stream(function(emit){return window.addEventListener('resize',function(event){return emit({screen:target});},false);}).filter(Stream.minInterval(1000)).default({screen:target}),focus:Stream(function(emit){var prefixes=['webkit','moz','ms','o'],visibilityProperty='hidden'in window.document?'hidden':prefixes.map(function(prefix){return prefix+'Hidden';}).find(function(property){return property in window.document;});if(visibilityProperty)window.document.addEventListener(visibilityProperty.slice(0,-6)+'visibilitychange',function(event){return emit({focus:!window.document[visibilityProperty]});},false);}),fullScreen:['requestFullScreen','webkitRequestFullScreen','mozRequestFullScreen','msRequestFullScreen'].find(function(property){return property in window.document.body;}),ua:navigator.userAgent};});var device=Object.freeze({});factory.declare('resource',function(target,options){var xhr=new XMLHttpRequest(),url=options.url,extension=path(url).extension;xhr.open('GET',encodeURIComponent(url),true);xhr.responseType=options.responseType||'arraybuffer';return{load:function load(_){return Signal(function(onSuccess,onError){logger.info('loader',"\u23E9 loading: "+url);xhr.onprogress=function(evt){return!evt.lengthComputable||evt.loaded/evt.total;};xhr.onreadystatechange=function(_){if(xhr.readyState===XMLHttpRequest.DONE)if(xhr.status===200)onSuccess({data:xhr.response,extension:extension});else onError(xhr);};xhr.send(null);});}};});var cache=Object.create(null);factory.declare('loader',function(target,options){var pending=Object.create(null),batchSize=options.batchSize||4,loadQueue=Stream();loadQueue.buffer(batchSize,function(url,onLoad,onError){return(cache[url]?Signal.just(cache[url]):factory.build('resource',{url:url}).load().pipe(function(data){return target.parse(url,data);})).listen(function(data){return onLoad((pending[url].onSuccess((delete pending[url],cache[url]=data)),data));},function(error){return onError((pending[url].onError(error),error));});});return{fetch:function fetch(url){return pending[url]||(loadQueue.onSuccess(url),pending[url]=Signal());},get pending(){return Object.keys(pending).filter(function(el){return el;});}};});factory.declare('loader',function(target,options){var taskManager=options.manager,parsers=[];return{taskManager:taskManager,appendParser:parsers.push.bind(parsers),RESOURCE_TYPE:Object.create(null),parse:function parse(url,resource){return Signal(function(done){var idx=0;var parsersSnapshot=parsers.slice(),length=parsersSnapshot.length,next=function next(value){return idx>=length?done(value||resource):parsersSnapshot[idx++].call(target,target,resource=value||resource,next.once());};next(resource);});}};});var VERTEX_ATTRIBUTE_TYPE={'position':0x0001,'normal':0x0002,'uv':0x0004,'joint':0x0008,'weight':0x0010,'tangent':0x0020,'color':0x0040,'_1':0x0080,'_2':0x0100};var mapAttrbuteName=function(attributeTypes){return function(type){return attributeTypes.find(function(attrName){return VERTEX_ATTRIBUTE_TYPE[attrName]===type;});};}(Object.keys(VERTEX_ATTRIBUTE_TYPE));var HEADER_LENGTH=8;var JOINT_LENGTH=16+16+4;var pow2=function pow2(val){return 2<<val-1||1;};var decodeBuffer=function decodeBuffer(arraybuffer){var header=new Uint32Array(arraybuffer,0,HEADER_LENGTH),vertexArray=new Float32Array(arraybuffer,header.byteOffset+header.byteLength,header[0]),jointArray=new Float32Array(arraybuffer,vertexArray.byteOffset+vertexArray.byteLength,header[2]*JOINT_LENGTH),animationArray=new Float32Array(arraybuffer,jointArray.byteOffset+jointArray.byteLength,header[3]),indexArray=new Uint16Array(arraybuffer,animationArray.byteOffset+animationArray.byteLength,header[1]),formatArray=new Uint16Array(arraybuffer,indexArray.byteOffset+indexArray.byteLength,header[4]),materialArray=new Uint8Array(arraybuffer,formatArray.byteOffset+formatArray.byteLength,header[5]),dataFormat=Array.prototype.slice.call(formatArray).map(function(attr){return{type:mapAttrbuteName(pow2(attr>>8)),size:(attr&0x03)+1,byteSize:((attr&0x0F)>>2)+1};}),stride=dataFormat.reduce(function(size,attr){return size+attr.size;},0),boneHierarchy=Array(header[2]).fill().map(function(_,idx){return idx*JOINT_LENGTH;}).map(function(offset,idx){return{parent:jointArray[offset+0],bufferOffset:jointArray[offset+1],bufferLength:jointArray[offset+2],bindPose:new Float32Array(jointArray.buffer,jointArray.byteOffset+(offset+4)*Float32Array.BYTES_PER_ELEMENT,16),localTransform:new Float32Array(jointArray.buffer,jointArray.byteOffset+(offset+4+16)*Float32Array.BYTES_PER_ELEMENT,16)};}),materials=materialArray.length===0?null:JSON.parse(String.fromCharCode.apply(null,materialArray)).map(function(material){return{bones:material[0],textureNames:material.slice(1)};}),animationLayers=[];var idx=0;while(idx<animationArray.length){animationLayers.push(Array(animationArray[idx++]).fill().reduce(function(bones,_){return bones[animationArray[idx++]]=Array(animationArray[idx++]).fill().map(function(_){return{time:animationArray[idx++],position:new Float32Array([animationArray[idx++],animationArray[idx++],animationArray[idx++]]),rotation:new Float32Array([animationArray[idx++],animationArray[idx++],animationArray[idx++],animationArray[idx++]])};}),bones;},[]));}for(var offset=0,i=0;i<dataFormat.length;offset+=dataFormat[i++].size){dataFormat[i].offset=offset;}return{indexArray:indexArray,vertexArray:vertexArray,dataFormat:dataFormat,stride:stride,armature:boneHierarchy.length?(boneHierarchy.unshift(null),boneHierarchy):null,animation:animationLayers.length?animationLayers:null,materials:materials};};factory.declare('loader',function(target,options){target.RESOURCE_TYPE.MESH='mesh';target.appendParser(function(loader,resource,next){if(resource.extension!=='vmf')return next();Signal.just(decodeBuffer(resource.data)).listen(function(data){return next({data:data,type:loader.RESOURCE_TYPE.MESH});});});});factory.declare('gl_context',function(target,options){var ctxOptions=tie({alpha:false,depth:true,stencil:false,antialias:false,premultipliedAlpha:true},options.canvasOptions||{}),canvas=window.document.createElement('canvas'),gl=canvas.getContext('webgl',ctxOptions)||canvas.getContext('experimental-webgl',ctxOptions),pipeline=factory.build('pipeline');canvas.addEventListener('webglcontextlost',function(event){event.preventDefault();},false);canvas.addEventListener('webglcontextrestored',function(event){return null;},false);canvas.addEventListener('contextmenu',function(event){event.preventDefault();event.stopPropagation();},false);gl.clearColor(0.0,0.0,0.0,0.0);gl.clearDepth(1.0);gl.depthFunc(gl.LEQUAL);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);return{canvas:canvas,gl:gl,pipeline:pipeline,resize:function resize(width,height){canvas.width=width;canvas.height=height;target.resetViewport();},resetViewport:function resetViewport(_){return target.viewport=[canvas.width,canvas.height];},render:function render(scene){gl.clear(gl.DEPTH_BUFFER_BIT);return pipeline.run(target,scene);},drawElements:function drawElements(size,offset){return gl.drawElements(gl.TRIANGLES,size,gl.UNSIGNED_SHORT,Uint16Array.BYTES_PER_ELEMENT*offset);},drawArrays:function drawArrays(size,offset){return gl.drawArrays(gl.TRIANGLES,offset,size);}};});var GLSL_TYPE_SIZE={'float':1,'vec2':2,'vec3':3,'vec4':4,'int':1,'ivec2':2,'ivec3':3,'ivec4':4,'mat2':4,'mat3':9,'mat4':16,'sampler2D':1,'samplerCube':1};var GL_TYPE_SIZE={'BYTE':Int8Array.BYTES_PER_ELEMENT,'SHORT':Int16Array.BYTES_PER_ELEMENT,'UNSIGNED_BYTE':Uint8Array.BYTES_PER_ELEMENT,'UNSIGNED_SHORT':Uint16Array.BYTES_PER_ELEMENT,'FLOAT':Float32Array.BYTES_PER_ELEMENT};var GL_GLSL_MAP={'FLOAT':'float','FLOAT_VEC2':'vec2','FLOAT_VEC3':'vec3','FLOAT_VEC4':'vec4','INT':'int','INT_VEC2':'ivec2','INT_VEC3':'ivec3','INT_VEC4':'ivec4','FLOAT_MAT2':'mat2','FLOAT_MAT3':'mat3','FLOAT_MAT4':'mat4','SAMPLER_2D':'sampler2D','SAMPLER_CUBE':'samplerCube'};var GLSL_TYPE_MAP={};var DEFAULT_GLSL_VALUE={'float':function float(size){return size===1?0.0:new Float32Array(size);},'vec2':function vec2(size){return new Float32Array(2*size);},'vec3':function vec3(size){return new Float32Array(3*size);},'vec4':function vec4(size){return new Float32Array(4*size);},'int':function int(size){return size===1?0:new Int32Array(size);},'ivec2':function ivec2(size){return new Int32Array(2*size);},'ivec3':function ivec3(size){return new Int32Array(3*size);},'ivec4':function ivec4(size){return new Int32Array(4*size);},'mat2':function mat2(){return new Float32Array(4);},'mat3':function mat3(){return new Float32Array(9);},'mat4':function mat4(){return new Float32Array(16);},'sampler2D':function sampler2D(size){return size===1?0:new Int32Array(size);},'samplerCube':function samplerCube(size){return size===1?0:new Int32Array(size);}};var GLSL_SETTERS={'float':'uniform1f(loc,v)','vec2':'uniform2f(loc,v[0],v[1])','vec3':'uniform3f(loc,v[0],v[1],v[2])','vec4':'uniform4f(loc,v[0],v[1],v[2],v[3])','int':'uniform1i(loc,v)','ivec2':'uniform2i(loc,v[0],v[1])','ivec3':'uniform3i(loc,v[0],v[1],v[2])','ivec4':'uniform4i(loc,v[0],v[1],v[2],v[3])','mat2':'uniformMatrix2fv(loc,false,v)','mat3':'uniformMatrix3fv(loc,false,v)','mat4':'uniformMatrix4fv(loc,false,v)','sampler2D':'uniform1i(loc,v)','samplerCube':'uniform1i(loc,v)'};var GLSL_ARRAY_SETTERS={'float':'uniform1fv(loc,v)','vec2':'uniform2fv(loc,v)','vec3':'uniform3fv(loc,v)','vec4':'uniform4fv(loc,v)','int':'uniform1iv(loc,v)','ivec2':'uniform2iv(loc,v)','ivec3':'uniform3iv(loc,v)','ivec4':'uniform4iv(loc,v)','mat2':'uniformMatrix2fv(loc,false,v)','mat3':'uniformMatrix3fv(loc,false,v)','mat4':'uniformMatrix4fv(loc,false,v)','sampler2D':'uniform1iv(loc,v)','samplerCube':'uniform1iv(loc,v)'};var MAX_INDEX_ARRAY_LENGTH=Math.pow(2,16)-1;var ATTRIBUTE_LOCATIONS={'position':0,'normal':1,'uv':2,'joint':4,'weight':5,'tangent':6,'color':7,'lm_uv':8};var ATTRIB_GL_TYPE=[null,'UNSIGNED_BYTE','UNSIGNED_SHORT',0,'FLOAT'];var MAX_BONES_PER_MESH=64;var GL_BLEND_MODES={blend:function blend(gl){gl.blendEquation(gl.FUNC_ADD);gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA);},add:function add(gl){gl.blendEquation(gl.FUNC_ADD);gl.blendFunc(gl.SRC_ALPHA,gl.ONE);},multiply:function multiply(gl){gl.blendEquation(gl.FUNC_ADD);gl.blendFunc(gl.DST_COLOR,gl.ZERO);},subtract:function subtract(gl){gl.blendEquation(gl.FUNC_REVERSE_SUBTRACT);gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA);}};factory.declare('gl_context',function(target){var gl=target.gl,bindings=Object.create(null),state={depthTest:false,viewport:vec2(),colorMask:vec4(true,true,true,true),clearColor:vec4(0,0,0,0),depthMask:true,culling:0,blendMode:0};var temporaryArrayBuffer=new ArrayBuffer(0),_saveState=new Function('state','snapshot',Object.keys(state).map(function(param){return"snapshot."+param+" = state."+param+(state[param].slice?'.slice()':'');}).join(';')+';return snapshot;').bind(target,state),_restoreState=new Function('target','snapshot',Object.keys(state).map(function(param){return"target."+param+" = snapshot."+param;}).join(';')).bind(target,target),snapshotStack=[];return{get state(){return snapshot(state);},bindings:bindings,onBind:function onBind(location,element){return bindings[location]===element?false:(bindings[location]=element,true);},allocateUint16:function allocateUint16(size){var byteSize=size*Uint16Array.BYTES_PER_ELEMENT;if(temporaryArrayBuffer.byteLength<byteSize)temporaryArrayBuffer=new ArrayBuffer(byteSize);return new Uint16Array(temporaryArrayBuffer,0,size);},set depthTest(value){if(state.depthTest!==value)state.depthTest=(value?gl.enable(gl.DEPTH_TEST):gl.disable(gl.DEPTH_TEST),value);},set viewport(value){if(value[0]!==state.viewport[0]||value[1]!==state.viewport[1]){vec2.copy(value,state.viewport);gl.viewport(0,0,value[0],value[1]);}},set colorMask(value){if(value[0]!==state.colorMask[0]||value[1]!==state.colorMask[1]||value[2]!==state.colorMask[2]||value[3]!==state.colorMask[3]){vec4.copy(value,state.colorMask);gl.colorMask(value[0],value[1],value[2],value[3]);}},set clearColor(value){if(value[0]!==state.clearColor[0]||value[1]!==state.clearColor[1]||value[2]!==state.clearColor[2]||value[3]!==state.clearColor[3]){vec4.copy(value,state.clearColor);gl.clearColor(value[0],value[1],value[2],value[3]);}},set depthMask(value){if(state.depthMask!==value)state.depthMask=(gl.depthMask(value),value);},set culling(value){if(state.culling!==value){state.culling=value;if(!value)gl.disable(gl.CULL_FACE);else{gl.enable(gl.CULL_FACE);if(value==='back')gl.cullFace(gl.BACK);if(value==='front')gl.cullFace(gl.FRONT);}}},set blendMode(value){if(state.blendMode!==value){state.blendMode=value;if(!value)gl.disable(gl.BLEND);else{gl.enable(gl.BLEND);GL_BLEND_MODES[value](gl);}}},saveState:function saveState(_){return snapshotStack.push(_saveState(Object.create(null))),target;},restoreState:function restoreState(_){return _restoreState(snapshotStack.pop()),target;}};});factory.declare('gl_context',function(target){var gl=target.gl,extensions={frag_depth:gl.getExtension('EXT_frag_depth'),shader_texture_lod:gl.getExtension('EXT_shader_texture_lod'),standadrd_derivatives:gl.getExtension('OES_standard_derivatives'),texture_float:gl.getExtension('OES_texture_float'),texture_float_linear:gl.getExtension("OES_texture_float_linear"),texture_half_float:gl.getExtension('OES_texture_half_float'),texture_half_float_linear:gl.getExtension('OES_texture_half_float_linear'),vertex_array_object:gl.getExtension('OES_vertex_array_object')||gl.getExtension('MOZ_OES_vertex_array_object')||gl.getExtension('WEBKIT_OES_vertex_array_object'),depth_texture:gl.getExtension('WEBGL_depth_texture')||gl.getExtension('WEBKIT_WEBGL_depth_texture')};if(extensions.texture_half_float)gl.HALF_FLOAT=extensions.texture_half_float.HALF_FLOAT_OES;if(extensions.depth_texture)gl.UNSIGNED_INT_24_8=extensions.depth_texture.UNSIGNED_INT_24_8_WEBGL;return{extensions:extensions};});var Autowire=function Autowire(root){var unfold=function unfold(prefix,node){return Object.keys(node).map(function(key){var value=node[key],address=""+prefix+(isNaN(key)?"."+key:"["+key+"]");if(typeof value==='function')return null;if(typeof value==='number')return"if(!isNaN(src"+address+"))dst"+address+"=src"+address+";";if(value.buffer instanceof ArrayBuffer)return"if(src"+address+")dst"+address+"=src"+address+";";if((typeof value==="undefined"?"undefined":_typeof(value))==='object')return"if(src"+address+"){"+unfold(address,value)+"}";}).join('\n');};return new Function('dst','src',unfold('',root)).bind(null,root);};var uniformGetter=function uniformGetter(){return this.value;};var uniformArraySetter=function uniformArraySetter(value){this.value.set(value);if(!this.dirtyFlag)this.dirtyFlag=(this.dirty.push(this),true);};var uniformSetter=function uniformSetter(value){if(this.value===value)return false;this.value=value;if(!this.dirtyFlag)this.dirtyFlag=(this.dirty.push(this),true);};var updateUniforms=function updateUniforms(){var idx=this.length,uniform=null;while(idx--){uniform=this[idx];uniform.update(uniform.value);uniform.dirtyFlag=false;}this.length=0;};var extractShaderUniforms=function extractShaderUniforms(gl,program){var uniformAccessObject=Object.create(null);var dirty=[];var idx=gl.getProgramParameter(program,gl.ACTIVE_UNIFORMS);var _loop4=function _loop4(){var data=gl.getActiveUniform(program,idx),name=data.name.replace(/\[0\]$/,''),type=GLSL_TYPE_MAP[data.type],uniform={type:type,dirty:dirty,dirtyFlag:true,location:gl.getUniformLocation(program,name),size:data.size,value:DEFAULT_GLSL_VALUE[type](data.size)};uniform.update=new Function('gl','loc','v','gl.'+(data.size===1?GLSL_SETTERS[type]:GLSL_ARRAY_SETTERS[type])).bind(uniform,gl,uniform.location);name.replace(/\]/g,'').split(/\.|\[/).reduce(function(acc,property,idx,list){if(idx+1>=list.length)Object.defineProperty(acc,property,{get:uniformGetter.bind(uniform),set:isNaN(uniform.value)?uniformArraySetter.bind(uniform):uniformSetter.bind(uniform),enumerable:true});else acc[property]=acc[property]||(isNaN(list[idx+1])?Object.create(null):[]);return acc[property];},uniformAccessObject);dirty.push(uniform);};while(idx--){_loop4();}uniformAccessObject.update=updateUniforms.bind(dirty);uniformAccessObject.autowire=Autowire(uniformAccessObject);return uniformAccessObject;};var bindAttribute=function bindAttribute(gl,type,normalized,stride,offset){gl.enableVertexAttribArray(this.location);gl.vertexAttribPointer(this.location,this.size,type||gl.FLOAT,normalized||false,stride,offset);};var bindAttributeLocation=function bindAttributeLocation(gl,program,location,name){return gl.bindAttribLocation(program,location,name);};var preBindAttributes=function preBindAttributes(gl,program){var attributeLocations=arguments.length>2&&arguments[2]!==undefined?arguments[2]:ATTRIBUTE_LOCATIONS;return Object.keys(attributeLocations).forEach(function(attribName){return bindAttributeLocation(gl,program,attributeLocations[attribName],attribName);});};var extractShaderAttributes=function extractShaderAttributes(gl,program){var attributeLocations=arguments.length>2&&arguments[2]!==undefined?arguments[2]:ATTRIBUTE_LOCATIONS;var attributes=Object.create(null);var idx=gl.getProgramParameter(program,gl.ACTIVE_ATTRIBUTES);while(idx--){var data=gl.getActiveAttrib(program,idx),type=GLSL_TYPE_MAP[data.type],attribute={type:type,size:GLSL_TYPE_SIZE[type],location:gl.getAttribLocation(program,data.name)};attribute.bind=bindAttribute.bind(attribute,gl);attributes[data.name]=attribute;if(attributeLocations[data.name]!==undefined)bindAttributeLocation(gl,program,attributeLocations[data.name],data.name);}return attributes;};var compileShader=function compileShader(gl,type,src){var shader=gl.createShader(type);gl.shaderSource(shader,src);gl.compileShader(shader);return gl.getShaderParameter(shader,gl.COMPILE_STATUS)?shader:(logger.info('webgl',gl.getShaderInfoLog(shader)),null);};var compileShaderProgram=function compileShaderProgram(gl,vert,frag,attributeLocations){var program=gl.createProgram(),vertShader=compileShader(gl,gl.VERTEX_SHADER,vert),fragShader=compileShader(gl,gl.FRAGMENT_SHADER,frag);gl.attachShader(program,vertShader);gl.attachShader(program,fragShader);preBindAttributes(gl,program,attributeLocations);gl.linkProgram(program);gl.deleteShader(vertShader);gl.deleteShader(fragShader);return gl.getProgramParameter(program,gl.LINK_STATUS)?program:(logger.info('webgl',gl.getProgramInfoLog(program)),gl.deleteProgram(program),null);};factory.declare('shader',function(target,_ref20){var ctx=_ref20.ctx,vert=_ref20.vert,frag=_ref20.frag,attributeLocations=_ref20.attributeLocations;var gl=ctx.gl,program=compileShaderProgram(gl,vert,frag,attributeLocations),uao=extractShaderUniforms(gl,program),attributes=extractShaderAttributes(gl,program,attributeLocations);return{attributes:attributes,uao:uao,program:program,use:function use(_){ctx.onBind('shader',target)&&gl.useProgram(program);uao.update();},clear:function clear(_){return gl.deleteProgram(program);}};});var vglsl=Object.create(null);vglsl.PRECISION={LOW:'lowp',MEDIUM:'mediump',HIGH:'highp'};vglsl.createShader=function(_){var builder=Object.create(null);function insert(array,item,comparator){var index=array.findIndex(comparator);if(index==-1)array.push(item);}var precision=vglsl.PRECISION.MEDIUM,extensions=[],structs=[],constants=[],functions=[],uniforms=[],varyings=[],attributes=[],_main=[];return tie(builder,{get precision(){return precision;},setPrecision:function setPrecision(p){return precision=p,builder;},extension:function extension(name){return insert(extensions,name,function(e){return e===e;}),builder;},const:function _const(type,name,value){return insert(constants,{type:type,name:name,value:value},function(c){return c.name===name;}),builder;},struct:function struct(name,params){return insert(structs,{name:name,params:params},function(s){return s.name===name;}),builder;},function:function _function(head,body){return insert(functions,{head:head,body:body},function(f){return f.head===head;}),builder;},uniform:function uniform(type,name){return insert(uniforms,{type:type,name:name},function(u){return u.name===name;}),builder;},varying:function varying(type,name){return insert(varyings,{type:type,name:name},function(v){return v.name===name;}),builder;},attribute:function attribute(type,name){return insert(attributes,{type:type,name:name},function(a){return a.name===name;}),builder;},main:function main(body){return _main=body,builder;},append:function append(target){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vglsl.createShader();if(target)target.append(null,out);out.setPrecision(precision);extensions.forEach(function(e){return out.extension(e);});structs.forEach(function(s){return out.struct(s.name,s.params);});constants.forEach(function(c){return out.const(c.type,c.name,c.value);});functions.forEach(function(f){return out.function(f.head,f.body);});uniforms.forEach(function(u){return out.uniform(u.type,u.name);});varyings.forEach(function(v){return out.varying(v.type,v.name);});attributes.forEach(function(a){return out.attribute(a.type,a.name);});if(_main.length)out.main(_main);return out;},build:function build(_){return[].concat.apply([],[extensions.map(function(e){return"#extension "+e+" : enable";}),[["precision "+precision+" float;"]],attributes.map(function(a){return"attribute "+a.type+" "+a.name+";";}),structs.map(function(s){return"struct "+s.name+" {"+s.params.join(';')+";};";}),constants.map(function(c){return"const "+c.type+" "+c.name+" = "+c.value+";";}),varyings.map(function(v){return"varying "+v.type+" "+v.name+";";}),uniforms.map(function(u){return"uniform "+u.type+" "+u.name+";";}),functions.map(function(f){return f.head+"{"+f.body.join('\n')+"}";}),["void main(void){"+_main.join('\n')+"}"]]).join('\n');}});};vglsl.merge=function(){for(var _len16=arguments.length,shaders=Array(_len16),_key16=0;_key16<_len16;_key16++){shaders[_key16]=arguments[_key16];}return shaders.reduce(function(a,b){return{vert:a.vert&&b.vert&&b.vert.append(a.vert)||a.vert||b.vert,frag:a.frag&&b.frag&&b.frag.append(a.frag)||a.frag||b.frag};},{});};var fullscreen={vert:vglsl.createShader().attribute('vec2','uv').varying('vec2','uvPass').main(['uvPass = uv;','gl_Position = vec4(uv * 2.0 - 1.0, 0.0, 1.0);']),frag:vglsl.createShader().varying('vec2','uvPass').uniform('sampler2D','sampler').uniform('vec2','pixelSize').main(['gl_FragColor = texture2D(sampler, uvPass);'])};var fullscreen_cube={vert:vglsl.createShader().attribute('vec3','position').uniform('mat4','projectionMatrix').uniform('mat4','modelViewMatrix').varying('vec3','uvPass').main(['uvPass = position;','gl_Position = projectionMatrix * (modelViewMatrix * vec4(position, 1.0));','gl_Position.z = gl_Position.w;']),frag:vglsl.createShader().varying('vec3','uvPass').uniform('samplerCube','sampler').main(['gl_FragColor = textureCube(sampler, uvPass);'])};var depth={vert:vglsl.createShader().attribute('vec3','position').attribute('vec3','normal').uniform('mat4','viewMatrix').uniform('mat4','projectionMatrix').uniform('mat4','modelMatrix').main(['vec4 screenPosition = viewMatrix * modelMatrix * vec4(position, 1.0);','vec4 screenNormal = normalize(viewMatrix * modelMatrix * vec4(normal, 0.0));','vec3 lightDirection = normalize(screenPosition.xyz);','screenPosition -= screenNormal * 16.0 * max(dot(screenNormal.xyz, lightDirection), 0.0);','gl_Position = projectionMatrix * screenPosition;']),frag:vglsl.createShader().main(['gl_FragColor = vec4(0.0,0.0,0.0,0.0);'])};var encodedDepth={vert:vglsl.createShader().const('vec4','bitShift','vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0)').const('vec4','bitMask','vec4(1.0/256.0, 1.0/256.0, 1.0/256.0, 0.0)').function('vec4 packDepth(float depth)',['vec4 rgbaDepth = fract(depth * bitShift);','rgbaDepth -= rgbaDepth.gbaa * bitMask;','return rgbaDepth;']).const('vec4','bitShift','vec4(1.0, 1.0/256.0, 1.0/(256.0 * 256.0), 1.0/(256.0*256.0*256.0))').function('float unpackDepth(vec4 rgbaDepth)',['return dot(rgbaDepth * bitShift);'])};var spotlight={vert:vglsl.createShader().uniform('mat4','lightViewMatrix').varying('vec3','lightDirectionPass').varying('vec3','lightViewPositionPass').function('vec3 extractLightPosition(mat4 lvm)',['return -vec3(lvm[3]) * mat3(lvm);']).function('void setupLight(vec4 worldPosition)',['lightDirectionPass = extractLightPosition(lightViewMatrix) - worldPosition.xyz;','lightViewPositionPass = vec4(lightViewMatrix * worldPosition).xyz;']),frag:vglsl.createShader().varying('vec3','lightDirectionPass').varying('vec3','lightViewPositionPass').struct('SpotLight',['vec3 color','vec3 direction','float radius','float outerAngle','float innerAngle']).uniform('SpotLight','light').function('float distanceAttenuation(float radius, float distance, float cutoff)',['float denom = max(distance - radius, 0.0)/radius + 1.0;','float attenuation = 1.0 / (denom*denom);','return max((attenuation - cutoff) / (1.0 - cutoff), 0.0);']).function('float spotAttenuation(vec3 lightDirection)',['float spotAngle = dot(-lightDirection, light.direction);','return clamp((spotAngle - light.outerAngle) / (light.innerAngle - light.outerAngle), 0.0, 1.0);']).function('float calcShadow(void)',['return 1.0;']).function('vec3 calcLight(vec3 normal, vec3 viewDirection)',['vec3 lightDirection = normalize(lightDirectionPass);','float lambert = max(dot(normal, lightDirection), 0.0);','if(lambert < 0.0){ return vec3(0.0, 0.0, 0.0); }','float distance = length(lightViewPositionPass);','float distAtt = distanceAttenuation(light.radius, distance, 0.0001);','float spotAtt = spotAttenuation(lightDirection);','vec3 lightFactor = light.color * lambert * distAtt * spotAtt * 5.0;','return lightFactor * calcShadow();'])};var omnilight={vert:vglsl.createShader().uniform('vec3','lightPosition').varying('vec3','lightDirectionPass').function('void setupLight(vec4 worldPosition)',['lightDirectionPass = lightPosition - worldPosition.xyz;']),frag:vglsl.createShader().varying('vec3','lightDirectionPass').struct('OmniLight',['vec3 color','float radius']).uniform('OmniLight','light').function('float distanceAttenuation(float radius, float distance, float cutoff)',['float denom = max(distance - radius, 0.0)/radius + 1.0;','float attenuation = 1.0 / (denom*denom);','return max((attenuation - cutoff) / (1.0 - cutoff), 0.0);']).function('float calcShadow(void)',['return 1.0;']).function('vec3 calcLight(vec3 normal, vec3 viewDirection)',['vec3 lightDirection = normalize(lightDirectionPass);','float lambert = max(dot(normal, lightDirection), 0.0);','if(lambert < 0.0){ return vec3(0.0, 0.0, 0.0); }','float distance = length(lightDirectionPass);','float distAtt = distanceAttenuation(light.radius, distance, 0.0001);','vec3 lightFactor = light.color * lambert * distAtt * 5.0;','return lightFactor * calcShadow();'])};var hemisphere={vert:vglsl.createShader().function('void setupLight(vec4 worldPosition)',[]),frag:vglsl.createShader().struct('HemisphereLight',['vec3 up','vec3 skyColor','vec3 groundColor']).uniform('HemisphereLight','light').function('vec3 calcLight(vec3 normal, vec3 viewDirection)',['float NdotL = dot(normal, light.up);','float lightInfluence = NdotL * 0.5 + 0.5;','return mix(light.groundColor, light.skyColor, lightInfluence);'])};var static_geometry={vert:vglsl.createShader().attribute('vec3','position').attribute('vec3','normal').attribute('vec2','uv').uniform('mat4','Pmat').uniform('mat4','MVmat').varying('vec3','vNormal').varying('vec2','vTexCoords').varying('vec3','vViewDir').main(['mat3 Nmat = mat3(MVmat[0][0],MVmat[0][1],MVmat[0][2],MVmat[1][0],MVmat[1][1],MVmat[1][2],MVmat[2][0],MVmat[2][1],MVmat[2][2]);','vec4 viewPosition = MVmat * vec4(position, 1.0);','gl_Position = Pmat * viewPosition;','vNormal = normalize(Nmat * normal);','vViewDir = normalize(-viewPosition.xyz);','vTexCoords = uv;','setupLight();']),frag:vglsl.createShader().varying('vec3','vNormal').varying('vec2','vTexCoords').varying('vec3','vViewDir').uniform('sampler2D','albedo').main(['vec4 color = texture2D(albedo, vTexCoords);','if(color.a <= 0.1) discard;','vec3 normal = normalize(vNormal);','vec3 viewDirection = normalize(vViewDir);','vec3 totalLight = calcLighting(normal, viewDirection);','gl_FragColor = vec4(applyFog(totalLight * color.rgb), color.a);'])};var linear_skinning={vert:vglsl.createShader().attribute('vec4','joint').attribute('vec4','weight').uniform('vec4',"boneMatrix["+3*MAX_BONES_PER_MESH+"]").function('mat4 getBoneMat(int jointIdx)',['vec4 col0 = boneMatrix[jointIdx*3+0];','vec4 col1 = boneMatrix[jointIdx*3+1];','vec4 col2 = boneMatrix[jointIdx*3+2];','return mat4(col0[0], col1[0], col2[0], 0.0,','col0[1], col1[1], col2[1], 0.0,','col0[2], col1[2], col2[2], 0.0,','col0[3], col1[3], col2[3], 1.0);']).function('mat4 calcJointTransform(void)',['return weight.x * getBoneMat(int(joint.x))','+ weight.y * getBoneMat(int(joint.y))','+ weight.z * getBoneMat(int(joint.z))','+ weight.w * getBoneMat(int(joint.w));'])};var dualquat_skinning={vert:vglsl.createShader().attribute('vec4','joint').attribute('vec4','weight').uniform('vec4',"boneMatrix["+2*MAX_BONES_PER_MESH+"]").function('mat4 DQtoMat(vec4 dqReal, vec4 dqDual)',['float rx = dqReal.x, ry = dqReal.y, rz = dqReal.z, rw = dqReal.w;','float tx = dqDual.x, ty = dqDual.y, tz = dqDual.z, tw = dqDual.w;','float rxx = - (2.0 * rx * rx), ryy = - (2.0 * ry * ry), rzz = - (2.0 * rz * rz);','float rxy = (2.0 * rx * ry), rxz = (2.0 * rx * rz), rxw = (2.0 * rx * rw);','float ryz = (2.0 * ry * rz), ryw = (2.0 * ry * rw), rzw = (2.0 * rw * rz);','return mat4(','1.0 + ryy + rzz, rxy + rzw, rxz - ryw, 0,','rxy - rzw, 1.0 + rxx + rzz, ryz + rxw, 0,','rxz + ryw, ryz - rxw, 1.0 + rxx + ryy, 0,','2.0 * (-tw * rx + tx * rw - ty * rz + tz * ry),','2.0 * (-tw * ry + tx * rz + ty * rw - tz * rx),','2.0 * (-tw * rz - tx * ry + ty * rx + tz * rw),','1);']).function('mat4 calcJointTransform(void)',['vec4 rQuats[4];','vec4 tQuats[4];','rQuats[0] = boneMatrix[int(joint.x * 2.0)];','rQuats[1] = boneMatrix[int(joint.y * 2.0)];','rQuats[2] = boneMatrix[int(joint.z * 2.0)];','rQuats[3] = boneMatrix[int(joint.w * 2.0)];','tQuats[0] = boneMatrix[int(joint.x * 2.0) + 1];','tQuats[1] = boneMatrix[int(joint.y * 2.0) + 1];','tQuats[2] = boneMatrix[int(joint.z * 2.0) + 1];','tQuats[3] = boneMatrix[int(joint.w * 2.0) + 1];','if(dot(rQuats[0], rQuats[1]) < 0.0){ rQuats[1] *= -1.0; tQuats[1] *= -1.0; }','if(dot(rQuats[0], rQuats[2]) < 0.0){ rQuats[2] *= -1.0; tQuats[2] *= -1.0; }','if(dot(rQuats[0], rQuats[3]) < 0.0){ rQuats[3] *= -1.0; tQuats[3] *= -1.0; }','vec4 weightedTQuat = weight.x * tQuats[0] + weight.y * tQuats[1] + weight.z * tQuats[2] + weight.w * tQuats[3];','vec4 weightedRQuat = weight.x * rQuats[0] + weight.y * rQuats[1] + weight.z * rQuats[2] + weight.w * rQuats[3];','float magnitude = length(weightedRQuat);','weightedTQuat /= magnitude;','weightedRQuat /= magnitude;','return DQtoMat(weightedRQuat, weightedTQuat);'])};var geometry$1={vert:vglsl.createShader().attribute('vec3','position').attribute('vec3','normal').attribute('vec2','uv').uniform('mat4','projectionMatrix').uniform('mat4','modelViewMatrix').varying('vec3','normalPass').varying('vec2','uvPass').main(['mat4 transformMatrix = modelViewMatrix * calcJointTransform();','vec4 viewPosition = transformMatrix * vec4(position, 1.0);','normalPass = vec3(transformMatrix * vec4(normal, 0.0));','uvPass = uv;','gl_Position = projectionMatrix * viewPosition;']),frag:vglsl.createShader().varying('vec3','normalPass').varying('vec2','uvPass').uniform('sampler2D','albedo').uniform('vec3','highlightColor').main(['vec3 normal = normalize(normalPass);','vec4 color = texture2D(albedo, uvPass);','vec3 light = normalize(vec3(  0.5,  0.2,  1.0));','float amount = max(dot(normalPass, light),  0.0);','color = vec4(applyFog(color.rgb * highlightColor), 1.0);','gl_FragColor = color;'])};var vsm_depth={vert:vglsl.createShader().attribute('vec3','position').uniform('mat4','viewMatrix').uniform('mat4','projectionMatrix').uniform('mat4','modelMatrix').varying('vec3','positionPass').main(['vec4 viewPosition = viewMatrix * modelMatrix * vec4(position, 1.0);','positionPass = viewPosition.xyz;','gl_Position = projectionMatrix * viewPosition;']),frag:vglsl.createShader().extension('GL_OES_standard_derivatives').varying('vec3','positionPass').uniform('float','radius').main(['float depth = length(positionPass);','depth = clamp(depth / (2.0*radius), 0.0, 1.0);','float dx = dFdx(depth);','float dy = dFdy(depth);','float moment1 = depth;','float moment2 = depth*depth + 0.25*(dx*dx + dy*dy);','gl_FragColor = vec4(moment1, moment2, 0.0, 1.0);'])};var vsm_shadow={vert:vglsl.createShader(),frag:vglsl.createShader().uniform('sampler2D','shadowMap').uniform('mat4','lightProjectionMatrix').function('float linstep(float low, float high, float v)',['return clamp((v-low)/(high-low), 0.0, 1.0);']).function('float VSM(sampler2D depths, vec2 uv, float compare)',['vec2 moments = texture2D(depths, uv).xy;','float p = smoothstep(compare-0.02, compare, moments.x);','float variance = max(moments.y - moments.x*moments.x, -0.001);','float d = compare - moments.x;','float p_max = linstep(0.2, 1.0, variance / (variance + d*d));','return clamp(max(p, p_max), 0.0, 1.0);']).function('float calcShadow(void)',['float depth = clamp(length(lightViewPositionPass) / (light.radius * 2.0), 0.0, 1.0);','vec4 shadowMapPosition = lightProjectionMatrix * vec4(lightViewPositionPass, 1.0);','vec2 shadowMapUV = (shadowMapPosition.xy / shadowMapPosition.w) * 0.5 + 0.5;','return VSM(shadowMap, shadowMapUV, depth);'])};var vsm_cube_shadow={vert:vglsl.createShader(),frag:vglsl.createShader().uniform('samplerCube','shadowMap').function('float linstep(float low, float high, float v)',['return clamp((v-low)/(high-low), 0.0, 1.0);']).function('float VSM(samplerCube depths, vec3 uv, float compare)',['vec2 moments = textureCube(depths, uv).xy;','float p = smoothstep(compare-0.02, compare, moments.x);','float variance = max(moments.y - moments.x*moments.x, -0.001);','float d = compare - moments.x;','float p_max = linstep(0.2, 1.0, variance / (variance + d*d));','return clamp(max(p, p_max), 0.0, 1.0);']).function('float calcShadow(void)',['float depth = clamp(length(lightDirectionPass) / (light.radius * 2.0), 0.0, 1.0);','return VSM(shadowMap, -lightDirectionPass, depth);'])};var vsm_depth_encoded={};var vsm_shadow_encoded={};var box_blur={vert:vglsl.createShader(),frag:vglsl.createShader().function('float random(vec3 scale,float seed)',['return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);']).function('vec4 gaussian_x9(sampler2D image, vec2 uv, vec2 invResolution, vec2 direction)',['vec4 color = vec4(0.0);','vec2 off1 = vec2(1.3846153846) * direction;','vec2 off2 = vec2(3.2307692308) * direction;','color += texture2D(image, uv) * 0.2270270270;','color += texture2D(image, uv + (off1 * invResolution)) * 0.3162162162;','color += texture2D(image, uv - (off1 * invResolution)) * 0.3162162162;','color += texture2D(image, uv + (off2 * invResolution)) * 0.0702702703;','color += texture2D(image, uv - (off2 * invResolution)) * 0.0702702703;','return color;']).function('vec4 simple_box_x9(sampler2D image, vec2 uv, vec2 invResolution)',['vec4 total = vec4(0.0);','for(int x=-1; x<=1; x++){ for(int y=-1; y<=1; y++){','   total += texture2D(image, uv + vec2(float(x), float(y)) * invResolution);','}}','return total / 9.0;']).function('vec4 box_x9(sampler2D image, vec2 uv, vec2 invResolution, vec2 delta)',['vec4 total = vec4(0.0);','vec2 offset = delta * invResolution;','total += texture2D(image, (uv - offset * 4.0)) * 0.051;','total += texture2D(image, (uv - offset * 3.0)) * 0.0918;','total += texture2D(image, (uv - offset * 2.0)) * 0.12245;','total += texture2D(image, (uv - offset * 1.0)) * 0.1531;','total += texture2D(image, (uv + offset * 0.0)) * 0.1633;','total += texture2D(image, (uv + offset * 1.0)) * 0.1531;','total += texture2D(image, (uv + offset * 2.0)) * 0.12245;','total += texture2D(image, (uv + offset * 3.0)) * 0.0918;','total += texture2D(image, (uv + offset * 4.0)) * 0.051;','return total;']).main(['gl_FragColor = box_x9(sampler, uvPass, pixelSize, vec2(0.25));'])};var dilate={vert:vglsl.createShader(),frag:vglsl.createShader().function('vec4 extrude(sampler2D source, vec2 uv, vec2 invResolution, float offset)',['vec4 total = texture2D(source, uv);','total = total.a > 0.0 ? total : texture2D(source, uv + invResolution * vec2(-offset, -offset));','total = total.a > 0.0 ? total : texture2D(source, uv + invResolution * vec2( 0.0, -offset));','total = total.a > 0.0 ? total : texture2D(source, uv + invResolution * vec2( offset, -offset));','total = total.a > 0.0 ? total : texture2D(source, uv + invResolution * vec2(-offset,  0.0));','total = total.a > 0.0 ? total : texture2D(source, uv + invResolution * vec2( offset,  0.0));','total = total.a > 0.0 ? total : texture2D(source, uv + invResolution * vec2(-offset,  offset));','total = total.a > 0.0 ? total : texture2D(source, uv + invResolution * vec2( 0.0,  offset));','total = total.a > 0.0 ? total : texture2D(source, uv + invResolution * vec2( offset,  offset));','return total;']).main(['gl_FragColor = extrude(sampler, uvPass, pixelSize, 1.0);'])};var bake_lightmap={vert:vglsl.createShader().attribute('vec3','position').attribute('vec3','normal').attribute('vec2','lm_uv').uniform('mat4','modelMatrix').varying('vec3','viewDirectionPass').varying('vec3','normalPass').uniform('vec2','lightmapOffset').uniform('vec2','lightmapScale').main(['vec4 worldPosition = modelMatrix * vec4(position, 1.0);','normalPass = normalize(vec4(modelMatrix * vec4(normal, 0.0)).xyz);','viewDirectionPass = -worldPosition.xyz;','setupLight(worldPosition);','vec2 lightmapUV = lm_uv * lightmapScale + lightmapOffset;','gl_Position = vec4(lightmapUV * 2.0 - 1.0, 0.5, 1.0);']),frag:vglsl.createShader().varying('vec3','normalPass').varying('vec3','viewDirectionPass').main(['vec3 normal = normalize(normalPass);','vec3 viewDirection = normalize(viewDirectionPass);','gl_FragColor = vec4(vec3(0.2) * calcLight(normal, viewDirection), 1.0);'])};var render_lightmap={vert:vglsl.createShader().attribute('vec2','lm_uv').varying('vec2','lightmapUvPass').uniform('vec2','lightmapOffset').uniform('vec2','lightmapScale').function('void setupLight(void)',['vec2 lightmapUV = lm_uv * lightmapScale + lightmapOffset;','lightmapUvPass = lightmapUV;']),frag:vglsl.createShader().varying('vec2','lightmapUvPass').uniform('sampler2D','lightmap').function('vec3 calcLighting(vec3 normal, vec3 viewDirection)',['vec4 lightmapColor = texture2D(lightmap, lightmapUvPass);','return lightmapColor.rgb;'])};var fog_exp={vert:vglsl.createShader(),frag:vglsl.createShader().const('float','LOG2','1.442695').uniform('float','fogDensity').uniform('vec3','fogColor').function('vec3 applyFog(vec3 color)',['float z = gl_FragCoord.z / gl_FragCoord.w;','float fogFactor = clamp(exp2( - fogDensity * fogDensity * z * z * LOG2), 0.0, 1.0);','return mix(fogColor, color, fogFactor);'])};var blinn_phong={vert:vglsl.createShader().function('void setupLight(void)',[]),frag:vglsl.createShader().function('float lambertian(vec3 normal, vec3 lightDirection)',['return max(dot(normal, lightDirection), 0.0);']).const('float','glossiness','16.0').function('float blinnPhong(vec3 normal, vec3 lightDirection, vec3 viewDirection)',['vec3 halfVec = normalize(viewDirection + lightDirection);','return pow(max(dot(normal, halfVec), 0.0), glossiness);'])};var cook_torrance={vert:vglsl.createShader(),frag:vglsl.createShader().const('float','PI','3.141592653589793').const('float','EPSILON','0.000001').function('float beckmannDistribution(float x, float roughness)',['float NdotH = max(x, 0.0001);','float cos2Alpha = NdotH * NdotH;','float tan2Alpha = (cos2Alpha - 1.0) / cos2Alpha;','float roughness2 = roughness*roughness;','float denom = PI * roughness2 * cos2Alpha * cos2Alpha;','return exp(tan2Alpha / roughness2) / denom;']).function('float cookTorrance(vec3 normal, vec3 lightDirection, vec3 viewDirection)',['float fresnel = 0.0;','float roughness = 0.1;','float VdotN = max(dot(viewDirection, normal), 0.0);','float LdotN = max(dot(lightDirection, normal), EPSILON);','vec3 halfAngle = normalize(lightDirection + viewDirection);','float NdotH = max(dot(normal, halfAngle), 0.0);','float VdotH = max(dot(viewDirection, halfAngle), 0.0);','float x = 2.0 * NdotH / VdotH;','float G = min(1.0, min(x * VdotN, x * LdotN));','float D = beckmannDistribution(NdotH, roughness);','float F = pow(1.0 - VdotN, fresnel);','float power = G * F * D / max(PI * VdotN * LdotN, EPSILON);','return power;'])};var normal_mapping={vert:vglsl.createShader(),frag:vglsl.createShader().uniform('sampler2D','normalSpec').extension('GL_OES_standard_derivatives').function('mat3 calcTBN(vec3 normal, vec3 position, vec2 uv)',['vec3 dpx = dFdx(position);','vec3 dpy = dFdy(position);','vec2 duvx = dFdx(uv);','vec2 duvy = dFdy(uv);','vec3 dpyPerp = cross(dpy, normal);','vec3 dpxPerp = cross(normal, dpx);','vec3 tangent = dpyPerp * duvx.x + dpxPerp * duvy.x;','vec3 binormal = dpyPerp * duvx.y + dpxPerp * duvy.y;','float invMax = inversesqrt(max(dot(tangent, tangent), dot(binormal, binormal)));','return mat3(tangent * invMax, binormal * invMax, normal);']).function('vec3 pertubNormal(vec3 normal, vec3 viewDirection, vec2 uv)',['vec3 mappedNormal = texture2D(normalSpec, uv).xyz;','mappedNormal = mappedNormal * 255.0/127.0 - 128.0/127.0;','mappedNormal.y = -mappedNormal.y;','mat3 TBN = calcTBN(normal, -viewDirection, uv);','return normalize(TBN * mappedNormal);'])};var ambient_light={vert:vglsl.createShader(),frag:vglsl.createShader().struct('dirLight',['vec3 direction','vec3 color']).uniform('vec3','ambient').uniform('dirLight','sun').function('vec3 calcLighting(vec3 normal, vec3 viewDirection)',['vec3 lightDir = normalize(sun.direction);','float diffuse = lambertian(normal, lightDir);','float specular = 0.0;','return ambient + diffuse * sun.color;'])};var shaders={fullscreen:fullscreen,fullscreen_cube:fullscreen_cube,depth:depth,spotlight:spotlight,omnilight:omnilight,hemisphere:hemisphere,static_geometry:static_geometry,linear_skinning:linear_skinning,dualquat_skinning:dualquat_skinning,geometry:geometry$1,vsm_depth:vsm_depth,vsm_depth_encoded:vsm_depth_encoded,vsm_shadow:vsm_shadow,vsm_cube_shadow:vsm_cube_shadow,vsm_shadow_encoded:vsm_shadow_encoded,box_blur:box_blur,dilate:dilate,bake_lightmap:bake_lightmap,render_lightmap:render_lightmap,fog_exp:fog_exp,blinn_phong:blinn_phong,cook_torrance:cook_torrance,normal_mapping:normal_mapping,ambient_light:ambient_light};factory.declare('gl_context',function(target){var gl=target.gl,maxVertShaderPrecision=gl.getShaderPrecisionFormat(gl.VERTEX_SHADER,gl.HIGH_FLOAT).precision===0?vglsl.PRECISION.MEDIUM:vglsl.PRECISION.HIGH,maxFragShaderPrecision=gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER,gl.HIGH_FLOAT).precision===0?vglsl.PRECISION.MEDIUM:vglsl.PRECISION.HIGH,maxVertUniformSize=gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS)/4,maxFragUniformSize=gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS)/4;Object.keys(GL_GLSL_MAP).forEach(function(glType){return GLSL_TYPE_MAP[gl[glType]]=GL_GLSL_MAP[glType];});return{compileShader:function compileShader(src){if(src.vert.precision===vglsl.PRECISION.HIGH&&maxVertShaderPrecision===vglsl.PRECISION.MEDIUM)src.vert.setPrecision(vglsl.PRECISION.MEDIUM);if(src.frag.precision===vglsl.PRECISION.HIGH&&maxFragShaderPrecision===vglsl.PRECISION.MEDIUM)src.frag.setPrecision(vglsl.PRECISION.MEDIUM);var shader=factory.build('shader',{vert:src.vert.build(),frag:src.frag.build(),attributeLocations:src.attributeLocations,ctx:target});return shader;}};});var VertexBufferRange=function VertexBufferRange(vertexArrayLength,vertexArrayOffset,indexArrayLength,indexArrayOffset){return{vertexArrayLength:vertexArrayLength,vertexArrayOffset:vertexArrayOffset,indexArrayLength:indexArrayLength,indexArrayOffset:indexArrayOffset};};factory.declare('vbo',function(target,_ref21){var ctx=_ref21.ctx,dynamic=_ref21.dynamic;var gl=ctx.gl,vertexBuffer=gl.createBuffer(),indexBuffer=gl.createBuffer();var uploadQueue=[],indexBaseOffset=0;return{clear:function clear(_){ctx.clearVBOAttributePointers(target);gl.deleteBuffer(vertexBuffer);gl.deleteBuffer(indexBuffer);},bind:function bind(_){if(ctx.onBind('vbo',target)){gl.bindBuffer(gl.ARRAY_BUFFER,vertexBuffer);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,indexBuffer);}return target;},unbind:function unbind(_){ctx.onBind('vbo',null);gl.bindBuffer(gl.ARRAY_BUFFER,null);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,null);return target;},appendData:function appendData(vertexArray,indexArray,vertexCount){var vertexDataOffset=uploadQueue.reduce(function(offset,data){return offset+data.vertexArray.length;},0),indexDataOffset=uploadQueue.reduce(function(offset,data){return offset+data.indexArray.length;},0),uploadEvent=Signal();if(indexBaseOffset+vertexCount>MAX_INDEX_ARRAY_LENGTH)throw new Error('VBO 16bit Uint Index Array overflow');if(target.uploaded)target.migrate=true;var bufferRange=VertexBufferRange(vertexArray.length,vertexDataOffset,indexArray.length,indexDataOffset);uploadQueue.push({vertexArray:vertexArray,indexArray:indexArray,vertexCount:vertexCount,uploadEvent:uploadEvent,bufferRange:bufferRange,indexBaseOffset:indexBaseOffset});indexBaseOffset+=vertexCount;return{uploadEvent:uploadEvent,bufferRange:bufferRange};},staticUpload:function staticUpload(vertexArray,indexArray){target.bind();gl.bufferData(gl.ARRAY_BUFFER,vertexArray,dynamic?gl.DYNAMIC_DRAW:gl.STATIC_DRAW);gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,indexArray,dynamic?gl.DYNAMIC_DRAW:gl.STATIC_DRAW);return target;},uploadVertexArray:function uploadVertexArray(vertices,bufferOffset){target.bind();gl.bufferSubData(gl.ARRAY_BUFFER,bufferOffset*Float32Array.BYTES_PER_ELEMENT,vertices);return target;},uploadIndexArray:function uploadIndexArray(indices,bufferOffset){var indexBaseOffset=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;target.bind();var idx=indices.length,offsetIndexArray=ctx.allocateUint16(idx);while(idx--){offsetIndexArray[idx]=indices[idx]+indexBaseOffset;}gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER,bufferOffset*Uint16Array.BYTES_PER_ELEMENT,offsetIndexArray);return target;},segmentedVertexArrayUpload:function segmentedVertexArrayUpload(vertices,bufferOffset,segmentLength,segmentOffset){var segmentView=new Float32Array(vertices.buffer,vertices.byteOffset+Float32Array.BYTES_PER_ELEMENT*segmentOffset,segmentLength);return target.uploadVertexArray(segmentView,bufferOffset+segmentOffset);},segmentedIndexArrayUpload:function segmentedIndexArrayUpload(indices,bufferOffset,segmentLength,segmentOffset,indexBaseOffset){var segmentView=new Uint16Array(indices.buffer,indices.byteOffset+Uint16Array.BYTES_PER_ELEMENT*segmentOffset,segmentLength);return target.uploadIndexArray(segmentView,bufferOffset+segmentOffset,indexBaseOffset);},upload:function upload(taskManager){var batchSize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Number.MAX_SAFE_INTEGER;if(!uploadQueue.length||target.uploaded)return false;var last=uploadQueue[uploadQueue.length-1],vertexDataSize=last.bufferRange.vertexArrayOffset+last.bufferRange.vertexArrayLength,indexDataSize=last.bufferRange.indexArrayOffset+last.bufferRange.indexArrayLength,uploadEvent=Signal();target.uploaded=true;target.bind();gl.bufferData(gl.ARRAY_BUFFER,vertexDataSize*Float32Array.BYTES_PER_ELEMENT,dynamic?gl.DYNAMIC_DRAW:gl.STATIC_DRAW);gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,indexDataSize*Uint16Array.BYTES_PER_ELEMENT,dynamic?gl.DYNAMIC_DRAW:gl.STATIC_DRAW);if(!taskManager)return uploadQueue.forEach(function(data){target.uploadVertexArray(data.vertexArray,data.bufferRange.vertexArrayOffset);target.uploadIndexArray(data.indexArray,data.bufferRange.indexArrayOffset,data.indexBaseOffset);data.uploadEvent.onSuccess(true);});uploadQueue.forEach(function(data){var bufferRange=data.bufferRange;var vertexBatchSize=Math.floor(batchSize/Float32Array.BYTES_PER_ELEMENT),vertexBatchCount=Math.ceil(bufferRange.vertexArrayLength/vertexBatchSize),vertexOffset=0;while(vertexBatchCount--){vertexBatchSize=Math.min(vertexBatchSize,bufferRange.vertexArrayLength-vertexOffset);taskManager.schedule(target.segmentedVertexArrayUpload.bind(target,data.vertexArray,bufferRange.vertexArrayOffset,vertexBatchSize,vertexOffset));vertexOffset+=vertexBatchSize;}var indexBatchSize=Math.floor(batchSize/Uint16Array.BYTES_PER_ELEMENT),indexBatchCount=Math.ceil(bufferRange.indexArrayLength/indexBatchSize),indexOffset=0;while(indexBatchCount--){indexBatchSize=Math.min(indexBatchSize,bufferRange.indexArrayLength-indexOffset);taskManager.schedule(target.segmentedIndexArrayUpload.bind(target,data.indexArray,bufferRange.indexArrayOffset,indexBatchSize,indexOffset,data.indexBaseOffset));indexOffset+=indexBatchSize;}});taskManager.schedule(uploadEvent.onSuccess.bind(uploadEvent,true));uploadEvent.listen(function(events){return events.forEach(function(event){return event.onSuccess(true);});}.bind(null,uploadQueue.map(function(data){return data.uploadEvent;})),null,false);return uploadEvent;},unloadData:function unloadData(bufferRange){var bufferRangeIdx=uploadQueue.findIndex(function(data){return data.bufferRange===bufferRange;}),indexShift=uploadQueue[bufferRangeIdx].vertexCount;indexBaseOffset-=indexShift;uploadQueue.splice(bufferRangeIdx,1);},get uploadQueue(){return uploadQueue;},set uploadQueue(value){var vertexArrayOffset=0,indexArrayOffset=0;uploadQueue=value.map(function(data){var bufferRange=VertexBufferRange(data.vertexArray.length,vertexArrayOffset,data.indexArray.length,indexArrayOffset);vertexArrayOffset+=data.vertexArray.length;indexArrayOffset+=data.indexArray.length;return Object.assign({},data,{bufferRange:bufferRange,inheritBufferRange:data.bufferRange});});indexBaseOffset=uploadQueue.reduce(function(offset,data){return data.indexBaseOffset=offset,offset+data.vertexCount;},0);},inherit:function inherit(_){uploadQueue.filter(function(data){return data.inheritBufferRange;}).forEach(function(data){return data.bufferRange=Object.assign(data.inheritBufferRange,data.bufferRange);});return target;}};});factory.declare('vao',function(target,_ref22){var ctx=_ref22.ctx;var gl=ctx.gl,vaoExtension=ctx.extensions.vertex_array_object,maxAttributes=gl.getParameter(gl.MAX_VERTEX_ATTRIBS),vao=vaoExtension?vaoExtension.createVertexArrayOES():null,bindings=[];return vaoExtension?{clear:function clear(_){return vaoExtension.deleteVertexArrayOES(vao);},bind:function bind(_){return ctx.onBind('vao',target)&&vaoExtension.bindVertexArrayOES(vao);},unbind:function unbind(_){ctx.onBind('vbo',null);ctx.onBind('vao',null);vaoExtension.bindVertexArrayOES(null);},setup:function setup(vbo,dataFormat){var attributeLocations=arguments.length>2&&arguments[2]!==undefined?arguments[2]:ATTRIBUTE_LOCATIONS;var offset=0,stride=dataFormat.reduce(function(size,attr){return size+attr.size*attr.byteSize;},0);target.bind();target.vboPointer=vbo;ctx.onBind('vbo',null);vbo.bind();dataFormat.forEach(function(attr){gl.enableVertexAttribArray(attributeLocations[attr.type]);gl.vertexAttribPointer(attributeLocations[attr.type],attr.size,gl[ATTRIB_GL_TYPE[attr.byteSize]],false,stride,offset);offset+=attr.size*attr.byteSize;});target.unbind();return target;}}:{clear:function clear(_){return bindings.length=0;},bind:function bind(_){if(!ctx.onBind('vao',target))return true;var idx=bindings.length;while(idx--){bindings[idx](gl);}},unbind:function unbind(_){ctx.onBind('vao',null);},setup:function setup(vbo,dataFormat){var attributeLocations=arguments.length>2&&arguments[2]!==undefined?arguments[2]:ATTRIBUTE_LOCATIONS;var offset=0,stride=dataFormat.reduce(function(size,attr){return size+attr.size*attr.byteSize;},0);target.vboPointer=vbo;bindings.unshift(vbo.bind.bind(vbo));dataFormat.forEach(function(attr){bindings.unshift(ctx.bindArrayAttribute.bind(null,attributeLocations[attr.type],attr.size,gl[ATTRIB_GL_TYPE[attr.byteSize]],false,stride,offset));offset+=attr.size*attr.byteSize;});return target;}};});var UPLOAD_BATCH_SIZE=1024*4;factory.declare('gl_context',function(target,options){var gl=target.gl,taskManager=options.manager,VBOs=[],VAOs=[],VDFs=[],attributePointers=[];var uploadQueueLength=0;return{uploadMeshData:function uploadMeshData(meshData,groupId){var upload=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var vdfIdx=(groupId||VDFs.findIndex(function(format){return Object.deepEquals(format,meshData.dataFormat);})+1||VDFs.length+1)-1,vdf=VDFs[vdfIdx]||(VDFs[vdfIdx]=meshData.dataFormat),vertexCount=meshData.vertexArray.length/meshData.stride,vboIdx=(VBOs.findIndex(function(vbo){return vbo.vdfIdx===vdfIdx;})+1||VBOs.length+1)-1,vbo=VBOs[vboIdx]||(VBOs[vboIdx]=Object.assign(factory.build('vbo',{ctx:target}),{vdfIdx:vdfIdx,vboIdx:vboIdx})),vao=VAOs[vboIdx]||(VAOs[vboIdx]=factory.build('vao',{ctx:target})).setup(vbo,meshData.dataFormat),uploadResponse=vbo.appendData(meshData.vertexArray,meshData.indexArray,vertexCount),mesh=factory.build('mesh',{vdfIdx:vdfIdx,vboIdx:vboIdx,bufferRange:uploadResponse.bufferRange,meshData:meshData});logger.info('buffer',"Scheduled buffer("+vboIdx+") data upload. vertices: "+vertexCount+" indices: "+meshData.indexArray.length);if(upload)taskManager.schedule(target.uploadBuffers,false);uploadQueueLength++;return uploadResponse.uploadEvent.pipe(function(_){return Object.assign(mesh,{unload:target.unloadData.bind(target,mesh)});});},deferredDataUpload:function deferredDataUpload(_){return uploadQueueLength&&taskManager.schedule(target.uploadBuffers,false);},uploadBuffers:function uploadBuffers(_){logger.info('buffer',"Uploading "+uploadQueueLength+"x, total: "+VBOs.length+" buffers");uploadQueueLength=0;VBOs.forEach(function(vbo){return vbo.migrate?target.migrateBufferData(vbo):vbo.upload(taskManager,UPLOAD_BATCH_SIZE);});return target;},unloadData:function unloadData(mesh){logger.info('buffer',"Unloading "+mesh.bufferRange.indexArrayLength+" from buffer("+mesh.vboIdx+")");VBOs[mesh.vboIdx].unloadData(mesh.bufferRange);return target;},enableVAO:function enableVAO(mesh){return VAOs[mesh.vboIdx].bind(),target;},bindArrayAttribute:function bindArrayAttribute(location,size,type,normalized,stride,offset){var boundVBO=target.bindings['vbo'],attrPointer=attributePointers[location]||(gl.enableVertexAttribArray(location),attributePointers[location]={buffer:null,properties:new Uint32Array(5)}),props=attrPointer.properties;if(attrPointer.buffer!==boundVBO||props[0]!==size||props[1]!==type||props[2]!=normalized||props[3]!==stride||props[4]!==offset){gl.vertexAttribPointer(location,size,type||gl.FLOAT,normalized||false,stride,offset);attrPointer.buffer=boundVBO;props[0]=size;props[1]=type;props[2]=+normalized;props[3]=stride;props[4]=offset;}},unbindArrayAttribute:function unbindArrayAttribute(location){return gl.disableVertexAttribArray(location),attributePointers[location]=null;},clearVBOAttributePointers:function clearVBOAttributePointers(vbo){return attributePointers.forEach(function(attrPointer,location){return attrPointer.buffer===vbo&&target.unbindArrayAttribute(location);});},migrateBufferData:function migrateBufferData(vbo){logger.info('buffer',"Migrating buffer("+vbo.vboIdx+") data. Queue length: "+vbo.uploadQueue.length);var vboIdx=vbo.vboIdx,tempVBO=factory.build('vbo',{ctx:target}),tempVAO=factory.build('vao',{ctx:target});tempVBO.uploadQueue=vbo.uploadQueue;vbo.appendData=tempVBO.appendData;tempVBO.upload(taskManager,UPLOAD_BATCH_SIZE).listen(function(_){VBOs[vboIdx].clear();VAOs[vboIdx].clear();VBOs[vboIdx]=Object.assign(tempVBO.inherit(),{vdfIdx:vbo.vdfIdx,vboIdx:vboIdx});VAOs[vboIdx]=tempVAO;tempVAO.setup(tempVBO,VDFs[vbo.vdfIdx]);},null,false);},onBind:function(base){return function(location,element){return element&&location==='vbo'&&target.bindings['vao']&&target.bindings['vao'].vboPointer!=element&&target.bindings['vao'].unbind(),base(location,element);};}(target.onBind)};});var isPowOf2=function isPowOf2(value){return value&&(value&value-1)===0;};var WRAP_MODE={REPEAT:0,CLAMP:1,MIRRORED_REPEAT:2,set:function set(S,T){return S|T<<4;}};var FILTERING_MODE={NONE:0,LINEAR:1,NEAREST:2,set:function set(mag,min,mipmap){return(mag||1)|(min||1)<<2|(mipmap||0)<<4;}};factory.declare('texture',function(target,_ref23){var ctx=_ref23.ctx,yFlip=_ref23.yFlip,premultiplyAlpha=_ref23.premultiplyAlpha,cube=_ref23.cube;var gl=ctx.gl,texture=gl.createTexture();var width=0,height=0,channels=0,powOf2=false,format=null,byteSize=null,filteringMode=0,wrapMode=0;gl.bindTexture(cube?gl.TEXTURE_CUBE_MAP:gl.TEXTURE_2D,texture);gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL,!!yFlip);gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!!premultiplyAlpha);return{get cube(){return cube;},get glPointer(){return texture;},get width(){return width;},get height(){return height;},bind:function bind(){var location=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;return!ctx.onBind('texture'+location,target)||(ctx.textureLocation=location,gl.bindTexture(cube?gl.TEXTURE_CUBE_MAP:gl.TEXTURE_2D,texture)),target;},unbind:function unbind(){var location=arguments.length>0&&arguments[0]!==undefined?arguments[0]:ctx.textureLocation;return ctx.onBind('texture'+location,null),gl.bindTexture(cube?gl.TEXTURE_CUBE_MAP:gl.TEXTURE_2D,null),target;},setTextureParameters:function setTextureParameters(parameters){return Object.keys(parameters).forEach(function(param){return target[param]=parameters[param];}),target;},clear:function clear(_){return gl.deleteTexture(texture);},set wrapMode(value){wrapMode=value;var wrapS=value&0xF,wrapT=value>>4,glWrapS=wrapS===WRAP_MODE.CLAMP&&gl.CLAMP_TO_EDGE||wrapS===WRAP_MODE.MIRRORED_REPEAT&&gl.MIRRORED_REPEAT||gl.REPEAT,glWrapT=wrapT===WRAP_MODE.CLAMP&&gl.CLAMP_TO_EDGE||wrapT===WRAP_MODE.MIRRORED_REPEAT&&gl.MIRRORED_REPEAT||gl.REPEAT;gl.texParameteri(cube?gl.TEXTURE_CUBE_MAP:gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,glWrapS);gl.texParameteri(cube?gl.TEXTURE_CUBE_MAP:gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,glWrapT);},set filteringMode(value){filteringMode=value;var filterMag=value&0x7,filterMin=value>>2,mipMaps=value>>4,glFilterMag=filterMag===FILTERING_MODE.NEAREST&&gl.NEAREST||gl.LINEAR,glFilterMin=mipMaps?mipMaps===FILTERING_MODE.NEAREST?filterMin===FILTERING_MODE.NEAREST&&gl.NEAREST_MIPMAP_NEAREST||gl.LINEAR_MIPMAP_NEAREST:filterMin===FILTERING_MODE.NEAREST&&gl.NEAREST_MIPMAP_LINEAR||gl.LINEAR_MIPMAP_LINEAR:filterMin===FILTERING_MODE.NEAREST&&gl.NEAREST||gl.LINEAR;if(mipMaps)gl.generateMipmap(cube?gl.TEXTURE_CUBE_MAP:gl.TEXTURE_2D);gl.texParameteri(cube?gl.TEXTURE_CUBE_MAP:gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,glFilterMag);gl.texParameteri(cube?gl.TEXTURE_CUBE_MAP:gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,glFilterMin);},get wrapMode(){return wrapMode;},get filteringMode(){return filteringMode;},upload:function upload(source){width=source.naturalWidth;height=source.naturalHeight;gl.bindTexture(cube?gl.TEXTURE_CUBE_MAP:gl.TEXTURE_2D,texture);if(!cube)gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,source);else for(var face=0;face<6;face++){gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X+face,0,gl.RGBA,gl.RGBA,gl.UNSIGNED_BYTE,source[face]);}target.url=source.src;return target.autoDetectTexParameters();},autoDetectTexParameters:function autoDetectTexParameters(_){if(ctx.onBind('texture'+ctx.textureLocation,target))gl.bindTexture(cube?gl.TEXTURE_CUBE_MAP:gl.TEXTURE_2D,texture);powOf2=isPowOf2(width)&&isPowOf2(height);target.filteringMode=powOf2?FILTERING_MODE.set(FILTERING_MODE.LINEAR,FILTERING_MODE.LINEAR,FILTERING_MODE.LINEAR):FILTERING_MODE.set(FILTERING_MODE.LINEAR,FILTERING_MODE.LINEAR);if(!powOf2)target.wrapMode=WRAP_MODE.set(WRAP_MODE.CLAMP,WRAP_MODE.CLAMP);return target;},uploadSubTexture:function uploadSubTexture(src,xOffset,yOffset,subWidth,subHeight,bufferOffset,bufferLength){var subTextureView=new Uint8Array(src.buffer,src.byteOffset+bufferOffset*channels*Uint8Array.BYTES_PER_ELEMENT,bufferLength*channels);if(ctx.onBind('texture'+ctx.textureLocation,target))gl.bindTexture(gl.TEXTURE_2D,texture);gl.texSubImage2D(gl.TEXTURE_2D,0,xOffset,yOffset,subWidth,subHeight,format,byteSize,subTextureView);},uploadTexture:function uploadTexture(src){var params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var taskManager=arguments[2];var maxChunkSize=arguments.length>3&&arguments[3]!==undefined?arguments[3]:256;channels=params.channels||params.format===gl.RGBA&&4||params.format===gl.RGB&&3||3;format=params.format||(channels===3?gl.RGB:channels===1?gl.ALPHA:gl.RGBA);byteSize=params.byteSize||gl.UNSIGNED_BYTE;width=params.width||1;height=params.height||1;ctx.onBind('texture'+ctx.textureLocation,target);gl.bindTexture(cube?gl.TEXTURE_CUBE_MAP:gl.TEXTURE_2D,texture);if(!taskManager){if(!cube)gl.texImage2D(gl.TEXTURE_2D,0,format,width,height,0,format,byteSize,src);else for(var face=0;face<6;face++){gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X+face,0,format,width,height,0,format,byteSize,src&&src[face]);}return target;}if(cube)throw new Error("Async upload not supported for Cube Maps.");gl.texImage2D(gl.TEXTURE_2D,0,format,width,height,0,format,byteSize,null);var colMaxSize=Math.floor(maxChunkSize/width)||1,rowMaxSize=Math.min(maxChunkSize,width),uploadEvent=Signal();for(var colOffset=0;colOffset<height;colOffset+=colMaxSize){for(var rowOffset=0;rowOffset<width;rowOffset+=rowMaxSize){var subWidth=Math.min(width-rowOffset,rowMaxSize),subHeight=Math.min(height-colOffset,colMaxSize),bufferOffset=rowOffset+colOffset*width,bufferLength=subWidth*subHeight;taskManager.schedule(target.uploadSubTexture.bind(target,src,rowOffset,colOffset,subWidth,subHeight,bufferOffset,bufferLength));}}taskManager.schedule(function(_){return uploadEvent.onSuccess(target.autoDetectTexParameters());});return uploadEvent;},get format(){return format;},get byteSize(){return byteSize;},copy:function copy(texture){return target.uploadTexture(null,{format:texture.format,byteSize:texture.byteSize,width:texture.width,height:texture.height}).setTextureParameters({wrapMode:texture.wrapMode,filteringMode:texture.filteringMode}).unbind();}};});factory.declare('gl_context',function(target,options){var gl=target.gl,taskManager=options.manager;var textureLocation=null,blankTexture=null;return{get emptyTexture(){return blankTexture||(blankTexture=factory.build('texture',{ctx:target}).uploadTexture(new Uint8Array([0x7f,0x7f,0x7f]),{width:1,height:1,channels:3}).setTextureParameters({wrapMode:WRAP_MODE.set(WRAP_MODE.REPEAT,WRAP_MODE.REPEAT),filteringMode:FILTERING_MODE.set(FILTERING_MODE.NEAREST,FILTERING_MODE.NEAREST,0)}));},generateTexture:function generateTexture(_ref24){var data=_ref24.data,width=_ref24.width,height=_ref24.height,_ref24$channels=_ref24.channels,channels=_ref24$channels===undefined?4:_ref24$channels;return factory.build('texture',{ctx:target}).uploadTexture(new Uint8Array(data.map(function(pixel){return pixel*0xFF;})),{width:width,height:height,channels:channels}).setTextureParameters({wrapMode:WRAP_MODE.set(WRAP_MODE.CLAMP,WRAP_MODE.CLAMP),filteringMode:FILTERING_MODE.set(FILTERING_MODE.LINEAR,FILTERING_MODE.LINEAR,0)}).unbind();},uploadTexture:function uploadTexture(imageData){var texture=factory.build('texture',{ctx:target});return texture.uploadTexture(imageData.out.data,{width:imageData.out.width,height:imageData.out.height,channels:4||imageData.channels},taskManager).pipe(function(_){return texture.unbind();});},bindTextures:function bindTextures(material){if(material.length===0)return target.emptyTexture.bind(0);material.forEach(function(texture,location){return texture.loaded?texture.data.bind(location):target.emptyTexture.bind(location);});},set textureLocation(location){if(textureLocation!==location)textureLocation=(gl.activeTexture(gl.TEXTURE0+location),location);},get textureLocation(){return textureLocation||0;},get maxTexturePrecision(){return target.extensions.texture_float&&target.extensions.texture_float_linear&&32||target.extensions.texture_half_float&&target.extensions.texture_half_float_linear&&16||8;}};});factory.declare('fbo',function(target,options){var gl=options.ctx.gl,framebuffer=gl.createFramebuffer(),renderbuffer=gl.createRenderbuffer();var textures=[],faces=[],depthTexture=null;gl.bindFramebuffer(gl.FRAMEBUFFER,framebuffer);framebuffer.width=options.width;framebuffer.height=options.height;return{get width(){return options.width;},get height(){return options.height;},get attachedTextures(){return textures;},get attachedDepthTexture(){return depthTexture;},bind:function bind(resize){if(options.ctx.onBind('fbo',target))gl.bindFramebuffer(gl.FRAMEBUFFER,framebuffer);if(resize)options.ctx.viewport=[options.width,options.height];return target;},unbind:function unbind(_){options.ctx.onBind('fbo',null);gl.bindFramebuffer(gl.FRAMEBUFFER,null);return target;},attachStencil:function attachStencil(texture){target.bind();return target;},attachDepth:function attachDepth(texture){if(depthTexture===texture)return target;target.bind();if(texture){depthTexture=texture=texture===true?factory.build('texture',{ctx:options.ctx}).uploadTexture(null,{width:options.width,height:options.height,format:gl.DEPTH_COMPONENT,byteSize:gl.UNSIGNED_SHORT}).setTextureParameters({wrapMode:WRAP_MODE.set(WRAP_MODE.CLAMP,WRAP_MODE.CLAMP),filteringMode:FILTERING_MODE.set(FILTERING_MODE.NEAREST,FILTERING_MODE.NEAREST,0)}).unbind():texture;if(texture.width!==options.width||texture.height!==options.height)throw new Error('Texture dimenstions do not match Framebuffer!');gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.DEPTH_ATTACHMENT,gl.TEXTURE_2D,texture.glPointer,0);}else{gl.bindRenderbuffer(gl.RENDERBUFFER,renderbuffer);gl.renderbufferStorage(gl.RENDERBUFFER,gl.DEPTH_COMPONENT16,options.width,options.height);gl.framebufferRenderbuffer(gl.FRAMEBUFFER,gl.DEPTH_ATTACHMENT,gl.RENDERBUFFER,renderbuffer);gl.bindRenderbuffer(gl.RENDERBUFFER,null);}if(gl.checkFramebufferStatus(gl.FRAMEBUFFER)!=gl.FRAMEBUFFER_COMPLETE)throw new Error('Incomplete Framebuffer');return target;},attachTexture:function attachTexture(texture){var location=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var face=arguments[2];if(textures[location]===texture&&faces[location]==face)return target;faces[location]=face;textures[location]=texture=texture||factory.build('texture',{ctx:options.ctx}).uploadTexture(null,{width:options.width,height:options.height,format:gl.RGBA}).setTextureParameters({wrapMode:WRAP_MODE.set(WRAP_MODE.CLAMP,WRAP_MODE.CLAMP),filteringMode:FILTERING_MODE.set(FILTERING_MODE.NEAREST,FILTERING_MODE.NEAREST,0)}).unbind();if(texture.width!==options.width||texture.height!==options.height)throw new Error('Texture dimenstions do not match Framebuffer!');target.bind();gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0+location,texture.cube?gl.TEXTURE_CUBE_MAP_POSITIVE_X+face:gl.TEXTURE_2D,texture.glPointer,0);if(gl.checkFramebufferStatus(gl.FRAMEBUFFER)!=gl.FRAMEBUFFER_COMPLETE)throw new Error('Incomplete Framebuffer');return target;},clear:function clear(_){gl.deleteFramebuffer(framebuffer);gl.deleteRenderbuffer(renderbuffer);}};});factory.declare('gl_context',function(target,options){var gl=target.gl,FBOs=[];var totalMemoryUsage=0;return{returnFramebuffer:function returnFramebuffer(framebuffer){framebuffer.inUse=false;},pollFramebuffer:function pollFramebuffer(width){var height=arguments.length>1&&arguments[1]!==undefined?arguments[1]:width;var fboIdx=FBOs.findIndex(function(fbo){return fbo.width===width&&fbo.height===height&&!fbo.inUse;});if(fboIdx>-1)return FBOs[fboIdx];totalMemoryUsage+=width*height;var fbo=factory.build('fbo',{ctx:target,width:width,height:height});logger.info('memory',"Allocating framebuffer ("+FBOs.length+") size ["+width+","+height+"]. Total: "+totalMemoryUsage);return FBOs[FBOs.length]=tie(fbo,{inUse:true,return:target.returnFramebuffer.bind(target,fbo).once()});}};});factory.declare('pipeline',function(target){var queue=[];var frame=0;return{pass:function pass(callable){return queue.push(callable),target;},clear:function clear(callable){return callable?queue.remove(callable):queue.length=0,target;},run:function run(ctx,scene){return Signal(function(flush){var idx=0;var next=function next(_){return idx>=queue.length?flush(frame++):queue[idx++].call(target,ctx,scene,next.once(),frame);};next();});}};});var LIGHTMAP_RESOLUTION=Math.pow(2,4);var LIGHTMAP_SCALE_FACTOR=Math.pow(2,5)/Math.pow(2,8);var LightmapTexture=function LightmapTexture(ctx,width,height){return factory.build('texture',{ctx:ctx}).uploadTexture(null,{width:width,height:height,format:ctx.gl.RGBA}).setTextureParameters({wrapMode:WRAP_MODE.set(WRAP_MODE.CLAMP,WRAP_MODE.CLAMP),filteringMode:FILTERING_MODE.set(FILTERING_MODE.LINEAR,FILTERING_MODE.LINEAR,0)}).unbind();};var Lightmap=function Lightmap(ctx,_ref25){var width=_ref25.width,height=_ref25.height;var target=Object.create(null),texture=LightmapTexture(ctx,width,height),packer=BinPacker(undefined,width,height),instances=[];return tie(target,{dirtyFlag:true,texture:texture,get instances(){return instances;},updateLayout:function updateLayout(_){packer.clear().insert(instances.map(function(instanceLightmap){return delete instanceLightmap.bounds.fit,instanceLightmap.bounds;}));if(!instances.every(function(instanceLightmap){return instanceLightmap.bounds.fit;}))return false;instances.forEach(function(instanceLightmap){return vec2.copy([instanceLightmap.bounds.fit.x/width,instanceLightmap.bounds.fit.y/height],instanceLightmap.offset);});return target.dirtyFlag=true;},attachInstance:function attachInstance(instance){var defer=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var lightmapScale=LIGHTMAP_SCALE_FACTOR*LIGHTMAP_RESOLUTION;var initialBounds=instance.delegate.data.internalData.uvBounds,bounds={w:initialBounds.w*lightmapScale,h:initialBounds.h*lightmapScale};instances.push(instance.lightmap={delegate:target,bounds:bounds,scale:vec2(bounds.w/width,bounds.h/height),offset:vec2()});return defer||target.updateLayout()||(target.detachInstance(instance),false);},detachInstance:function detachInstance(instance){var idx=instances.indexOf(instance.lightmap);if(idx==-1)return false;delete instance.lightmap;instances.splice(idx,1);}});};factory.declare('gl_context',function(target,options){var gl=target.gl,ctx=target,taskManager=options.manager,lightmapScale=LIGHTMAP_RESOLUTION,lightShaders={'spotlight':ctx.compileShader(vglsl.merge(shaders.bake_lightmap,shaders.spotlight)),'spotlight-shadow':ctx.compileShader(vglsl.merge(shaders.bake_lightmap,shaders.vsm_shadow,shaders.spotlight)),'omnilight':ctx.compileShader(vglsl.merge(shaders.bake_lightmap,shaders.omnilight)),'omnilight-shadow':ctx.compileShader(vglsl.merge(shaders.bake_lightmap,shaders.vsm_cube_shadow,shaders.omnilight)),'hemisphere':ctx.compileShader(vglsl.merge(shaders.bake_lightmap,shaders.hemisphere))},wireShader={'spotlight':function spotlight(shader,light){shader.uao.light.color=vec3$1.copy(light.color,shader.uao.light.color);shader.uao.light.direction=vec3$1.copy(light.direction,shader.uao.light.direction);shader.uao.light.radius=light.radius;shader.uao.light.outerAngle=light.cosOuterAngle;shader.uao.light.innerAngle=light.cosInnerAngle;shader.uao.lightViewMatrix=mat4.copy(light.camera.viewMatrix,shader.uao.lightViewMatrix);},'omnilight':function omnilight(shader,light){shader.uao.light.color=vec3$1.copy(light.color,shader.uao.light.color);shader.uao.light.radius=light.radius;shader.uao.lightPosition=vec3$1.copy(light.camera.position,shader.uao.lightPosition);},'hemisphere':function hemisphere(shader,light){shader.uao.light.up=vec3$1.copy(light.up,shader.uao.light.up);shader.uao.light.skyColor=vec3$1.copy(light.skyColor,shader.uao.light.skyColor);shader.uao.light.groundColor=vec3$1.copy(light.groundColor,shader.uao.light.groundColor);}},lightmapRegions=Object.create(null),clearLightmap=function clearLightmap(instance){return instance.lightmap&&instance.lightmap.delegate.detachInstance(instance);};var framebuffer=null,renderTexture=null;return{lightmapper:{updateRegion:function updateRegion(lights,cluster){var _region$deferredLight;var region=lightmapRegions[cluster.index];if(!region){region={cluster:cluster,deferredLights:[],lights:[],lightmaps:[]};region.bake=target.lightmapper.bakeRegion.bind(target,region);region.clear=target.lightmapper.clearRegion.bind(target,region);region.lightCleanup=function(light){return region.lights.remove(light),region.lightmaps.forEach(function(lightmap){return lightmap.dirtyFlag=true;});};lightmapRegions[cluster.index]=region;}var deferredLights=lights.filter(function(light){return region.lights.indexOf(light)==-1&&region.deferredLights.indexOf(light)==-1;}).filter(function(light){return!light.boundingSphereRadius||cluster.pointers.find(function(instance){return Math.pow(light.boundingSphereRadius+instance.boundingSphereRadius,2)>vec3$1.differenceSquared(light.camera.position,vec3$1.translationFromMat4(instance.modelMatrix,vec3$1.temp));});});(_region$deferredLight=region.deferredLights).push.apply(_region$deferredLight,_toConsumableArray(deferredLights));deferredLights.forEach(function(light){return light.onCleanup(region.deferredLights.remove.bind(region.deferredLights,light));});taskManager.schedule(cluster.pointers.length?region.bake:region.clear,false);},bakeRegion:function bakeRegion(region){var _region$lights;var instances=region.cluster.pointers,lightmaps=region.lightmaps,instancesPerLightmap=[],deferredLights=region.deferredLights.slice();instances.forEach(function(instance){instance.onCleanup(clearLightmap);for(var i=0,maxLightmaps=lightmaps.length;!instance.lightmap&&i<=maxLightmaps;i++){(lightmaps[i]=lightmaps[i]||Lightmap(target,{width:lightmapScale*128,height:lightmapScale*128})).attachInstance(instance);}if(!instance.lightmap)throw new Error("Mesh "+instance.delegate.id+" "+instance.delegate.data.internalData.uvBounds.w+" x "+instance.delegate.data.internalData.uvBounds.h+" does not fit into lightmap "+lightmapScale*128);var lightmapIdx=lightmaps.indexOf(instance.lightmap.delegate);return(instancesPerLightmap[lightmapIdx]=instancesPerLightmap[lightmapIdx]||[]).push(instance);});region.deferredLights.length=0;deferredLights.forEach(function(light){return light.onCleanup(region.lightCleanup);});(_region$lights=region.lights).push.apply(_region$lights,_toConsumableArray(deferredLights));logger.info('lightmap',"Baking lightmap region "+region.cluster.index+" instances: "+instances.length+" lights: "+deferredLights.length+" count: "+lightmaps.length);for(var idx=0;idx<lightmaps.length;idx++){if(!instancesPerLightmap[idx])continue;var lightmap=lightmaps[idx];if(lightmap.dirtyFlag)target.lightmapper.bakeLightmap(instancesPerLightmap[idx],region.lights,lightmap.texture,lightmap.dirtyFlag=false);else if(deferredLights.length)target.lightmapper.bakeLightmap(instancesPerLightmap[idx],deferredLights,lightmap.texture);}},clearRegion:function clearRegion(region){logger.info('lightmap',"Clearing lightmap region "+region.cluster.index+" count: "+region.lightmaps.length);region.lightmaps.forEach(function(lightmap){return lightmap.texture.clear();});region.lights.forEach(function(light){return light.cleanupProcedures.remove(region.lightCleanup);});region.deferredLights.length=region.lights.length=region.lightmaps.length=0;delete lightmapRegions[region.cluster.index];},bakeLightmap:function bakeLightmap(instances,lights,outputTexture){var accumulate=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;if(!renderTexture)renderTexture=LightmapTexture(ctx,lightmapScale*128,lightmapScale*128);if(!framebuffer)framebuffer=ctx.pollFramebuffer(renderTexture.width,renderTexture.height).attachTexture(renderTexture);taskManager.schedule(function(_){ctx.saveState();framebuffer.bind(true);ctx.clearColor=[0.0,0.0,0.0,0.0];accumulate?ctx.applyFilter(ctx.filters.none,framebuffer,outputTexture):gl.clear(gl.COLOR_BUFFER_BIT);framebuffer.unbind();ctx.restoreState();});lights.forEach(function(light){var shadowMap=light.castShadow&&ctx.renderShadowMap(light,{blur:true,shared:true});taskManager.schedule(function(){target.lightmapper.bakeLight(light,instances,shadowMap&&shadowMap.value);});});taskManager.schedule(function(_){var tempFramebuffer=ctx.pollFramebuffer(outputTexture.width,outputTexture.height).attachTexture(outputTexture);ctx.applyFilter(ctx.filters.dilate,tempFramebuffer,renderTexture);tempFramebuffer.return();});return Signal(function(done){return taskManager.schedule(done.bind(target,outputTexture));});},bakeLight:function bakeLight(light,instances,shadowMap){var shader=lightShaders[""+light.type+(shadowMap?'-shadow':'')];ctx.saveState();ctx.depthTest=ctx.culling=false;ctx.blendMode='add';framebuffer.bind(true);shader.use();if(shadowMap)ctx.bindShadowMap(shadowMap,light,shader);wireShader[light.type](shader,light);instances.forEach(function(instance){if(!instance.lightmap)return;ctx.enableVAO(instance.delegate.data);shader.uao.lightmapOffset=vec2.copy(instance.lightmap.offset,shader.uao.lightmapOffset);shader.uao.lightmapScale=vec2.copy(instance.lightmap.scale,shader.uao.lightmapScale);shader.uao.modelMatrix=mat4.copy(instance.modelMatrix,shader.uao.modelMatrix);shader.uao.update();ctx.drawElements(instance.delegate.data.totalSize,instance.delegate.data.offset);});framebuffer.unbind();ctx.restoreState();}},bindLightmap:function bindLightmap(instance,shader){var location=arguments.length>2&&arguments[2]!==undefined?arguments[2]:2;if(!instance.lightmap)return target.emptyTexture.bind(location);var lightmap=instance.lightmap;lightmap.delegate.texture.bind(location);shader.uao.lightmap=location;shader.uao.lightmapOffset=vec2.copy(lightmap.offset,shader.uao.lightmapOffset);shader.uao.lightmapScale=vec2.copy(lightmap.scale,shader.uao.lightmapScale);}};});factory.declare('gl_context',function(target,options){var gl=target.gl,ctx=target,taskManager=options.manager,shader=ctx.compileShader(shaders.vsm_depth),shadowMapScale=1;var framebuffer=null,sharedShadowMap=null,sharedShadowCubeMap=null;return{renderShadowMap:function renderShadowMap(light){var _ref26=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},_ref26$shared=_ref26.shared,shared=_ref26$shared===undefined?true:_ref26$shared,_ref26$blur=_ref26.blur,blur=_ref26$blur===undefined?true:_ref26$blur;var camera=light.camera;if(camera.cube)return target.renderShadowCubeMap(light,{shared:shared});if(!framebuffer)framebuffer=ctx.pollFramebuffer(shadowMapScale*1024,shadowMapScale*1024).attachTexture(null).attachDepth(true);var shadowmap=!shared&&light.shadowmap||sharedShadowMap||(sharedShadowMap=factory.build('texture',{ctx:ctx}).uploadTexture(null,{width:framebuffer.width,height:framebuffer.height,format:gl.RGBA,byteSize:ctx.maxTexturePrecision===32&&gl.FLOAT||ctx.maxTexturePrecision===16&&gl.HALF_FLOAT||gl.UNSIGNED_BYTE}).setTextureParameters({wrapMode:WRAP_MODE.set(WRAP_MODE.CLAMP,WRAP_MODE.CLAMP),filteringMode:FILTERING_MODE.set(FILTERING_MODE.LINEAR,FILTERING_MODE.LINEAR,0)}).unbind());taskManager.schedule(function(_){ctx.saveState();ctx.blendMode=false;ctx.depthTest=true;ctx.culling='back';shader.use();shader.uao.viewMatrix=mat4.copy(camera.viewMatrix,shader.uao.viewMatrix);shader.uao.projectionMatrix=mat4.copy(camera.projectionMatrix,shader.uao.projectionMatrix);shader.uao.radius=light.radius;framebuffer.bind(true).attachTexture(shadowmap);ctx.colorMask=[true,true,false,false];ctx.clearColor=[0.0,0.0,0.0,0.0];gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);light.queryShadowcasters().forEach(function(instance){var meshData=instance.delegate.data;ctx.enableVAO(meshData);shader.uao.modelMatrix=mat4.copy(instance.modelMatrix,shader.uao.modelMatrix);shader.uao.update();ctx.drawElements(meshData.totalSize,meshData.offset);});framebuffer.unbind();ctx.restoreState();});return Signal(function(done){return taskManager.schedule(function(){if(!blur)return done.call(target,shadowmap);shadowmap.blur=shadowmap.blur||ctx.prepareFilter(ctx.filters.blur,shadowmap);return done.call(target,shadowmap.blur());});});},renderShadowCubeMap:function renderShadowCubeMap(light){var _ref27=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},_ref27$shared=_ref27.shared,shared=_ref27$shared===undefined?true:_ref27$shared;var camera=light.camera;if(!framebuffer)framebuffer=ctx.pollFramebuffer(shadowMapScale*1024,shadowMapScale*1024).attachTexture(null).attachDepth(true);var shadowmap=!shared&&light.shadowmap||sharedShadowCubeMap||(sharedShadowCubeMap=factory.build('texture',{ctx:ctx,cube:camera.cube}).uploadTexture(null,{width:framebuffer.width,height:framebuffer.height,format:gl.RGBA,byteSize:ctx.maxTexturePrecision===32&&gl.FLOAT||ctx.maxTexturePrecision===16&&gl.HALF_FLOAT||gl.UNSIGNED_BYTE}).setTextureParameters({wrapMode:WRAP_MODE.set(WRAP_MODE.CLAMP,WRAP_MODE.CLAMP),filteringMode:FILTERING_MODE.set(FILTERING_MODE.LINEAR,FILTERING_MODE.LINEAR,0)}).unbind());camera.faces.forEach(function(camera,face){return taskManager.schedule(function(_){ctx.saveState();ctx.blendMode=false;ctx.depthTest=true;ctx.culling='back';shader.use();shader.uao.viewMatrix=mat4.copy(camera.viewMatrix,shader.uao.viewMatrix);shader.uao.projectionMatrix=mat4.copy(camera.projectionMatrix,shader.uao.projectionMatrix);shader.uao.radius=light.radius;framebuffer.bind(true).attachTexture(shadowmap,0,face);ctx.colorMask=[true,true,false,false];ctx.clearColor=[0.0,0.0,0.0,0.0];gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);light.queryShadowcasters(face).forEach(function(instance){var meshData=instance.delegate.data;ctx.enableVAO(meshData);shader.uao.modelMatrix=mat4.copy(instance.modelMatrix,shader.uao.modelMatrix);shader.uao.update();ctx.drawElements(meshData.totalSize,meshData.offset);});framebuffer.unbind();ctx.restoreState();});});return Signal(function(done){return taskManager.schedule(done.bind(target,shadowmap));});},bindShadowMap:function bindShadowMap(shadowMap,light,shader){var location=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;if(shader.uao.lightProjectionMatrix)shader.uao.lightProjectionMatrix=mat4.copy(light.camera.projectionMatrix,shader.uao.lightProjectionMatrix);shader.uao.shadowMap=location;shadowMap.bind(location);}};});var FullscreenQuad=function FullscreenQuad(ctx){var gl=ctx.gl,quadVBO=factory.build('vbo',{ctx:ctx}).staticUpload(new Float32Array([0,0,1,0,1,1,0,1]),new Uint16Array([0,1,2,0,2,3]));return{render:function render(_){quadVBO.bind();ctx.bindArrayAttribute(ATTRIBUTE_LOCATIONS['uv'],2,gl.FLOAT,false,2*4,0);ctx.drawElements(6,0);}};};factory.declare('gl_context',function(target,options){var gl=target.gl,ctx=target,taskManager=options.manager,quad=FullscreenQuad(target),filters={blur:target.compileShader(vglsl.merge(shaders.fullscreen,shaders.box_blur)),dilate:target.compileShader(vglsl.merge(shaders.fullscreen,shaders.dilate)),none:target.compileShader(shaders.fullscreen)};return{filters:filters,prepareFilter:function prepareFilter(filter,input,output){output=output||factory.build('texture',{ctx:ctx}).copy(input);var framebuffer=ctx.pollFramebuffer(output.width,output.height).attachTexture(output);return target.applyFilter.bind(null,filter,framebuffer,input);},applyFilter:function applyFilter(filter,framebuffer,input){ctx.saveState();ctx.depthTest=ctx.depthMask=ctx.blendMode=false;filter.uao.pixelSize=vec2.copy([1.0/framebuffer.width,1.0/framebuffer.height],filter.uao.pixelSize);filter.uao.sampler=0;input.bind(0);framebuffer.bind(true);filter.use();gl.clear(gl.COLOR_BUFFER_BIT);quad.render();framebuffer.unbind();ctx.restoreState();return framebuffer.attachedTextures[0];}};});var SkyboxPass=function SkyboxPass(ctx,scene){var gl=ctx.gl,shader=ctx.compileShader(shaders.fullscreen_cube),cubeVBO=factory.build('vbo',{ctx:ctx}).staticUpload(new Float32Array([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,1,-1,-1,1,-1,-1,1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1]),new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]));shader.uao.sampler=0;var skyboxTexture=null;scene.camera.mutation.pipe(function(mutations){if(mutations.projectionMatrix)shader.uao.projectionMatrix=mat4.copy(mutations.projectionMatrix,shader.uao.projectionMatrix);if(mutations.viewMatrix)shader.uao.modelViewMatrix=mat4.multiply(mutations.viewMatrix,mat4.translate(mat4.identity(),scene.camera.position),shader.uao.modelViewMatrix);},false);return function(ctx,scene,next,frame){gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);if(!skyboxTexture)return next();ctx.saveState();ctx.depthTest=false;shader.use();cubeVBO.bind();ctx.bindArrayAttribute(ATTRIBUTE_LOCATIONS['position'],3,gl.FLOAT,false,3*4,0);skyboxTexture.bind(0);gl.drawElements(gl.TRIANGLES,36,gl.UNSIGNED_SHORT,0);ctx.restoreState();next();};};var StaticGeometryPass=function StaticGeometryPass(ctx,scene){var lightmapping=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var gl=ctx.gl,shader=lightmapping?ctx.compileShader(vglsl.merge(shaders.static_geometry,shaders.fog_exp,shaders.render_lightmap)):ctx.compileShader(vglsl.merge(shaders.static_geometry,shaders.fog_exp,shaders.blinn_phong,shaders.ambient_light));shader.uao.albedo=0;scene.camera.mutation.pipe(function(mutations){if(mutations.projectionMatrix)shader.uao.Pmat=mat4.copy(mutations.projectionMatrix,shader.uao.Pmat);});scene.environment.mutation.pipe(function(mutations){if(mutations.fogColor){shader.uao.fogColor=vec3$1.copy(mutations.fogColor,shader.uao.fogColor);ctx.clearColor=vec3$1.copy(mutations.fogColor,ctx.clearColor);}if(mutations.fogDensity)shader.uao.fogDensity=mutations.fogDensity;});if(lightmapping){scene.clusterPartitioning.addEventListener('complete',ctx.lightmapper.updateRegion.bind(ctx,scene.lights));scene.clusterPartitioning.addEventListener('remove',ctx.lightmapper.updateRegion.bind(ctx,scene.lights));scene.addEventListener('light',function(light){return light.queryShadowcasters().map(function(instance){return instance.partitionCluster;}).filter(function(cluster){return cluster&&!cluster.awaitEvent;}).forEach(function(cluster){return ctx.lightmapper.updateRegion([light],cluster);});});}return function(ctx,scene,next,frame){ctx.depthTest=true;ctx.depthMask=true;ctx.culling='back';var geometry=scene.fetchInstancesByGroup('static');var meshIdx=geometry.length,subMeshIdx=null,instanceIdx=null,mesh=null,meshData=null,subMesh=null,instance=null;while(meshIdx--){mesh=geometry[meshIdx];if(!mesh.loaded)continue;meshData=mesh.data;subMeshIdx=meshData.subMeshes.length;while(subMeshIdx--){subMesh=meshData.subMeshes[subMeshIdx];instanceIdx=mesh.instances.length;while(instanceIdx--){instance=mesh.instances[instanceIdx];if(instance.frameFlag!==frame){instance.frameFlag=frame;instance.visible=scene.camera.frustumCulling(instance);}if(!instance.visible)continue;shader.use();ctx.enableVAO(meshData);subMesh.material&&ctx.bindTextures(subMesh.material.textures);if(lightmapping)ctx.bindLightmap(instance,shader);shader.uao.MVmat=mat4.multiply(scene.camera.viewMatrix,instance.modelMatrix,shader.uao.MVmat);shader.uao.update();ctx.drawElements(subMesh.bufferLength,meshData.offset+subMesh.bufferOffset);}}}next();};};var RealtimeLightingPass=function RealtimeLightingPass(ctx,scene){var gl=ctx.gl,shader=ctx.compileShader(vglsl.merge(shaders.static_geometry,shaders.fog_exp,shaders.blinn_phong,shaders.ambient_light));shader.uao.albedo=0;shader.uao.ambient=[0.2,0.2,0.2];shader.uao.sun.direction=vec3$1.normalize([0.5,1,0.5]);shader.uao.sun.color=[0.4,0.4,0.4];scene.camera.mutation.pipe(function(mutations){if(mutations.projectionMatrix)shader.uao.Pmat=mat4.copy(mutations.projectionMatrix,shader.uao.Pmat);});scene.environment.mutation.pipe(function(mutations){if(mutations.fogColor)shader.uao.fogColor=vec3$1.copy(mutations.fogColor,shader.uao.fogColor);if(mutations.fogDensity)shader.uao.fogDensity=mutations.fogDensity;});return function(ctx,scene,next,frame){ctx.depthTest=true;ctx.culling='back';var geometry=scene.fetchInstancesByGroup('dynamic');var meshIdx=geometry.length;while(meshIdx--){var mesh=geometry[meshIdx];if(!mesh.loaded)continue;var subMeshIdx=mesh.data.subMeshes.length;while(subMeshIdx--){var subMesh=mesh.data.subMeshes[subMeshIdx];var instanceIdx=mesh.instances.length;while(instanceIdx--){var instance=mesh.instances[instanceIdx];if(instance.frameFlag!==frame)instance.visible=scene.camera.frustumCulling(instance);if(!instance.visible)continue;shader.use();ctx.enableVAO(mesh.data);subMesh.material&&ctx.bindTextures(subMesh.material.textures);shader.uao.MVmat=mat4.multiply(scene.camera.viewMatrix,instance.modelMatrix,shader.uao.MVmat);shader.uao.update();ctx.drawElements(subMesh.bufferLength,mesh.data.offset+subMesh.bufferOffset);}}}next();};};var SkinnedGeometryPass=function SkinnedGeometryPass(ctx,scene){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};options.dualQuatSkinning=true;var gl=ctx.gl,shader=options.dualQuatSkinning?ctx.compileShader(vglsl.merge(shaders.geometry,shaders.dualquat_skinning,shaders.fog_exp)):ctx.compileShader(vglsl.merge(shaders.geometry,shaders.linear_skinning,shaders.fog_exp));shader.uao.albedo=0;scene.camera.mutation.pipe(function(mutations){if(mutations.projectionMatrix)shader.uao.projectionMatrix=mat4.copy(mutations.projectionMatrix,shader.uao.projectionMatrix);});scene.environment.mutation.pipe(function(mutations){if(mutations.fogColor)shader.uao.fogColor=vec3$1.copy(mutations.fogColor,shader.uao.fogColor);if(mutations.fogDensity)shader.uao.fogDensity=mutations.fogDensity;});return function(ctx,scene,next,frame){ctx.depthTest=true;ctx.culling='back';shader.use();var geometry=scene.fetchInstancesByGroup('skinned');var meshIdx=geometry.length,subMeshIdx=null,instanceIdx=null,mesh=null,meshData=null,subMesh=null,instance=null;while(meshIdx--){mesh=geometry[meshIdx];if(!mesh.loaded)continue;meshData=mesh.data;ctx.enableVAO(meshData);subMeshIdx=meshData.subMeshes.length;while(subMeshIdx--){subMesh=meshData.subMeshes[subMeshIdx];subMesh.material&&ctx.bindTextures(subMesh.material.textures);instanceIdx=mesh.instances.length;while(instanceIdx--){instance=mesh.instances[instanceIdx];if(instance.frameFlag!==frame)instance.visible=scene.camera.frustumCulling(instance);if(!instance.visible)continue;shader.uao.modelViewMatrix=mat4.multiply(scene.camera.viewMatrix,instance.modelMatrix,shader.uao.modelViewMatrix);meshData.armature.update(instance.animationClip);instance.applyTransform(meshData.armature);shader.uao.boneMatrix=meshData.armature.jointMatrixArray;shader.uao.highlightColor=vec3$1.copy(instance.highlight,shader.uao.highlightColor);shader.uao.update();ctx.drawElements(subMesh.bufferLength,meshData.offset+subMesh.bufferOffset);}}}next();};};var decal_geometry={vert:vglsl.createShader(),frag:vglsl.createShader().extension('GL_EXT_frag_depth').main(['vec4 color = texture2D(albedo, vTexCoords);','if(color.a <= 0.1) discard;','#ifdef GL_EXT_frag_depth','gl_FragDepthEXT = gl_FragCoord.z - 0.000001;','#endif','vec3 normal = normalize(vNormal);','vec3 viewDirection = normalize(vViewDir);','vec3 totalLight = calcLighting(normal, viewDirection);','gl_FragColor = vec4(applyFog(totalLight * color.rgb), color.a);'])};var DecalGeometryPass=function DecalGeometryPass(ctx,scene){var lightmapping=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var dataFormat=[{type:'position',size:3,byteSize:4},{type:'normal',size:3,byteSize:4},{type:'uv',size:2,byteSize:4}].concat(lightmapping?[{type:'lm_uv',size:2,byteSize:4}]:[]);var shader=lightmapping?ctx.compileShader(vglsl.merge(shaders.static_geometry,shaders.fog_exp,shaders.render_lightmap,decal_geometry)):null;shader.uao.albedo=0;scene.camera.mutation.pipe(function(mutations){if(mutations.projectionMatrix)shader.uao.Pmat=mat4.copy(mutations.projectionMatrix,shader.uao.Pmat);if(mutations.viewMatrix)shader.uao.MVmat=mat4.copy(mutations.viewMatrix,shader.uao.MVmat);},false);scene.environment.mutation.pipe(function(mutations){if(mutations.fogColor)shader.uao.fogColor=vec3$1.copy(mutations.fogColor,shader.uao.fogColor);if(mutations.fogDensity)shader.uao.fogDensity=mutations.fogDensity;});var decalRegions=Object.create(null);function updateRegion(cluster){if(decalRegions[cluster.index]&&decalRegions[cluster.index].uploadEvent){decalRegions[cluster.index].uploadEvent.listen(function(mesh){return mesh.unload();});delete decalRegions[cluster.index];}var staticGeometry=cluster.pointers.slice();var decals=scene.fetchInstancesByGroup('decal').map(function(_ref28){var instances=_ref28.instances;return instances;}).flatten();var regionData=Object.create(null);decalRegions[cluster.index]=regionData;regionData.uploadEvent=ctx.batchDecals(decals,staticGeometry,dataFormat).pipe(function(meshData){Object.assign(regionData,meshData);return ctx.uploadMeshData(meshData,null,true).pipe(function(mesh){return regionData.data=mesh;});});}scene.clusterPartitioning.addEventListener('complete',updateRegion);scene.clusterPartitioning.addEventListener('remove',updateRegion);return function(ctx,scene,next,frame){ctx.depthTest=true;ctx.depthMask=false;ctx.culling='back';shader.use();var regions=scene.clusterPartitioning.clusters;var regionIdx=regions.length;while(regionIdx--){var mesh=decalRegions[regions[regionIdx].index];if(!mesh||!mesh.data)continue;ctx.enableVAO(mesh.data);var submeshIdx=mesh.submeshes.length,submesh=null;while(submeshIdx--){submesh=mesh.submeshes[submeshIdx];if(submesh.instance.frameFlag!==frame){submesh.instance.frameFlag=frame;submesh.instance.visible=scene.camera.frustumCulling(submesh.instance);}if(!submesh.instance.visible)continue;ctx.bindTextures(submesh.materials);if(lightmapping)ctx.bindLightmap(submesh.delegate,shader);shader.uao.update();ctx.drawElements(submesh.length,mesh.data.offset+submesh.offset);}}next();};};var CORNERS=[[-0.5,-0.5],[+0.5,-0.5],[+0.5,+0.5],[-0.5,+0.5]];var InterleavedArrayIterator=function InterleavedArrayIterator(requireArray,format){var iterator=Object.create(null),stride=format.reduce(function(size,property){return(property[2]=size)+(property[3]=property[1].length||1);},2),arrayPointer=typeof requireArray==='function'?requireArray(4*stride):requireArray;var arrayOffset=0;format.forEach(function(property){return property[0]&&Object.defineProperty(iterator,property[0],{set:new Function('array','value',"var i=this.offset+"+property[2]+";"+Array(4).fill(property[3]>1?Array.range(property[3]).map(function(i){return"array[i+"+i+"] = value["+i+"];";}).join(''):'array[i] = value;').join("i+="+stride+";")).bind(iterator,arrayPointer),get:new Function('array',"var i=this.offset+"+property[2]+";return array.slice(i,i+"+property[3]+")"+(property[3]==1?'[0]':'')+";").bind(iterator,arrayPointer)});});return tie(iterator,{set index(value){arrayOffset=value*stride*4;},get stride(){return 4*stride;},get offset(){return arrayOffset;},get array(){return arrayPointer;},init:function init(skipDefaults){CORNERS.forEach(function(corner,i){var offset=arrayOffset+i*stride;arrayPointer[offset+0]=corner[0];arrayPointer[offset+1]=corner[1];});if(!skipDefaults)format.forEach(function(property){return iterator[property[0]]=property[1];});}});};var generateParticleTexture=function generateParticleTexture(_){var pixelBase=[0,0.2,0.7,1,0.7,0.2,0,0],size=pixelBase.length,pixels=[];for(var y=0;y<size;y++){for(var x=0;x<size;x++){var pixel=pixelBase[x]*pixelBase[y];pixels.push(pixel,pixel,pixel,pixel);}}return{data:pixels,width:8,height:8,channels:8};};var ColorRamp=function ColorRamp(){for(var _len17=arguments.length,colors=Array(_len17),_key17=0;_key17<_len17;_key17++){colors[_key17]=arguments[_key17];}return{data:colors.flatten(),width:colors.length,height:1,channels:colors[0].length};};var RangeSampler=function RangeSampler(value,range){if(!value.length)return function(_){return value+(Math.random()-0.5)*range*2;};var temp=[];return function(_){for(var i=value.length-1;i>=0;i--){temp[i]=value[i]+(Math.random()-0.5)*range[i]*2;}return temp;};};var approximateParticleSystemRadius=function approximateParticleSystemRadius(group,range){var samples=arguments.length>2&&arguments[2]!==undefined?arguments[2]:4;var max=0;for(var rangeLength=range[1]-range[0],i=0;i<samples;i++){var index=Math.floor(rangeLength*i/samples);group.arrayIterator.index=range[0]+index;var position=group.arrayIterator.position,velocity=group.arrayIterator.velocity,acceleration=group.arrayIterator.acceleration;max=Math.max(max,Math.abs(position[0])+Math.abs(velocity[0])+Math.abs(acceleration[0]),Math.abs(position[1])+Math.abs(velocity[1])+Math.abs(acceleration[1]),Math.abs(position[2])+Math.abs(velocity[2])+Math.abs(acceleration[2]));}return max;};var ParticleEmitter=function ParticleEmitter(group,options){var emitter=Object.create(null),material=[options.colorRamp,options.texture],attributes=options.emitter;attributes.timeRange=attributes.timeRange||options.particle.lifeTime;attributes.frameCount=attributes.frameCount||1;attributes.frameDuration=attributes.frameDuration||options.particle.lifeTime/attributes.frameCount;var range=group.allocate(options.count,options.particle);var cursor=0;return tie(emitter,{modelMatrix:mat4.identity(),static:options.static,time:0,radius:approximateParticleSystemRadius(group,range),get blendMode(){return options.blend;},get instances(){return options.instances;},get attributes(){return attributes;},get material(){return material;},get bufferLength(){return 6*options.count;},get bufferOffset(){return 6*range[0];},advanceTime:function advanceTime(deltaTime){return emitter.time+=deltaTime;},emitParticles:function emitParticles(count,transform){var position=options.particle.position;vec3$1.translationFromMat4(transform,position);options.particle.startTime=emitter.time;var limit=range[1]-range[0];count=count%limit;if(cursor+count>limit){var remaining=limit-cursor;group.update(range[0]+cursor,remaining,options.particle);count-=remaining;cursor=0;}group.update(range[0]+cursor,count,options.particle);cursor+=count;}});};factory.declare('particle_system',function(target,_ref29){var ctx=_ref29.ctx;var gl=ctx.gl,vertexBuffer=gl.createBuffer(),indexBuffer=gl.createBuffer();return{uploadRange:function uploadRange(startIndex,endIndex,vertexArray){target.bind();var dataView=new Float32Array(vertexArray.buffer,startIndex*Float32Array.BYTES_PER_ELEMENT,endIndex-startIndex);gl.bufferSubData(gl.ARRAY_BUFFER,startIndex*Float32Array.BYTES_PER_ELEMENT,dataView);return target;},upload:function upload(vertexArray,indexArray){target.bind();if(vertexArray instanceof Float32Array)gl.bufferData(gl.ARRAY_BUFFER,vertexArray,gl.DYNAMIC_DRAW);else if(!isNaN(vertexArray))gl.bufferData(gl.ARRAY_BUFFER,vertexArray*Float32Array.BYTES_PER_ELEMENT,gl.DYNAMIC_DRAW);if(indexArray instanceof Uint16Array)gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,indexArray,gl.STATIC_DRAW);return target;},bind:function bind(_){if(ctx.onBind('vbo',target)){gl.bindBuffer(gl.ARRAY_BUFFER,vertexBuffer);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,indexBuffer);}return target;},unbind:function unbind(_){ctx.onBind('vbo',null);gl.bindBuffer(gl.ARRAY_BUFFER,null);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,null);return target;},clear:function clear(_){ctx.clearVBOAttributePointers(target);gl.deleteBuffer(vertexBuffer);gl.deleteBuffer(indexBuffer);}};});factory.declare('particle_system',function(target,_ref30){var format=_ref30.format,limit=_ref30.limit;var arrayIterator=InterleavedArrayIterator(function(size){return new Float32Array(size*limit);},format),emitters=[],reservedRanges=[],deferredRanges=[],requireRange=function requireRange(size){var index=void 0,offset=0;for(index=0;index<reservedRanges.length;index++){if(reservedRanges[index][0]-offset>=size)break;offset=reservedRanges[index][1];}var range=[offset,offset+size];reservedRanges.splice(index,0,range);return range;},deferRangeUpload=function deferRangeUpload(range){var mergeThreshold=limit/16;for(var i=deferredRanges.length-1;i>=0;i--){var mergedRange=deferredRanges[i];var t=mergedRange.slice();if(range[0]>mergedRange[1]+mergeThreshold||range[1]<mergedRange[0]-mergeThreshold)continue;mergedRange[0]=Math.min(mergedRange[0],range[0]);mergedRange[1]=Math.max(mergedRange[1],range[1]);return true;}deferredRanges.push(range);};target.upload(arrayIterator.array.length,new Uint16Array(Array.range(limit).map(function(i){return[0,1,2,0,2,3].map(function(idx){return idx+i*4;});}).flatten()));return{arrayIterator:arrayIterator,get emitters(){return emitters;},createEmitter:function createEmitter(options){var emitter=ParticleEmitter(target,options);emitters.push(emitter);return emitter;},allocate:function allocate(count,particleSettings){var parameterNames=Object.keys(particleSettings),range=requireRange(count),indexOffset=range[0];var _loop5=function _loop5(i){arrayIterator.index=indexOffset+i;arrayIterator.init();parameterNames.forEach(function(param){var value=particleSettings[param];if(typeof value==='function')value=value.call(target,i,count,particleSettings);arrayIterator[param]=value;});};for(var i=0;i<count;i++){_loop5(i);}deferRangeUpload(range.slice());return range;},update:function update(indexOffset,count,particleSettings){var parameterNames=Object.keys(particleSettings);var _loop6=function _loop6(i){arrayIterator.index=indexOffset+i;parameterNames.forEach(function(param){var value=particleSettings[param];if(typeof value==='function')value=value.call(target,i,count,particleSettings);arrayIterator[param]=value;});};for(var i=0;i<count;i++){_loop6(i);}deferRangeUpload([indexOffset,indexOffset+count]);},syncBufferData:function syncBufferData(_){if(!deferredRanges)return true;deferredRanges.forEach(function(range){return target.uploadRange(range[0]*arrayIterator.stride,range[1]*arrayIterator.stride,arrayIterator.array);});deferredRanges.length=0;}};});factory.declare('gl_context',function(target,options){var gl=target.gl,groups=[];return{get particleSystems(){return groups;},registerParticleSystem:function registerParticleSystem(_ref31){var attributeFormat=_ref31.attributeFormat,bufferFormat=_ref31.bufferFormat,limit=_ref31.limit,shaderSrc=_ref31.shaderSrc;var group=factory.build('particle_system',{ctx:target,format:bufferFormat,limit:limit});var attributeLocations=attributeFormat.reduce(function(attributes,attribute,location){return attributes[attribute.type]=location,attributes;},Object.create(null));shaderSrc.attributeLocations=attributeLocations;var shader=target.compileShader(shaderSrc);var vao=factory.build('vao',{ctx:target}).setup(group,attributeFormat,attributeLocations);shader.uao.rampSampler=0;shader.uao.textureAtlas=1;groups.push({group:group,shader:shader,vao:vao});return groups[groups.length-1];}};});vec3$1.MAX=vec3$1(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);vec3$1.MIN=vec3$1(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);vec3$1.temp=vec3$1();vec3$1.AXIS_X=vec3$1(1,0,0);vec3$1.AXIS_Y=vec3$1(0,1,0);vec3$1.AXIS_Z=vec3$1(0,0,1);vec3$1.ZERO=vec3$1(0);vec3$1.ONE=vec3$1(1);vec3$1.set=function(x,y,z){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:vec3$1();out[0]=x;out[1]=y;out[2]=z;return out;};vec3$1.distanceSquared=function(v){var x=v[0],y=v[1],z=v[2];return x*x+y*y+z*z;};vec3$1.distance=function(v){var x=v[0],y=v[1],z=v[2];return Math.sqrt(x*x+y*y+z*z);};vec3$1.differenceSquared=function(a,b){var dx=a[0]-b[0],dy=a[1]-b[1],dz=a[2]-b[2];return dx*dx+dy*dy+dz*dz;};vec3$1.difference=function(a,b){var dx=a[0]-b[0],dy=a[1]-b[1],dz=a[2]-b[2];return Math.sqrt(dx*dx+dy*dy+dz*dz);};vec3$1.transformMat3=function(v,m){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:vec3$1();var x=v[0],y=v[1],z=v[2];out[0]=m[0]*x+m[1]*y+m[2]*z;out[1]=m[3]*x+m[4]*y+m[5]*z;out[2]=m[6]*x+m[7]*y+m[8]*z;return out;};vec3$1.negate=function(v){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec3$1();out[0]=-v[0];out[1]=-v[1];out[2]=-v[2];return out;};vec3$1.extractTangents=function(normal,tangent,binormal){vec3$1.normalize(normal,binormal);if(Math.abs(binormal[0])<0.9)vec3$1.cross(binormal,vec3$1.AXIS_X,tangent);else vec3$1.cross(binormal,vec3$1.AXIS_Y,tangent);vec3$1.cross(binormal,tangent,binormal);};vec3$1.equals=function(a,b){return Math.abs(a[0]-b[0])<=EPSILON&&Math.abs(a[1]-b[1])<=EPSILON&&Math.abs(a[2]-b[2])<=EPSILON;};vec2.set=function(x,y){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:vec2();out[0]=x;out[1]=y;return out;};mat3.ZERO=mat3(0);mat3.temp=mat3();mat3.scale=function(m,v){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:mat3();var sx=v[0],sy=v[1],sz=v[2];out[0]=sx*m[0];out[1]=sy*m[1];out[2]=sz*m[2];out[3]=sx*m[3];out[4]=sy*m[4];out[5]=sz*m[5];out[6]=sx*m[6];out[7]=sy*m[7];out[8]=sz*m[8];return out;};quat$1.set=function(x,y,z,w){var out=arguments.length>4&&arguments[4]!==undefined?arguments[4]:quat$1();out[0]=x;out[1]=y;out[2]=z;out[3]=w;return out;};quat$1.conjugate=function(q){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:quat$1();out[0]=-q[0];out[1]=-q[1];out[2]=-q[2];out[3]=q[3];return out;};quat$1.invert=function(q){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:quat$1();var x=q[0],y=q[1],z=q[2],w=q[3],lengthSquared=x*x+y*y+z*z+w*w,invLengthSquared=lengthSquared?1/lengthSquared:0;out[0]=invLengthSquared*-x;out[1]=invLengthSquared*-y;out[2]=invLengthSquared*-z;out[3]=invLengthSquared*w;return out;};quat$1.normalizeApproximation=function(q){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:quat$1();var x=q[0],y=q[1],z=q[2],w=q[3],f=(3.0-(x*x+y*y+z*z+w*w))/2.0;out[0]=x*f;out[1]=y*f;out[2]=z*f;out[3]=w*f;return out;};quat$1.temp=quat$1();var Transform={pointToLocalFrame:function pointToLocalFrame(point,position,rotation){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:vec3$1();vec3$1.subtract(point,position,out);quat$1.conjugate(rotation,quat$1.temp);vec3$1.transformQuat(out,quat$1.temp,out);return out;},pointToWorldFrame:function pointToWorldFrame(point,position,rotation){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:vec3$1();vec3$1.transformQuat(point,rotation,out);vec3$1.add(out,position,out);return out;},vectorToLocalFrame:function vectorToLocalFrame(vector,position,rotation){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:vec3$1();quat$1.conjugate(rotation,quat$1.temp);vec3$1.transformQuat(vector,quat$1.temp,out);return out;},vectorToWorldFrame:function vectorToWorldFrame(vector,position,rotation){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:vec3$1();vec3$1.transformQuat(vector,rotation,out);return out;}};var AABB=function AABB(_){return{lowerBound:vec3$1(),upperBound:vec3$1()};};AABB.temp=AABB();AABB.copy=function(aabb){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:AABB();vec3$1.copy(aabb.lowerBound,out.lowerBound);vec3$1.copy(aabb.upperBound,out.upperBound);return out;};AABB.margin=function(aabb,margin){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:AABB();out.lowerBound[0]=aabb.lowerBound[0]-margin;out.lowerBound[1]=aabb.lowerBound[1]-margin;out.lowerBound[2]=aabb.lowerBound[2]-margin;out.upperBound[0]=aabb.upperBound[0]+margin;out.upperBound[1]=aabb.upperBound[1]+margin;out.upperBound[2]=aabb.upperBound[2]+margin;return out;};AABB.extend=function(a,b){var out=arguments.length>2&&arguments[2]!==undefined?arguments[2]:AABB();vec3$1.min(a.lowerBound,b.lowerBound,out.lowerBound);vec3$1.max(a.upperBound,b.upperBound,out.upperBound);return out;};AABB.overlap=function(a,b){var minA=a.lowerBound,maxA=a.upperBound,minB=b.lowerBound,maxB=b.upperBound,overlapX=minB[0]<=maxA[0]&&maxA[0]<=maxB[0]||minA[0]<=maxB[0]&&maxB[0]<=maxA[0],overlapY=minB[1]<=maxA[1]&&maxA[1]<=maxB[1]||minA[1]<=maxB[1]&&maxB[1]<=maxA[1],overlapZ=minB[2]<=maxA[2]&&maxA[2]<=maxB[2]||minA[2]<=maxB[2]&&maxB[2]<=maxA[2];return overlapX&&overlapY&&overlapZ;};AABB.volume=function(aabb){var min=aabb.lowerBound,max=aabb.upperBound;return(max[0]-min[0])*(max[1]-min[1])*(max[2]-min[2]);};AABB.contains=function(outer,inner){var minA=outer.lowerBound,maxA=outer.upperBound,minB=inner.lowerBound,maxB=inner.upperBound;return minA[0]<=minB[0]&&maxB[0]<=maxA[0]&&minA[1]<=minB[1]&&maxB[1]<=maxA[1]&&minA[2]<=minB[2]&&maxB[2]<=maxA[2];};AABB.surfaceArea=function(aabb){var width=aabb.upperBound[0]-aabb.lowerBound[0],height=aabb.upperBound[1]-aabb.lowerBound[1],depth=aabb.upperBound[2]-aabb.lowerBound[2];return 2*(width*(height+depth)+height*depth);};AABB.rayIntersect=function(aabb,ray){var direction=ray._direction,origin=ray.from,lower=aabb.lowerBound,upper=aabb.upperBound,invX=1.0/direction[0],invY=1.0/direction[1],invZ=1.0/direction[2],t0=(lower[0]-origin[0])*invX,t1=(upper[0]-origin[0])*invX,t2=(lower[1]-origin[1])*invY,t3=(upper[1]-origin[1])*invY,t4=(lower[2]-origin[2])*invZ,t5=(upper[2]-origin[2])*invZ,tMax=Math.min(Math.max(t0,t1),Math.max(t2,t3),Math.max(t4,t5));if(tMax<0)return false;var tMin=Math.max(Math.min(t0,t1),Math.min(t2,t3),Math.min(t4,t5));return tMin<=tMax;};var Ray$1=function Ray$1(){var origin=arguments.length>0&&arguments[0]!==undefined?arguments[0]:vec3$1();var target=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec3$1();return{origin:origin,target:target,direction:vec3$1.normalize(vec3$1.subtract(target,origin)),length:vec3$1.difference(target,origin)};};Ray$1.precision=0.0001;Ray$1.computeAABB=function(ray){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:AABB();vec3$1.min(ray.origin,ray.target,out.lowerBound);vec3$1.max(ray.origin,ray.target,out.upperBound);return out;};var IntersectionManifold=function IntersectionManifold(){return{intersectionPoint:vec3$1(),intersectionNormal:vec3$1(),distance:0};};var Raytracer=function Raytracer(world,intersectionDetector){var candidates=[];var intersectionPool=Pool(IntersectionManifold);var rayAABB=AABB();var context={options:{skipBackFaces:true,nearest:false},vec3Pool:null,intersectionPoint:vec3$1(),intersectionNormal:vec3$1(),ray:null,shape:null,body:null,intersectionPoints:[],clear:function clear(){if(context.intersectionPoints.length==0)return;intersectionPool.release.apply(intersectionPool,context.intersectionPoints);context.intersectionPoints.length=0;},registerIntersection:function registerIntersection(){if(context.options.skipBackFaces&&vec3$1.dot(context.intersectionNormal,context.ray.direction)>0)return false;var intersection=void 0,distance=vec3$1.difference(context.ray.origin,context.intersectionPoint);if(context.options.nearest&&context.intersectionPoints[0]){intersection=context.intersectionPoints[0];if(intersection.distance<distance)return false;}else{intersection=intersectionPool.obtain();context.intersectionPoints.push(intersection);}vec3$1.copy(context.intersectionPoint,intersection.intersectionPoint);vec3$1.copy(context.intersectionNormal,intersection.intersectionNormal);intersection.distance=distance;return intersection;}};var worldPosition=vec3$1();var worldRotation=quat$1();return function(ray,options){context.clear();context.ray=ray;Object.assign(context.options,options);var vec3Pool=context.vec3Pool=aquireVec3Pool();Ray$1.computeAABB(ray,rayAABB);candidates.length=0;var bodies=world.broadphase.aabbQuery?world.broadphase.aabbQuery(rayAABB,candidates):world.bodies;for(var i=bodies.length-1;i>=0;i--){var body=context.body=bodies[i];if(body.dynamic)continue;for(var j=body.shapes.length-1;j>=0;j--){quat$1.multiply(body.quaternion,body.shapeOrientations[j],worldRotation);vec3$1.transformQuat(body.shapeOffsets[j],body.quaternion,worldPosition);vec3$1.add(body.position,worldPosition,worldPosition);var shape=context.shape=body.shapes[j];vec3$1.subtract(worldPosition,ray.origin,vec3$1.temp);vec3$1.scale(ray.direction,vec3$1.dot(vec3$1.temp,ray.direction),vec3$1.temp);vec3$1.add(ray.origin,vec3$1.temp,vec3$1.temp);var distance=vec3$1.difference(vec3$1.temp,worldPosition);if(distance>shape.boundingSphereRadius)continue;var intersectMethod=intersectionDetector[shape.type];if(!intersectMethod)continue;intersectMethod.call(null,context,shape,worldPosition,worldRotation,ray);}}vec3Pool.release();return context.intersectionPoints;};};var rayPlane=function rayPlane(context,shape,worldPosition,worldRotation,ray){var intersectionPoint=context.intersectionPoint,intersectionNormal=context.intersectionNormal;var vec3Pool=context.vec3Pool;vec3$1.transformQuat(vec3$1.AXIS_Z,worldRotation,intersectionNormal);var distance=vec3$1.subtract(ray.origin,worldPosition,vec3Pool.obtain());var planeOrigin=vec3$1.dot(intersectionNormal,vec3$1.subtract(ray.origin,worldPosition,vec3$1.temp));var planeTarget=vec3$1.dot(intersectionNormal,vec3$1.subtract(ray.target,worldPosition,vec3$1.temp));if(planeOrigin*planeTarget>0)return false;if(vec3$1.differenceSquared(ray.origin,ray.target)<planeOrigin*planeOrigin)return false;var dot=vec3$1.dot(intersectionNormal,ray.direction);if(Math.abs(dot)<Ray$1.precision)return false;vec3$1.scale(ray.direction,-planeOrigin/dot,intersectionPoint);vec3$1.add(ray.origin,intersectionPoint,intersectionPoint);context.registerIntersection();return true;};var raySphere=function raySphere(context,shape,worldPosition,worldRotation,ray){var intersectionPoint=context.intersectionPoint,intersectionNormal=context.intersectionNormal;var vec3Pool=context.vec3Pool,radius=shape.radius,direction=vec3$1.subtract(ray.target,ray.origin,vec3Pool.obtain()),sphereOrigin=vec3$1.subtract(ray.origin,worldPosition,vec3Pool.obtain());var a=vec3$1.dot(direction,direction);var b=2*vec3$1.dot(direction,sphereOrigin);var c=vec3$1.dot(sphereOrigin,sphereOrigin)-radius*radius;var delta=b*b-4*a*c;if(delta<0)return false;else if(delta===0){vec3$1.lerp(ray.origin,ray.target,delta,intersectionPoint);vec3$1.subtract(intersectionPoint,worldPosition,intersectionNormal);vec3$1.normalize(intersectionNormal,intersectionNormal);context.registerIntersection();return true;}var delta0=(-b-Math.sqrt(delta))/(2*a);if(delta0>=0&&delta0<=1){vec3$1.lerp(ray.origin,ray.target,delta0,intersectionPoint);vec3$1.subtract(intersectionPoint,worldPosition,intersectionNormal);vec3$1.normalize(intersectionNormal,intersectionNormal);context.registerIntersection();}var delta1=(-b+Math.sqrt(delta))/(2*a);if(delta1>=0&&delta1<=1){vec3$1.lerp(ray.origin,ray.target,delta1,intersectionPoint);vec3$1.subtract(intersectionPoint,worldPosition,intersectionNormal);vec3$1.normalize(intersectionNormal,intersectionNormal);context.registerIntersection();}return true;};function pointInTriangle(p,a,b,c){var x0=c[0]-a[0],y0=c[1]-a[1],z0=c[2]-a[2],x1=b[0]-a[0],y1=b[1]-a[1],z1=b[2]-a[2],x2=p[0]-a[0],y2=p[1]-a[1],z2=p[2]-a[2],dot00=x0*x0+y0*y0+z0*z0,dot01=x0*x1+y0*y1+z0*z1,dot02=x0*x2+y0*y2+z0*z2,dot11=x1*x1+y1*y1+z1*z1,dot12=x1*x2+y1*y2+z1*z2;var u=dot11*dot02-dot01*dot12;if(u<0)return false;var v=dot00*dot12-dot01*dot02;if(v<0)return false;return u+v<dot00*dot11-dot01*dot01;}var rayConvex=function rayConvex(context,shape,worldPosition,worldRotation,ray){var intersectionPoint=context.intersectionPoint,intersectionNormal=context.intersectionNormal;var vec3Pool=context.vec3Pool,faces=shape.faces,vertices=shape.vertices,faceNormals=shape.faceNormals,worldVertices=Array(vertices.length);for(var i=vertices.length-1;i>=0;i--){var vertex=worldVertices[i]=vec3Pool.obtain();vec3$1.copy(vertices[i],vertex);vec3$1.transformQuat(vertex,worldRotation,vertex);vec3$1.add(vertex,worldPosition,vertex);}for(var _i17=0;_i17<faces.length;_i17++){var face=faces[_i17];var faceNormal=faceNormals[_i17];vec3$1.transformQuat(faceNormal,worldRotation,intersectionNormal);var dot=vec3$1.dot(ray.direction,intersectionNormal);if(Math.abs(dot)<Ray$1.precision)continue;var vertexA=worldVertices[face[0]];vec3$1.subtract(vertexA,ray.origin,intersectionPoint);var scalar=vec3$1.dot(intersectionNormal,intersectionPoint)/dot;if(scalar<0||scalar>ray.length)continue;vec3$1.scale(ray.direction,scalar,intersectionPoint);vec3$1.add(ray.origin,intersectionPoint,intersectionPoint);for(var f=1;f<face.length-1;f++){var vertexB=worldVertices[face[f]];var vertexC=worldVertices[face[f+1]];if(pointInTriangle(intersectionPoint,vertexA,vertexB,vertexC)||pointInTriangle(intersectionPoint,vertexB,vertexA,vertexC)){context.registerIntersection();break;}}}};var rayBox=function rayBox(context,shape,worldPosition,worldRotation,ray){var intersectionPoint=context.intersectionPoint,intersectionNormal=context.intersectionNormal;var vec3Pool=context.vec3Pool;var halfExtents=shape.halfExtents;var axisX=vec3$1.transformQuat(vec3$1.AXIS_X,worldRotation,vec3Pool.obtain());var axisY=vec3$1.transformQuat(vec3$1.AXIS_Y,worldRotation,vec3Pool.obtain());var axisZ=vec3$1.transformQuat(vec3$1.AXIS_Z,worldRotation,vec3Pool.obtain());var rayOrigin=vec3$1.subtract(ray.origin,worldPosition,vec3Pool.obtain());var rayPlane=vec3Pool.obtain();var dotX=vec3$1.dot(ray.direction,axisX);var dotY=vec3$1.dot(ray.direction,axisY);var dotZ=vec3$1.dot(ray.direction,axisZ);var maxX=-vec3$1.dot(vec3$1.subtract(rayOrigin,vec3$1.scale(axisX,halfExtents[0],rayPlane),rayPlane),axisX)/dotX;var minX=-vec3$1.dot(vec3$1.subtract(rayOrigin,vec3$1.scale(axisX,-halfExtents[0],rayPlane),rayPlane),axisX)/dotX;var maxY=-vec3$1.dot(vec3$1.subtract(rayOrigin,vec3$1.scale(axisY,halfExtents[1],rayPlane),rayPlane),axisY)/dotY;var minY=-vec3$1.dot(vec3$1.subtract(rayOrigin,vec3$1.scale(axisY,-halfExtents[1],rayPlane),rayPlane),axisY)/dotY;var maxZ=-vec3$1.dot(vec3$1.subtract(rayOrigin,vec3$1.scale(axisZ,halfExtents[2],rayPlane),rayPlane),axisZ)/dotZ;var minZ=-vec3$1.dot(vec3$1.subtract(rayOrigin,vec3$1.scale(axisZ,-halfExtents[2],rayPlane),rayPlane),axisZ)/dotZ;if(maxX<0&&minX<0)return false;if(maxY<0&&minY<0)return false;if(maxZ<0&&minZ<0)return false;var minmax=Infinity;var maxmin=-Infinity;planeX:{if(Math.abs(dotX)<Ray$1.precision)break planeX;if(maxX<minX){if(minX<minmax){minmax=minX;}if(maxX>maxmin){maxmin=maxX;vec3$1.copy(axisX,intersectionNormal);}}else{if(maxX<minmax){minmax=maxX;}if(minX>maxmin){maxmin=minX;vec3$1.negate(axisX,intersectionNormal);}}}planeY:{if(Math.abs(dotY)<Ray$1.precision)break planeY;if(maxY<minY){if(minY<minmax){minmax=minY;}if(maxY>maxmin){maxmin=maxY;vec3$1.copy(axisY,intersectionNormal);}}else{if(maxY<minmax){minmax=maxY;}if(minY>maxmin){maxmin=minY;vec3$1.negate(axisY,intersectionNormal);}}}planeZ:{if(Math.abs(dotZ)<Ray$1.precision)break planeZ;if(maxZ<minZ){if(minZ<minmax){minmax=minZ;}if(maxZ>maxmin){maxmin=maxZ;vec3$1.copy(axisZ,intersectionNormal);}}else{if(maxZ<minmax){minmax=maxZ;}if(minZ>maxmin){maxmin=minZ;vec3$1.negate(axisZ,intersectionNormal);}}}if(maxmin>=minmax||maxmin<0)return false;vec3$1.add(ray.origin,vec3$1.scale(ray.direction,maxmin),intersectionPoint);context.registerIntersection();return true;};var SATContext=function SATContext(_){var worldNormalsA=[],worldNormalsB=[],worldVerticesA=[],worldVerticesB=[],clippedVertices=[],connectedFaces=[],contactPoints=[],minmax=vec2();return{vec3Pool:null,worldNormalsA:worldNormalsA,worldNormalsB:worldNormalsB,worldVerticesA:worldVerticesA,worldVerticesB:worldVerticesB,clippedVertices:clippedVertices,connectedFaces:connectedFaces,contactPoints:contactPoints,minmax:minmax,clear:function clear(_){worldNormalsA.length=0;worldNormalsB.length=0;worldVerticesA.length=0;worldVerticesB.length=0;clippedVertices.length=0;connectedFaces.length=0;contactPoints.length=0;},precompute:function precompute(hullA,positionA,rotationA,hullB,positionB,rotationB){var vec3Pool=this.vec3Pool;for(var i=hullA.vertices.length-1;i>=0;i--){var vertex=vec3$1.transformQuat(hullA.vertices[i],rotationA,vec3Pool.obtain());worldVerticesA[i]=vec3$1.add(positionA,vertex,vertex);}for(var _i18=hullB.vertices.length-1;_i18>=0;_i18--){var _vertex=vec3$1.transformQuat(hullB.vertices[_i18],rotationB,vec3Pool.obtain());worldVerticesB[_i18]=vec3$1.add(positionB,_vertex,_vertex);}for(var _i19=hullA.faceNormals.length-1;_i19>=0;_i19--){worldNormalsA[_i19]=vec3$1.transformQuat(hullA.faceNormals[_i19],rotationA,vec3Pool.obtain());}for(var _i20=hullB.faceNormals.length-1;_i20>=0;_i20--){worldNormalsB[_i20]=vec3$1.transformQuat(hullB.faceNormals[_i20],rotationB,vec3Pool.obtain());}}};};var projectConvexAxis=function projectConvexAxis(vertices,origin,axis){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:vec2();var offset=origin?vec3$1.dot(origin,axis):0;var value=void 0,min=Number.MAX_VALUE,max=-Number.MAX_VALUE;for(var i=vertices.length-1;i>=0;i--){value=vec3$1.dot(vertices[i],axis);if(value>max)max=value;if(value<min)min=value;}out[0]=min-offset;out[1]=max-offset;return out;};var testSeparatingAxis=function testSeparatingAxis(context,axis){var dotMaxMin=context.minmax;projectConvexAxis(context.worldVerticesA,0,axis,dotMaxMin);var minA=dotMaxMin[0],maxA=dotMaxMin[1];projectConvexAxis(context.worldVerticesB,0,axis,dotMaxMin);var minB=dotMaxMin[0],maxB=dotMaxMin[1];var d0=maxA-minB,d1=maxB-minA;if(d0<0||d1<0)return false;return d0<d1?d0:d1;};var findSeparatingAxis=function findSeparatingAxis(context,hullA,hullB,worldPositionA,worldPositionB,worldRotationA,worldRotationB,separatingNormal){context.clear();context.precompute(hullA,worldPositionA,worldRotationA,hullB,worldPositionB,worldRotationB);var vec3Pool=context.vec3Pool,faceNormal=vec3Pool.obtain();var minDistance=Number.MAX_VALUE;var axesA=hullA.uniqueAxes||hullA.faceNormals;var axesB=hullB.uniqueAxes||hullB.faceNormals;for(var i=axesA.length-1;i>=0;i--){vec3$1.transformQuat(axesA[i],worldRotationA,faceNormal);var distance=testSeparatingAxis(context,faceNormal);if(distance===false)return false;if(distance>=minDistance)continue;minDistance=distance;vec3$1.copy(faceNormal,separatingNormal);}for(var _i21=axesB.length-1;_i21>=0;_i21--){vec3$1.transformQuat(axesB[_i21],worldRotationB,faceNormal);var _distance=testSeparatingAxis(context,faceNormal);if(_distance===false)return false;if(_distance>=minDistance)continue;minDistance=_distance;vec3$1.copy(faceNormal,separatingNormal);}var edges=[],cross=vec3Pool.obtain(),edge0=vec3Pool.obtain();for(var e0=hullA.uniqueEdges.length-1;e0>=0;e0--){vec3$1.transformQuat(hullA.uniqueEdges[e0],worldRotationA,edge0);for(var e1=hullB.uniqueEdges.length-1;e1>=0;e1--){var edge1=edges[e1]||(edges[e1]=vec3$1.transformQuat(hullB.uniqueEdges[e1],worldRotationB,vec3Pool.obtain()));vec3$1.cross(edge0,edge1,cross);if(vec3$1.equals(cross,vec3$1.ZERO))continue;vec3$1.normalize(cross,cross);var _distance2=testSeparatingAxis(context,cross);if(_distance2===false)return false;if(_distance2>=minDistance)continue;minDistance=_distance2;vec3$1.copy(cross,separatingNormal);}}var delta=vec3$1.subtract(worldPositionB,worldPositionA,vec3Pool.obtain());if(vec3$1.dot(delta,separatingNormal)>0.0)vec3$1.negate(separatingNormal,separatingNormal);return true;};var clipAgainstHull=function clipAgainstHull(context,hullA,positionA,quaternionA,hullB,positionB,quaternionB,separatingNormal,minDistance,maxDistance){var out=arguments.length>10&&arguments[10]!==undefined?arguments[10]:[];var vec3Pool=context.vec3Pool,worldNormalsA=context.worldNormalsA,worldNormalsB=context.worldNormalsB,worldVerticesB=context.worldVerticesB,worldVerticesA=context.worldVerticesA,contactPoints=context.contactPoints;var minDot=Number.MAX_VALUE,maxDot=-Number.MAX_VALUE,minFaceIndex=-1,maxFaceIndex=-1;for(var i=worldNormalsB.length-1;i>=0;i--){var dot=vec3$1.dot(worldNormalsB[i],separatingNormal);if(dot<=maxDot)continue;maxDot=dot;maxFaceIndex=i;}for(var _i22=worldNormalsA.length-1;_i22>=0;_i22--){var _dot=vec3$1.dot(worldNormalsA[_i22],separatingNormal);if(_dot>=minDot)continue;minDot=_dot;minFaceIndex=_i22;}var faceA=hullA.faces[minFaceIndex],faceB=hullB.faces[maxFaceIndex];var clippedVertices=context.clippedVertices;for(var _i23=0;_i23<faceB.length;_i23++){clippedVertices.push(worldVerticesB[faceB[_i23]]);}outer:for(var _i24=0;_i24<hullA.faces.length;_i24++){if(_i24==minFaceIndex)continue;for(var j=0;j<hullA.faces[_i24].length;j++){if(faceA.indexOf(hullA.faces[_i24][j])!=-1){var planeNormal=worldNormalsA[_i24],_planeConstant=-vec3$1.dot(hullA.faceNormals[_i24],hullA.vertices[hullA.faces[_i24][0]]),_planeEquation=_planeConstant-vec3$1.dot(planeNormal,positionA);var outVertices=[];clipFaceAgainstPlane(vec3Pool,clippedVertices,planeNormal,_planeEquation,outVertices);clippedVertices=outVertices;continue outer;}}}var normal=worldNormalsA[minFaceIndex],planeConstant=-vec3$1.dot(hullA.faceNormals[minFaceIndex],hullA.vertices[hullA.faces[minFaceIndex][0]]),planeEquation=planeConstant-vec3$1.dot(normal,positionA);for(var _i25=0;_i25<clippedVertices.length;_i25++){var _depth=vec3$1.dot(normal,clippedVertices[_i25])+planeEquation;if(_depth<=minDistance)_depth=minDistance;if(_depth>maxDistance)continue;if(_depth>0)continue;out.push({point:clippedVertices[_i25],normal:normal,depth:_depth});}return out;};var clipFaceAgainstPlane=function clipFaceAgainstPlane(vec3Pool,vertices,planeNormal,planeConstant){var out=arguments.length>4&&arguments[4]!==undefined?arguments[4]:[];if(vertices.length<2)return out;var prevVertex=vertices[vertices.length-1],prevDot=vec3$1.dot(planeNormal,prevVertex)+planeConstant;for(var length=vertices.length,i=0;i<length;i++){var vertex=vertices[i],dot=vec3$1.dot(planeNormal,vertex)+planeConstant;if(prevDot<0!=dot<0)out.push(vec3$1.lerp(prevVertex,vertex,prevDot/(prevDot-dot),vec3Pool.obtain()));if(dot<0)out.push(vec3$1.copy(vertex,vec3Pool.obtain()));prevVertex=vertex;prevDot=dot;}return out;};var aquireVec3Pool=PoolManager(Pool(function(_){return vec3$1();}));var aquireVec2Pool=PoolManager(Pool(function(_){return vec2();}));function clipFace(interpolateVertex,vertices,plane){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];if(!vertices.length)return out;var size=0.5*Math.abs(vec3.dot(vec3.ONE,plane));function clip(v0,v1){var d0=vec3.dot(v0.position,plane)-size,d1=vec3.dot(v1.position,plane)-size;return v0.index<v1.index?interpolateVertex(v0,v1,d0/(d0-d1)):interpolateVertex(v1,v0,d1/(d1-d0));}for(var i=0;i<vertices.length;i+=3){var d0=vec3.dot(vertices[i+0].position,plane)-size;var d1=vec3.dot(vertices[i+1].position,plane)-size;var d2=vec3.dot(vertices[i+2].position,plane)-size;var v0=d0>0;var v1=d1>0;var v2=d2>0;switch(v0+v1+v2){case 0:out.push(vertices[i+0]);out.push(vertices[i+1]);out.push(vertices[i+2]);break;case 1:if(v0){out.push(vertices[i+1],vertices[i+2],clip(vertices[i+0],vertices[i+1]));out.push(clip(vertices[i+0],vertices[i+2]),out[out.length-1],out[out.length-2]);}else if(v1){out.push(clip(vertices[i+1],vertices[i+0]),vertices[i+2],vertices[i+0]);out.push(out[out.length-2],out[out.length-3],clip(vertices[i+1],vertices[i+2]));}else if(v2){out.push(vertices[i+0],vertices[i+1],clip(vertices[i+2],vertices[i+0]));out.push(clip(vertices[i+2],vertices[i+1]),out[out.length-1],out[out.length-2]);}break;case 2:if(!v0){out.push(vertices[i+0],clip(vertices[i+0],vertices[i+1]),clip(vertices[i+0],vertices[i+2]));}else if(!v1){out.push(vertices[i+1],clip(vertices[i+1],vertices[i+2]),clip(vertices[i+1],vertices[i+0]));}else if(!v2){out.push(vertices[i+2],clip(vertices[i+2],vertices[i+0]),clip(vertices[i+2],vertices[i+1]));}break;case 3:break;}}return out;}factory.declare('gl_context',function(target,options){var gl=target.gl,ctx=target,taskManager=options.manager;var clippingPlanes=[vec3$1(1,0,0),vec3$1(-1,0,0),vec3$1(0,1,0),vec3$1(0,-1,0),vec3$1(0,0,1),vec3$1(0,0,-1)];var enabledPlanes=vec3$1(1,1,1);return{batchDecals:function batchDecals(decals,staticGeometry,dataFormat){var positionD=vec3$1();var positionG=vec3$1();var vertices=[],indices=[],submeshes=[];var indexOffset=0;staticGeometry.forEach(function(geometry){vec3$1.translationFromMat4(geometry.modelMatrix,positionG);decals.forEach(function(decal){vec3$1.translationFromMat4(decal.modelMatrix,positionD);var minDistance=geometry.boundingSphereRadius+decal.boundingSphereRadius;if(vec3$1.differenceSquared(positionG,positionD)>minDistance*minDistance)return false;var mesh=null;taskManager.schedule(function(){mesh=ctx.projectDecal(decal,geometry,dataFormat);});taskManager.schedule(function(){if(!mesh.indices.length)return;submeshes.push({instance:decal,materials:[decal.delegate],delegate:geometry,offset:indices.length,length:mesh.indices.length});indices.push.apply(indices,mesh.indices.map(function(index){return index+indexOffset;}));vertices.push.apply(vertices,mesh.vertices);indexOffset+=mesh.vertexCount;});});});return Signal(function(done){return taskManager.schedule(function(){return done({vertexArray:new Float32Array(vertices),indexArray:new Uint16Array(indices),submeshes:submeshes,dataFormat:dataFormat,stride:dataFormat.reduce(function(total,_ref32){var size=_ref32.size;return total+size;},0)});});});},projectDecal:function projectDecal(decal,geometry,outputDataFormat){var vec3Pool=aquireVec3Pool();var vec2Pool=aquireVec2Pool();var uvBounds=decal.uvBounds||[[0,1],[0,1]];var modelMatrix=decal.modelMatrix;var normalMatrix=mat3.fromMat4(geometry.modelMatrix,mat3());var localMatrix=mat4.invert(modelMatrix,mat4());mat4.multiply(localMatrix,geometry.modelMatrix,localMatrix);var _geometry$delegate$da=geometry.delegate.data.internalData,dataFormat=_geometry$delegate$da.dataFormat,indexArray=_geometry$delegate$da.indexArray,vertexArray=_geometry$delegate$da.vertexArray,stride=_geometry$delegate$da.stride;var vertexCount=vertexArray.length/stride;var offsets=dataFormat.reduce(function(map,format){return Object.assign(map,_defineProperty({},format.type,format.offset));},{});var vertexAttributes=outputDataFormat.reduce(function(map,format){return Object.assign(map,_defineProperty({},format.type,format.type in offsets));},{});var cachedVertices=Array(vertexCount);var insertVertex=function insertVertex(index){return cachedVertices[index]={index:index,position:vec3Pool.obtain(),uv:vec2Pool.obtain(),normal:vertexAttributes.normal&&vec3Pool.obtain(),lm_uv:vertexAttributes.lm_uv&&vec2Pool.obtain()};};var splitVertices=Object.create(null);var interpolateVertex=function interpolateVertex(v0,v1,s){var key=v0.index+"-"+v1.index+"-"+Math.floor(s*1e3);if(key in splitVertices)return cachedVertices[splitVertices[key]];splitVertices[key]=vertexCount;var vertex=insertVertex(vertexCount++);vec3$1.lerp(v0.position,v1.position,s,vertex.position);if(vertex.normal)vec3$1.lerp(v0.normal,v1.normal,s,vertex.normal);if(vertex.lm_uv)vec2.lerp(v0.lm_uv,v1.lm_uv,s,vertex.lm_uv);return vertex;};var vertexList=[];for(var i=0;i<indexArray.length;i+=3){var faceVertices=Array(3);for(var j=0;j<3;j++){var index=indexArray[i+j];if(cachedVertices[index]){faceVertices[j]=cachedVertices[index];continue;}var vertex=insertVertex(index);vec3$1.set(vertexArray[index*stride+offsets.position+0],vertexArray[index*stride+offsets.position+1],vertexArray[index*stride+offsets.position+2],vertex.position);if(vertex.normal)vec3$1.set(vertexArray[index*stride+offsets.normal+0],vertexArray[index*stride+offsets.normal+1],vertexArray[index*stride+offsets.normal+2],vertex.normal);if(vertex.lm_uv)vec2.set(vertexArray[index*stride+offsets.lm_uv+0],vertexArray[index*stride+offsets.lm_uv+1],vertex.lm_uv);vec4.transform(vertex.position,localMatrix,vertex.position);faceVertices[j]=vertex;}if(enabledPlanes[0]){faceVertices=clipFace(interpolateVertex,faceVertices,clippingPlanes[0]);faceVertices=clipFace(interpolateVertex,faceVertices,clippingPlanes[1]);}if(enabledPlanes[1]){faceVertices=clipFace(interpolateVertex,faceVertices,clippingPlanes[2]);faceVertices=clipFace(interpolateVertex,faceVertices,clippingPlanes[3]);}if(enabledPlanes[2]){faceVertices=clipFace(interpolateVertex,faceVertices,clippingPlanes[4]);faceVertices=clipFace(interpolateVertex,faceVertices,clippingPlanes[5]);}vertexList=vertexList.concat(faceVertices);}for(var _i26=cachedVertices.length-1;_i26>=0;_i26--){var _vertex2=cachedVertices[_i26];if(!_vertex2)continue;_vertex2.uv[0]=lerp(uvBounds[0][0],uvBounds[0][1],0.5+_vertex2.position[0]);_vertex2.uv[1]=lerp(uvBounds[1][0],uvBounds[1][1],0.5+_vertex2.position[1]);if(!target.extensions['frag_depth'])_vertex2.position[2]-=1e-3;vec4.transform(_vertex2.position,modelMatrix,_vertex2.position);if(_vertex2.normal)vec3$1.transformMat3(_vertex2.normal,normalMatrix,_vertex2.normal);}var vertices=[];var indices=[];var duplicate=[];var indexOffset=0;for(var _i27=0;_i27<vertexList.length;_i27++){var _vertex3=vertexList[_i27];if(duplicate[_vertex3.index]!=null){indices.push(duplicate[_vertex3.index]);continue;}else{duplicate[_vertex3.index]=indexOffset++;indices.push(duplicate[_vertex3.index]);for(var _j=0;_j<outputDataFormat.length;_j++){var _outputDataFormat$_j=outputDataFormat[_j],type=_outputDataFormat$_j.type,size=_outputDataFormat$_j.size;for(var k=0;k<size;k++){vertices.push(_vertex3[type][k]);}}}}vec2Pool.release();vec3Pool.release();return{vertices:vertices,indices:indices,vertexCount:indexOffset};}};});var billboarded_particle={vert:vglsl.createShader().attribute('vec4','uvLifeTimeFrameStart').attribute('vec4','positionStartTime').attribute('vec4','velocityStartSize').attribute('vec4','accelerationEndSize').attribute('vec4','spinStartSpinSpeed').attribute('vec4','colorMult').varying('vec2','uvPass').varying('float','percentLifePass').varying('vec4','colorPass').uniform('mat4','viewProjectionMatrix').uniform('mat4','invViewMatrix').uniform('mat4','modelMatrix').uniform('vec3','worldVelocity').uniform('vec3','worldAcceleration').uniform('float','timeRange').uniform('float','time').uniform('float','frameDuration').uniform('float','frameCount').main(['vec2 uv = uvLifeTimeFrameStart.xy;','float lifeTime = uvLifeTimeFrameStart.z;','float frameStart = uvLifeTimeFrameStart.w;','vec3 position = positionStartTime.xyz;','float startTime = positionStartTime.w;','vec3 velocity = (modelMatrix * vec4(velocityStartSize.xyz, 0.0)).xyz + worldVelocity;','float startSize = velocityStartSize.w;','vec3 acceleration = (modelMatrix * vec4(accelerationEndSize.xyz, 0)).xyz + worldAcceleration;','float endSize = accelerationEndSize.w;','float spinStart = spinStartSpinSpeed.x;','float spinSpeed = spinStartSpinSpeed.y;','float localTime = mod((time - startTime), timeRange);','float percentLife = localTime / lifeTime;','float frame = mod(floor(localTime / frameDuration + frameStart), frameCount);','float uOffset = frame / frameCount;','float u = uOffset + (uv.x + 0.5) * (1. / frameCount);','vec3 basisX = invViewMatrix[0].xyz;','vec3 basisZ = invViewMatrix[1].xyz;','float size = mix(startSize, endSize, percentLife);','size = (percentLife < 0. || percentLife > 1.) ? 0. : size;','float s = sin(spinStart + spinSpeed * localTime);','float c = cos(spinStart + spinSpeed * localTime);','vec2 rotatedPoint = vec2(uv.x * c + uv.y * s, -uv.x * s + uv.y * c);','vec3 localPosition = vec3(basisX * rotatedPoint.x + basisZ * rotatedPoint.y) * size + velocity * localTime + acceleration * localTime * localTime + position;','uvPass = vec2(u, uv.y + 0.5);','colorPass = colorMult;','percentLifePass = percentLife;','gl_Position = viewProjectionMatrix * vec4(localPosition + modelMatrix[3].xyz, 1.);']),frag:vglsl.createShader().uniform('sampler2D','rampSampler').uniform('sampler2D','textureAtlas').varying('vec2','uvPass').varying('float','percentLifePass').varying('vec4','colorPass').main(['vec4 color = texture2D(rampSampler, vec2(percentLifePass, 0.5)) * colorPass;','gl_FragColor = texture2D(textureAtlas, uvPass) * color;'])};var oriented_particle={vert:vglsl.createShader().attribute('vec4','uvLifeTimeFrameStart').attribute('vec4','positionStartTime').attribute('vec4','velocityStartSize').attribute('vec4','accelerationEndSize').attribute('vec4','spinStartSpinSpeed').attribute('vec4','orientation').attribute('vec4','colorMult').varying('vec2','uvPass').varying('float','percentLifePass').varying('vec4','colorPass').uniform('mat4','viewProjectionMatrix').uniform('mat4','modelMatrix').uniform('vec3','worldVelocity').uniform('vec3','worldAcceleration').uniform('float','timeRange').uniform('float','time').uniform('float','frameDuration').uniform('float','frameCount').main(['vec2 uv = uvLifeTimeFrameStart.xy;','float lifeTime = uvLifeTimeFrameStart.z;','float frameStart = uvLifeTimeFrameStart.w;','vec3 position = positionStartTime.xyz;','float startTime = positionStartTime.w;','vec3 velocity = (modelMatrix * vec4(velocityStartSize.xyz, 0.0)).xyz + worldVelocity;','float startSize = velocityStartSize.w;','vec3 acceleration = (modelMatrix * vec4(accelerationEndSize.xyz, 0)).xyz + worldAcceleration;','float endSize = accelerationEndSize.w;','float spinStart = spinStartSpinSpeed.x;','float spinSpeed = spinStartSpinSpeed.y;','float localTime = mod((time - startTime), timeRange);','float percentLife = localTime / lifeTime;','float frame = mod(floor(localTime / frameDuration + frameStart), frameCount);','float uOffset = frame / frameCount;','float u = uOffset + (uv.x + 0.5) * (1. / frameCount);','float size = mix(startSize, endSize, percentLife);','size = (percentLife < 0. || percentLife > 1.) ? 0. : size;','float s = sin(spinStart + spinSpeed * localTime);','float c = cos(spinStart + spinSpeed * localTime);','vec4 rotatedPoint = vec4((uv.x * c + uv.y * s) * size, 0., (uv.x * s - uv.y * c) * size, 1.);','vec3 center = velocity * localTime + acceleration * localTime * localTime + position;','vec4 q2 = orientation + orientation;','vec4 qx = orientation.xxxw * q2.xyzx;','vec4 qy = orientation.xyyw * q2.xyzy;','vec4 qz = orientation.xxzw * q2.xxzz;','mat4 localMatrix = mat4((1.0 - qy.y) - qz.z, qx.y + qz.w, qx.z - qy.w, 0,','qx.y - qz.w, (1.0 - qx.x) - qz.z, qy.z + qx.w, 0,','qx.z + qy.w, qy.z - qx.w, (1.0 - qx.x) - qy.y, 0,','center.x, center.y, center.z, 1);','rotatedPoint = localMatrix * rotatedPoint;','uvPass = vec2(u, uv.y + 0.5);','colorPass = colorMult;','percentLifePass = percentLife;','gl_Position = viewProjectionMatrix * modelMatrix * rotatedPoint;']),frag:vglsl.createShader().uniform('sampler2D','rampSampler').uniform('sampler2D','textureAtlas').varying('vec2','uvPass').varying('float','percentLifePass').varying('vec4','colorPass').main(['vec4 color = texture2D(rampSampler, vec2(percentLifePass, 0.5)) * colorPass;','gl_FragColor = texture2D(textureAtlas, uvPass) * color;'])};var ParticleEffectPass=function ParticleEffectPass(ctx,scene){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var gl=ctx.gl,particleSystems={billboarded:ctx.registerParticleSystem({attributeFormat:[{type:'uvLifeTimeFrameStart',size:4,byteSize:Float32Array.BYTES_PER_ELEMENT},{type:'positionStartTime',size:4,byteSize:Float32Array.BYTES_PER_ELEMENT},{type:'velocityStartSize',size:4,byteSize:Float32Array.BYTES_PER_ELEMENT},{type:'accelerationEndSize',size:4,byteSize:Float32Array.BYTES_PER_ELEMENT},{type:'spinStartSpinSpeed',size:4,byteSize:Float32Array.BYTES_PER_ELEMENT},{type:'orientation',size:4,byteSize:Float32Array.BYTES_PER_ELEMENT},{type:'colorMult',size:4,byteSize:Float32Array.BYTES_PER_ELEMENT}],bufferFormat:[['lifeTime',0],['frameStart',0],['position',[0,0,0]],['startTime',0],['velocity',[0,0,0]],['startSize',0],['acceleration',[0,0,0]],['endSize',0],['spinStart',0],['spinSpeed',0],[null,[0,0]],['orientation',[0,0,0,0]],['color',[0,0,0,0]]],limit:1024,shaderSrc:billboarded_particle}),oriented:ctx.registerParticleSystem({attributeFormat:[{type:'uvLifeTimeFrameStart',size:4,byteSize:Float32Array.BYTES_PER_ELEMENT},{type:'positionStartTime',size:4,byteSize:Float32Array.BYTES_PER_ELEMENT},{type:'velocityStartSize',size:4,byteSize:Float32Array.BYTES_PER_ELEMENT},{type:'accelerationEndSize',size:4,byteSize:Float32Array.BYTES_PER_ELEMENT},{type:'spinStartSpinSpeed',size:4,byteSize:Float32Array.BYTES_PER_ELEMENT},{type:'orientation',size:4,byteSize:Float32Array.BYTES_PER_ELEMENT},{type:'colorMult',size:4,byteSize:Float32Array.BYTES_PER_ELEMENT}],bufferFormat:[['lifeTime',0],['frameStart',0],['position',[0,0,0]],['startTime',0],['velocity',[0,0,0]],['startSize',0],['acceleration',[0,0,0]],['endSize',0],['spinStart',0],['spinSpeed',0],[null,[0,0]],['orientation',[0,0,0,0]],['color',[0,0,0,0]]],limit:1024,shaderSrc:oriented_particle})};var defaultParticleTexture={loaded:true,data:ctx.generateTexture(generateParticleTexture())},defaultColorRamp={loaded:true,data:ctx.generateTexture(ColorRamp([1,1,1,1],[0,0,0,0]))};scene.addEventListener('particle_emitter',function(instance,emitter){if(emitter.delegate)return true;logger.info('fx',"Initializing ParticleSystem "+emitter.group+" \""+emitter.name+"\".");emitter.texture=emitter.texture||defaultParticleTexture;emitter.colorRamp=emitter.colorRamp?{loaded:true,data:ctx.generateTexture(ColorRamp.apply(undefined,_toConsumableArray(emitter.colorRamp)))}:defaultColorRamp;emitter.delegate=particleSystems[emitter.group].group.createEmitter(emitter);});return function(ctx,scene,next,frame){ctx.depthMask=false;ctx.culling=false;var viewProjectionMatrix=scene.camera.viewProjectionMatrix,invViewMatrix=mat4.invert(scene.camera.viewMatrix,mat4());ctx.particleSystems.forEach(function(particleSystem){var shader=particleSystem.shader,vao=particleSystem.vao,group=particleSystem.group;group.syncBufferData();vao.bind();shader.use();shader.uao.viewProjectionMatrix=viewProjectionMatrix;shader.uao.invViewMatrix=invViewMatrix;group.emitters.forEach(function(emitter){ctx.blendMode=emitter.blendMode;shader.uao.autowire(emitter.attributes);ctx.bindTextures(emitter.material);if(emitter.static)emitter.instances.forEach(function(instance){if(!scene.camera.frustumCulling(instance))return false;shader.uao.modelMatrix=instance.modelMatrix;shader.uao.time=instance.time;shader.uao.update();ctx.drawElements(emitter.bufferLength,emitter.bufferOffset);});else{shader.uao.modelMatrix=emitter.modelMatrix;shader.uao.time=emitter.time;shader.uao.update();ctx.drawElements(emitter.bufferLength,emitter.bufferOffset);}});});ctx.depthMask=true;ctx.blendMode=false;ctx.culling='back';next();};};var liquid={vert:vglsl.createShader().attribute('vec2','uv').uniform('mat4','projectionMatrix').uniform('mat4','viewMatrix').uniform('mat4','invModelMatrix').uniform('vec3','center').varying('vec2','uvPass').varying('vec3','worldPositionPass').varying('vec3','cameraEyePass').varying('vec2','normalizedPass').const('float','infinite','150000.0').const('vec3','groundNormal','vec3(0.0,-1.0,0.0)').function('vec3 interceptPlane(in vec3 source, in vec3 dir, in vec3 normal, float height)',['float distance = (-height - dot(normal, source)) / dot(normal, dir);','if(distance < 0.0) return source + dir * distance;','else return -(vec3(source.x, height, source.z) + vec3(dir.x, height, dir.z) * infinite);']).function('mat3 getRotation()',['return mat3(viewMatrix[0].xyz,viewMatrix[1].xyz,viewMatrix[2].xyz);']).function('vec3 getCameraPosition(in mat3 rotation)',['return - viewMatrix[3].xyz * rotation;']).function('vec2 getImagePlan()',['float focal = projectionMatrix[0].x;','float aspect = projectionMatrix[1].y;','return vec2((uv.x - 0.5) * aspect, (uv.y - 0.5) * focal);']).function('vec3 getCamRay(in mat3 rotation, in vec2 screenUV)',['return vec3(screenUV.x, screenUV.y, projectionMatrix[0].x) * rotation;']).function('vec3 computeProjectedPosition(in float groundHeight)',['mat3 cameraRotation = getRotation();','vec3 camPosition = getCameraPosition(cameraRotation);','cameraEyePass = camPosition;','vec2 screenUV = getImagePlan();','vec3 ray = getCamRay(cameraRotation, screenUV);','vec3 finalPos = interceptPlane(camPosition, ray, groundNormal, groundHeight);','return finalPos;']).main(['uvPass = uv;','float groundHeight = center.y;','vec3 worldPosition = computeProjectedPosition(groundHeight);','normalizedPass = (invModelMatrix * vec4(worldPosition, 1.0)).xz;','worldPositionPass = worldPosition;','gl_Position = projectionMatrix * viewMatrix * vec4(worldPosition, 1.0);']),frag:vglsl.createShader().varying('vec2','uvPass').varying('vec3','worldPositionPass').varying('vec3','cameraEyePass').varying('vec2','normalizedPass').uniform('float','time').uniform('float','height').uniform('float','choppiness').uniform('float','frequency').uniform('vec3','surfaceColor').const('float','PI',Math.PI).const('float','EPSILON',1e-3).const('int','ITERATIONS',3).const('mat2','octave_m','mat2(1.6,1.2,-1.2,1.6)').function('float hash(vec2 p)',['float h = dot(p,vec2(127.1,311.7));','return fract(sin(h)*43758.5453123);']).function('float noise( in vec2 p )',['vec2 i = floor( p );','vec2 f = fract( p );	','vec2 u = f*f*(3.0-2.0*f);','return -1.0+2.0*mix( mix( hash( i + vec2(0.0,0.0) ), ','                 hash( i + vec2(1.0,0.0) ), u.x),','            mix( hash( i + vec2(0.0,1.0) ), ','                 hash( i + vec2(1.0,1.0) ), u.x), u.y);']).function('float diffuse(vec3 n,vec3 l,float p)',['return pow(dot(n,l) * 0.4 + 0.6,p);']).function('float specular(vec3 n,vec3 l,vec3 e,float s)',['float nrm = (s + 8.0) / (PI * 8.0);','return pow(max(dot(reflect(e,n),l),0.0),s) * nrm;']).function('vec3 getSkyColor(vec3 e)',['e.y = max(e.y,0.0);','return vec3(pow(1.0-e.y,2.0), 1.0-e.y, 0.6+(1.0-e.y)*0.4);']).function('float sea_octave(vec2 uv, float choppy)',['uv += noise(uv);','vec2 wv = 1.0-abs(sin(uv));','vec2 swv = abs(cos(uv));','wv = mix(wv,swv,wv);','return pow(1.0-pow(wv.x * wv.y,0.65),choppy);']).function('float map_detailed(vec3 p)',['float freq = frequency;','float amp = height;','float choppy = choppiness;','vec2 uv = p.xz; uv.x *= 0.75;','float d, h = 0.0;','for(int i = 0; i < ITERATIONS; i++){  ','d = sea_octave((uv+time)*freq,choppy);','d += sea_octave((uv-time)*freq,choppy);','h += d * amp;','uv *= octave_m; freq *= 1.9; amp *= 0.22;','choppy = mix(choppy,1.0,0.2);','}','return p.y - h;']).function('vec3 getSeaColor(vec3 p, vec3 n, vec3 l, vec3 eye, vec3 dist)',['float fresnel = clamp(1.0 - dot(n,-eye), 0.0, 1.0);','fresnel = pow(fresnel,3.0) * 0.65;','vec3 reflected = getSkyColor(reflect(eye,n));','vec3 refracted = surfaceColor + diffuse(n,l,80.0) * surfaceColor * 0.12;','vec3 color = mix(refracted,reflected,fresnel);','float atten = max(1.0 - dot(dist,dist) * 0.001, 0.0);','color += surfaceColor * (p.y - height) * 0.18 * atten;','color += vec3(specular(n,l,eye,60.0));','return color;']).function('vec3 getNormal(vec3 p, float eps)',['vec3 n;','n.y = map_detailed(p);','n.x = map_detailed(vec3(p.x+eps,p.y,p.z)) - n.y;','n.z = map_detailed(vec3(p.x,p.y,p.z+eps)) - n.y;','n.y = eps;','return normalize(n);']).main(['vec2 uv = uvPass;','vec3 dir = normalize(vec3(1.0,-1.0,1.0));','vec3 ori = cameraEyePass;','vec3 p = vec3(worldPositionPass.x, 0.0, worldPositionPass.z);','vec3 dist = p - ori;','vec3 n = getNormal(p, dot(dist,dist) * EPSILON * 0.1);','vec3 light = normalize(vec3(0.0,1.0,0.8)); ','vec3 color = getSeaColor(p,n,light,dir,dist);','float opacity = min(1.0, 0.5 + (color.r + color.g + color.b) / 3.0);','float fade = step(0.0, 1.0 - 0.01 * abs(normalizedPass.x)) * step(0.0, 1.0 - 0.01 * abs(normalizedPass.y));','opacity *= fade;','gl_FragColor = vec4(applyFog(pow(color,vec3(0.75))), opacity);'])};function createGridMesh(){var geometry=GridGeometry({columns:64,rows:64,width:1,height:1});var vertices=Array.range(geometry.vertices.length).map(function(index){return[].concat(_toConsumableArray(geometry.uvs[index]));}).flatten();var indices=geometry.indices;return{vertexArray:new Float32Array(vertices),indexArray:new Uint16Array(indices),dataFormat:[{type:'uv',size:2,byteSize:4}]};}var LiquidSurfacePass=function LiquidSurfacePass(ctx,scene){var lightmapping=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var gl=ctx.gl,shader=ctx.compileShader(vglsl.merge(liquid,shaders.fog_exp));var meshData=createGridMesh();var vbo=factory.build('vbo',{ctx:ctx}).staticUpload(meshData.vertexArray,meshData.indexArray);var vao=factory.build('vao',{ctx:ctx}).setup(vbo,meshData.dataFormat);scene.camera.mutation.pipe(function(mutations){if(mutations.projectionMatrix)shader.uao.projectionMatrix=mat4.copy(mutations.projectionMatrix,shader.uao.projectionMatrix);if(mutations.viewMatrix)shader.uao.viewMatrix=mat4.copy(mutations.viewMatrix,shader.uao.viewMatrix);},false);scene.environment.mutation.pipe(function(mutations){if(mutations.fogColor)shader.uao.fogColor=vec3$1.copy(mutations.fogColor,shader.uao.fogColor);if(mutations.fogDensity)shader.uao.fogDensity=mutations.fogDensity;});return function(ctx,scene,next,frame){ctx.culling=false;ctx.depthTest=true;ctx.depthMask=false;ctx.blendMode='blend';var surfaces=scene.surfaces;for(var i=surfaces.length-1;i>=0;i--){var surface=surfaces[i];if(surface.frameFlag!==frame){surface.frameFlag=frame;surface.visible=scene.camera.frustumCulling(surface);}if(!surface.visible)continue;vao.bind();shader.use();shader.uao.center=vec4.transform(vec3$1.ZERO,surface.modelMatrix,shader.uao.center);shader.uao.invModelMatrix=mat4.invert(surface.modelMatrix,shader.uao.invModelMatrix);shader.uao.time=surface.time;shader.uao.height=surface.height;shader.uao.choppiness=surface.choppiness;shader.uao.frequency=surface.frequency;shader.uao.surfaceColor=vec3$1.copy(surface.color,shader.uao.surfaceColor);shader.uao.update();ctx.drawElements(meshData.indexArray.length,0);}next();};};var passes={SkyboxPass:SkyboxPass,StaticGeometryPass:StaticGeometryPass,RealtimeLightingPass:RealtimeLightingPass,SkinnedGeometryPass:SkinnedGeometryPass,DecalGeometryPass:DecalGeometryPass,ParticleEffectPass:ParticleEffectPass,LiquidSurfacePass:LiquidSurfacePass};var calcBoundingSphere=function calcBoundingSphere(vertexData,format){var stride=format.reduce(function(size,attr){return attr.size+size;},0),positionsOffset=format.slice(0,format.findIndex(function(attr){return attr.type==='position';})).reduce(function(size,attr){return attr.size+size;},0);var vertices=vertexData.length/stride,position=vec3$1(),maxRadius=0;while(vertices--){maxRadius=Math.max(vec3$1.sqrtLength(vec3$1.copy([vertexData[vertices*stride],vertexData[vertices*stride+1],vertexData[vertices*stride+2]],position)),maxRadius);}return Math.sqrt(maxRadius);};factory.declare('mesh',function(target,options){var bufferRange=options.bufferRange,armature=options.meshData.armature?factory.build('armature',{bones:options.meshData.armature,animation:options.meshData.animation}):null,materials=options.meshData.materials||[{textures:[],bones:[]}],subMeshes=options.meshData.armature?options.meshData.armature.slice(1).filter(function(subMesh){return subMesh.bufferLength;}).map(function(subMesh,id){return Object.assign(subMesh,{material:materials.find(function(material){return material.bones.indexOf(id+1)>-1;})||materials[0]});}):[{get bufferLength(){return target.totalSize;},bufferOffset:0,material:materials[0]}];return{bufferRange:bufferRange,armature:armature,materials:materials,subMeshes:subMeshes,vboIdx:options.vboIdx,vdfIdx:options.vdfIdx,get totalSize(){return bufferRange.indexArrayLength;},get offset(){return bufferRange.indexArrayOffset;},get vertexDataFormat(){return options.meshData.dataFormat;},boundingSphereRadius:calcBoundingSphere(options.meshData.vertexArray,options.meshData.dataFormat),get internalData(){return options.meshData;}};});var graphics=Object.freeze({GLSL_TYPE_SIZE:GLSL_TYPE_SIZE,GL_GLSL_MAP:GL_GLSL_MAP,GLSL_TYPE_MAP:GLSL_TYPE_MAP,DEFAULT_GLSL_VALUE:DEFAULT_GLSL_VALUE,GLSL_SETTERS:GLSL_SETTERS,GLSL_ARRAY_SETTERS:GLSL_ARRAY_SETTERS,GL_TYPE_SIZE:GL_TYPE_SIZE,MAX_INDEX_ARRAY_LENGTH:MAX_INDEX_ARRAY_LENGTH,ATTRIBUTE_LOCATIONS:ATTRIBUTE_LOCATIONS,ATTRIB_GL_TYPE:ATTRIB_GL_TYPE,MAX_BONES_PER_MESH:MAX_BONES_PER_MESH,compileShader:compileShader,compileShaderProgram:compileShaderProgram,extractShaderAttributes:extractShaderAttributes,preBindAttributes:preBindAttributes,extractShaderUniforms:extractShaderUniforms,Autowire:Autowire,VertexBufferRange:VertexBufferRange,UPLOAD_BATCH_SIZE:UPLOAD_BATCH_SIZE,WRAP_MODE:WRAP_MODE,FILTERING_MODE:FILTERING_MODE,passes:passes,LIGHTMAP_RESOLUTION:LIGHTMAP_RESOLUTION,LIGHTMAP_SCALE_FACTOR:LIGHTMAP_SCALE_FACTOR,calcBoundingSphere:calcBoundingSphere,InterleavedArrayIterator:InterleavedArrayIterator,generateParticleTexture:generateParticleTexture,RangeSampler:RangeSampler,ColorRamp:ColorRamp,ParticleEmitter:ParticleEmitter});var LIGHTMAP_PADDING=2;var generateLightmapUV=function generateLightmapUV(mesh,taskManager){var MAX_BATCH_SIZE=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1024;return Signal(function(done){var vertexArray=mesh.vertexArray,indexArray=mesh.indexArray,polycount=indexArray.length/3,vertexcount=vertexArray.length/mesh.stride,offsets=mesh.dataFormat.reduce(function(attribs,attr){return attribs[attr.type]=attribs.total,attribs.total+=attr.size,attribs;},{total:0}),tempClusterLookup=new Uint16Array(vertexcount),stride=mesh.stride+2,lightmappedArray=new Float32Array(vertexcount*stride),clusters=[],packer=BinPacker(),lightmapResolution=128*LIGHTMAP_RESOLUTION;var clusterCount=0,totalArea=0,padding=0;logger.info('lightmap',"Unwrapping mesh for lightmap. polygons: "+polycount+", vertices: "+vertexcount);var selectCluster=function selectCluster(vertices){return vertices.map(function(idx){return tempClusterLookup[idx];}).filter(function(x){return x;}).sort(function(c0,c1){return clusters[c1-1].length-clusters[c0-1].length;})[0]||++clusterCount;};var transferCluster=function transferCluster(fromIdx,intoIdx){clusters[intoIdx]=clusters[intoIdx].concat(clusters[fromIdx]||[]);clusters[fromIdx].forEach(function(triangle){return triangle.forEach(function(vertIdx){return tempClusterLookup[vertIdx]=intoIdx+1;});});clusters[fromIdx].length=0;};var processTriangle=function processTriangle(index){var triangle=new Uint16Array(indexArray.buffer,indexArray.byteOffset+index*Uint16Array.BYTES_PER_ELEMENT*3,3),clusterIdx=selectCluster(triangle);clusters[clusterIdx-1]=clusters[clusterIdx-1]||[];triangle.forEach(function(vertIdx){var prevClusterIdx=tempClusterLookup[vertIdx];if(prevClusterIdx!==clusterIdx&&prevClusterIdx)transferCluster(prevClusterIdx-1,clusterIdx-1);tempClusterLookup[vertIdx]=clusterIdx;});clusters[clusterIdx-1].push(triangle);};var extractVertex=function extractVertex(vertIndex){return{position:!isNaN(offsets.position)&&new Float32Array(vertexArray.buffer,vertexArray.byteOffset+(vertIndex*offsets.total+offsets.position)*Float32Array.BYTES_PER_ELEMENT,3),uv:!isNaN(offsets.uv)&&new Float32Array(vertexArray.buffer,vertexArray.byteOffset+(vertIndex*offsets.total+offsets.uv)*Float32Array.BYTES_PER_ELEMENT,2)};};var calculateScaleContribution=function calculateScaleContribution(v0,v1){var uvEdge=vec2.subtract(v0.uv,v1.uv),edge=vec3$1.subtract(v0.position,v1.position),uvEdgeLength=vec2.distance(uvEdge),edgeLength=vec3$1.distance(edge),xContrib=Math.abs(uvEdge[0])/uvEdgeLength,yContrib=Math.abs(uvEdge[1])/uvEdgeLength;return vec2(xContrib*edgeLength/uvEdgeLength||0,yContrib*edgeLength/uvEdgeLength||0);};var processCluster=function processCluster(clusterIdx){if(!clusters[clusterIdx].length)return clusters[clusterIdx]=null;var cluster=clusters[clusterIdx],scale=vec2(),vertices=cluster.reduce(function(vertexMap,polygon){vertexMap[polygon[0]]=vertexMap[polygon[0]]||extractVertex(polygon[0]);vertexMap[polygon[1]]=vertexMap[polygon[1]]||extractVertex(polygon[1]);vertexMap[polygon[2]]=vertexMap[polygon[2]]||extractVertex(polygon[2]);vec2.add(scale,calculateScaleContribution(vertexMap[polygon[0]],vertexMap[polygon[1]]),scale);vec2.add(scale,calculateScaleContribution(vertexMap[polygon[0]],vertexMap[polygon[2]]),scale);vec2.add(scale,calculateScaleContribution(vertexMap[polygon[1]],vertexMap[polygon[2]]),scale);return vertexMap;},Object.create(null)),vertexIndices=Object.keys(vertices),lightmapUVs=new Float32Array(vertexIndices.length*2),min=vec2(Number.MAX_VALUE,Number.MAX_VALUE),max=vec2(-Number.MAX_VALUE,-Number.MAX_VALUE);for(var i=0;i<vertexIndices.length;i++){var vertex=vertices[vertexIndices[i]];lightmapUVs[i*2+0]=vertex.uv[0];lightmapUVs[i*2+1]=vertex.uv[1];vec2.min(min,vertex.uv,min);vec2.max(max,vertex.uv,max);}var bounds=vec2.subtract(max,min);vec2.scale(scale,1/cluster.length,scale);vec2.multiply(bounds,scale,bounds);totalArea+=bounds[0]*bounds[1];clusters[clusterIdx]={vertexIndices:vertexIndices,lightmapUVs:lightmapUVs,min:min,scale:scale,bounds:bounds,rect:{w:bounds[0],h:bounds[1]}};};var generateLightmapUV=function generateLightmapUV(clusterIdx){var cluster=clusters[clusterIdx];if(!cluster)return false;cluster.vertexIndices.map(function(idx){return parseInt(idx);}).forEach(function(idx,i){var lmUv=vec2((cluster.lightmapUVs[i*2+0]-cluster.min[0])*cluster.scale[0],(cluster.lightmapUVs[i*2+1]-cluster.min[1])*cluster.scale[1]);lightmappedArray[idx*stride+offsets.total+0]=(lmUv[0]+cluster.rect.fit.x+padding)/packer.root.w;lightmappedArray[idx*stride+offsets.total+1]=(lmUv[1]+cluster.rect.fit.y+padding)/packer.root.h;});};var copyVertexData=function copyVertexData(idx){for(var offset=0;offset<offsets.total;lightmappedArray[idx*stride+offset]=vertexArray[idx*offsets.total+offset++]){}};return taskManager.deferIteration(processTriangle,polycount,0,MAX_BATCH_SIZE).pipe(function(_){return taskManager.deferIteration(processCluster,clusterCount,0,MAX_BATCH_SIZE);}).pipe(function(_){var lightmapScale=Math.sqrt(LIGHTMAP_PADDING*totalArea);padding=lightmapScale/lightmapResolution;return clusters.filter(function(x){return x;}).map(function(cluster){return cluster.rect;}).map(function(block){return block.w+=2*padding,block.h+=2*padding,block;});}).pipe(function(blocks){return packer.insert(blocks);}).pipe(function(_){return taskManager.deferIteration(generateLightmapUV,clusterCount,0,MAX_BATCH_SIZE);}).pipe(function(_){return taskManager.deferIteration(copyVertexData,vertexcount,0,MAX_BATCH_SIZE);}).pipe(function(_){mesh.dataFormat.push({type:'lm_uv',size:2,byteSize:Float32Array.BYTES_PER_ELEMENT,offset:mesh.stride});mesh.stride=stride;mesh.vertexArray=lightmappedArray;mesh.uvBounds={w:packer.root.w,h:packer.root.h};logger.info('lightmap',"Lightmap UVs generated. dimensions: "+packer.root.w+" x "+packer.root.h+" padding: "+padding*128);done();});});};factory.declare('loader',function(target,options){var taskManager=options.manager;target.appendParser(function(loader,resource,next){if(resource.type!==loader.RESOURCE_TYPE.MESH)return next();if(resource.data.dataFormat.find(function(attrib){return attrib.type==='joint'||attrib.type==='lm_uv';}))return next();generateLightmapUV(resource.data,taskManager).listen(next);});});var zlib=Object.create(null);var MAXBITS=0XF;var ENOUGH_LENS=852;var ENOUGH_DISTS=592;var CODES=0;var LENS=1;var DISTS=2;var lbase=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0];var lext=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78];var dbase=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0];var dext=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];var utf8lenTable=function(array){for(var q=0;q<256;q++){array[q]=q>=252?6:q>=248?5:q>=240?4:q>=224?3:q>=192?2:1;}array[254]=array[254]=1;return array;}(new Uint8Array(256));var crcTable=function(array){for(var c,n=0;n<256;array[n]=c,c=++n){for(var k=0;k<8;k++){c=c&1?0xEDB88320^c>>>1:c>>>1;}}return array;}([]);var fixedtables=function(_){var lenfix=null,distfix=null;return function(state){if(!lenfix||!distfix){lenfix=new Int32Array(512);distfix=new Int32Array(32);var sym=0;for(;sym<144;state.lens[sym++]=8){}for(;sym<256;state.lens[sym++]=9){}for(;sym<280;state.lens[sym++]=7){}for(;sym<288;state.lens[sym++]=8){}inflate_table(LENS,state.lens,0,288,lenfix,0,state.work,{bits:9});for(sym=0;sym<32;state.lens[sym++]=5){}inflate_table(DISTS,state.lens,0,32,distfix,0,state.work,{bits:5});}state.lencode=lenfix;state.lenbits=9;state.distcode=distfix;state.distbiys=5;};}();var HEAD=1;var FLAGS=2;var TIME=3;var OS=4;var EXLEN=5;var EXTRA=6;var NAME=7;var COMMENT=8;var HCRC=9;var DICTID=10;var DICT=11;var TYPE=12;var TYPEDO=13;var STORED=14;var COPY_=15;var COPY=16;var TABLE=17;var LENLENS=18;var CODELENS=19;var LEN_=20;var LEN=21;var LENEXT=22;var DIST=23;var DISTEXT=24;var MATCH=25;var LIT=26;var CHECK=27;var LENGTH=28;var DONE=29;var BAD=30;var MEM=31;var SYNC=32;var Z_NO_FLUSH=0;var Z_SYNC_FLUSH=2;var Z_FINISH=4;var Z_BLOCK=5;var Z_TREES=6;var Z_OK=0;var Z_STREAM_END=1;var Z_NEED_DICT=2;var Z_STREAM_ERROR=-2;var Z_DATA_ERROR=-3;var Z_MEM_ERROR=-4;var Z_BUF_ERROR=-5;var Z_DEFLATED=8;zlib.flattenChunks=function(chunks){var idx=chunks.length,bufferLength=0,offset=0;while(idx--){bufferLength+=chunks[idx].length;}var buffer=new Uint8Array(bufferLength);for(var i=0;i<chunks.length;i++){var chunk=chunks[i];buffer.set(chunk,offset);offset+=chunk.length;}return buffer;};zlib.stringToBuffer=function(string){var idx=string.length;var buffer=new Uint8Array(idx);while(idx--){buffer[idx]=string.charCodeAt(idx);}return buffer;};zlib.arraySet=function(output,src,src_offset,length,output_offset){if(src.subarray&&output.subarray)return output.set(src.subarray(src_offset,src_offset+length),output_offset);for(var i=0;i<length;output[output_offset+i]=src[input_offset+i++]){}return output;};zlib.adler32=function(adler,buffer,length,offset){var s1=adler&0xFFFF|0,s2=adler>>>16&0xFFFF|0,n=0;while(length!==0){n=length>2000?2000:length;length-=n;do{s1=s1+buffer[offset++]|0;s2=s2+s1|0;}while(--n);s1%=0xFFF1;s2%=0xFFF1;}return s1|s2<<16|0;};zlib.crc32=function(crc,buffer,length,offset){var t=crcTable,end=offset+length;crc^=-1;for(var i=offset;i<end;i++){crc=crc>>>8^t[(crc^buffer[i])&0xFF];}return crc^-1;};zlib.shrinkBuffer=function(buffer,size){if(buffer.length===size)return buffer;if(buffer.subarray)return buffer.subarray(0,size);return buffer.length=size,buffer;};zlib.utf8border=function(buffer,max){max=Math.min(max||buffer.length,buffer.length);var offset=max-1;while(offset>=0&&(buffer[offset--]&0xC0)===0x80){}if(offset<=0)return max;return offset+utf8lenTable[buffer[offset]]>max?offset:max;};zlib.zswap32=function(q){return(q>>>24&0xff)+(q>>>8&0xff00)+((q&0xff00)<<8)+((q&0xff)<<24);};var Inflator=function Inflator(options){var target=Object.create(null);options=Object.assign({chunkSize:0x4000,windowBits:0,to:''},options||{});if(options.raw&&options.windowBits>=0&&options.windowBits<0x10)options.windowBits=options.windowBits?-options.windowBits:-0x0F;else if(!options.windowBits)options.windowBits+=0x20;if(options.windowBits>0x0F&&options.windowBits<0x30&&options.windowBits&0x0F===0)options.windowBits|=0x0F;var stream=ZStream(),state=InflateState(),header=GZHeader(),chunks=[];stream.state=state;state.head=header;state.wrap=options.windowBits<0?0:(options.windowBits>>4)+1;state.wbits=options.windowBits<0?-options.windowBits:options.windowBits<0x30?options.windowBits&0x0F:options.windowBits;if(state.wbits&&(state.wbits<8||state.wbits>15))throw new Error('Invalid stream window bit size');if(state.wrap&0x02===0)throw new Error('Invalid wrap mode');stream.adler=state.wrap?state.wrap&0x01:0;state.mode=HEAD;state.lencode=state.lendyn=new Int32Array(ENOUGH_LENS);state.distcode=state.distdyn=new Int32Array(ENOUGH_DISTS);return Object.assign(target,{options:options,chunks:chunks,header:header,stream:stream,onComplete:function onComplete(_){return null;},onError:function onError(_){return null;},done:false,onData:function onData(chunk){return chunks.push(chunk);},onEnd:function onEnd(status){var done=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;target.done=done;if(status===Z_OK)target.onComplete(target.result=zlib.flattenChunks(chunks));else target.onError(status,stream.msg);chunks.length=0;},consume:Inflator.consume.bind(target,target)});};Inflator.consume=function(target,data,mode){var stream=target.stream,chunkSize=target.options.chunkSize,dictionary=target.options.dictionary;var status=void 0,next_out_utf8=void 0,tail=void 0,utf8str=void 0,allowBufError=false;if(target.done)return false;mode=mode===~~mode?mode:mode?Z_FINISH:Z_NO_FLUSH;stream.input=typeof data==='string'&&zlib.stringToBuffer(data)||toString.call(data)==='[object ArrayBuffer]'&&new Uint8Array(data)||data;stream.next_in=0;stream.avail_in=stream.input.length;do{if(!stream.avail_out){stream.output=new Uint8Array(chunkSize);stream.next_out=0;stream.avail_out=chunkSize;}status=zlib.inflate(stream,Z_NO_FLUSH);if(status===Z_NEED_DICT&&dictionary)console.warn('inflate from dictionary not implemented');if(status===Z_BUF_ERROR&&allowBufError)status=(allowBufError=false,Z_OK);if(status!==Z_STREAM_END&&status!==Z_OK)return target.onEnd(status,true),false;if(stream.next_out&&(!stream.avail_out||status===Z_STREAM_END||!stream.avail_in&&(mode===Z_FINISH||mode===Z_SYNC_FLUSH)))target.onData(zlib.shrinkBuffer(stream.output,stream.next_out));if(!stream.avail_in&&!stream.avail_out)allowBufError=true;}while((stream.avail_in>0||!stream.avail_out)&&status!==Z_STREAM_END);if(mode===Z_FINISH||status===Z_STREAM_END){stream.state=null;return target.onEnd(Z_OK,true),true;}else if(mode===Z_SYNC_FLUSH){target.onEnd(Z_OK);stream.avail_out=0;}return true;};var ZStream=function ZStream(_){return{input:null,next_in:0,avail_in:0,total_in:0,output:null,next_out:0,avail_out:0,total_out:0,msg:'',state:null,data_type:2,adler:0};};var GZHeader=function GZHeader(_){return{text:0,time:0,xflags:0,os:0,extra:null,extra_len:0,name:'',comment:'',hcrc:0,done:false};};var InflateState=function InflateState(_){return{mode:0,last:0,wrap:0,havedict:0,flags:0,dmax:32768,check:0,total:0,head:null,wbits:0,wsize:0,whave:0,wnext:0,window:null,hold:0,bits:0,length:0,offset:0,extra:0,lencode:null,distcode:null,lenbits:0,distbits:0,ncode:0,nlen:0,ndist:0,have:0,next:null,lens:new Uint16Array(320),work:new Uint16Array(288),lendyn:null,distdyn:null,sane:1,back:-1,was:0};};zlib.inflate=function(stream,flush){var state=stream.state,input=stream.input,output=stream.output,put=stream.next_out,left=stream.avail_out,next=stream.next_in,have=stream.avail_in,hold=state.hold,bits=state.bits,order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],hbuf=new Uint8Array(4),here=0,_in=have,_out=left,ret=Z_OK,copy=void 0,from=void 0,from_source=void 0,here_bits=void 0,here_op=void 0,here_val=void 0,last_bits=void 0,last_op=void 0,last_val=void 0,len=void 0,opts=void 0,n=void 0;if(!stream||!stream.state||!stream.output||!stream.input&&stream.avail_in!==0)return Z_STREAM_ERROR;if(state.mode===TYPE)state.mode=TYPEDO;inf_leave:while(1){switch(state.mode){case HEAD:if(!state.wrap){state.mode=TYPEDO;break;}while(bits<16){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}if(state.wrap&2&&hold===0x8b1f){state.check=0;hbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=zlib.crc32(state.check,hbuf,2,0);hold=0;bits=0;state.mode=FLAGS;break;}state.flags=0;if(state.head)state.head.done=false;if(!(state.wrap&1)||(((hold&0xff)<<8)+(hold>>8))%31){stream.msg='incorrect header check';state.mode=BAD;break;}if((hold&0x0f)!==Z_DEFLATED){stream.msg='unknown compression method';state.mode=BAD;break;}hold>>>=4;bits-=4;len=(hold&0x0f)+8;if(state.wbits===0)state.wbits=len;else if(len>state.wbits){stream.msg='invalid window size';state.mode=BAD;break;}state.dmax=1<<len;stream.adler=state.check=1;state.mode=hold&0x200?DICTID:TYPE;hold=0;bits=0;break;case FLAGS:while(bits<16){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}state.flags=hold;if((state.flags&0xff)!==Z_DEFLATED){stream.msg='unknown compression method';state.mode=BAD;break;}if(state.flags&0xe000){stream.msg='unknown header flags set';state.mode=BAD;break;}if(state.head)state.head.text=hold>>8&1;if(state.flags&0x0200){hbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=zlib.crc32(state.check,hbuf,2,0);}hold=0;bits=0;state.mode=TIME;case TIME:while(bits<32){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}if(state.head)state.head.time=hold;if(state.flags&0x0200){hbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;hbuf[2]=hold>>>16&0xff;hbuf[3]=hold>>>24&0xff;state.check=zlib.crc32(state.check,hbuf,4,0);}hold=0;bits=0;state.mode=OS;case OS:while(bits<16){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}if(state.head){state.head.xflags=hold&0xff;state.head.os=hold>>8;}if(state.flags&0x0200){hbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);}hold=0;bits=0;state.mode=EXLEN;case EXLEN:if(state.flags&0x0400){while(bits<16){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}state.length=hold;if(state.head)state.head.extra_len=hold;if(state.flags&0x0200){hbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=zlib.crc32(state.check,hbuf,2,0);}hold=0;bits=0;}else if(state.head)state.head.extra=null;state.mode=EXTRA;case EXTRA:if(state.flags&0x0400){copy=state.length;if(copy>have)copy=have;if(copy){if(state.head){len=state.head.extra_len-state.length;if(!state.head.extra)state.head.extra=new Array(state.head.extra_len);zlib.arraySet(state.head.extra,input,next,copy,len);}if(state.flags&0x0200)state.check=zlib.crc32(state.check,input,copy,next);have-=copy;next+=copy;state.length-=copy;}if(state.length)break inf_leave;}state.length=0;state.mode=NAME;case NAME:if(state.flags&0x0800){if(have===0)break inf_leave;copy=0;do{len=input[next+copy++];if(state.head&&len&&state.length<65536)state.head.name+=String.fromCharCode(len);}while(len&&copy<have);if(state.flags&0x0200)state.check=zlib.crc32(state.check,input,copy,next);have-=copy;next+=copy;if(len)break inf_leave;}else if(state.head)state.head.name=null;state.length=0;state.mode=COMMENT;case COMMENT:if(state.flags&0x1000){if(have===0)break inf_leave;copy=0;do{len=input[next+copy++];if(state.head&&len&&state.length<65536)state.head.comment+=String.fromCharCode(len);}while(len&&copy<have);if(state.flags&0x0200)state.check=zlib.crc32(state.check,input,copy,next);have-=copy;next+=copy;if(len)break inf_leave;}else if(state.head)state.head.comment=null;state.mode=HCRC;case HCRC:if(state.flags&0x0200){while(bits<16){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}if(hold!==(state.check&0xffff)){stream.msg='header crc mismatch';state.mode=BAD;break;}hold=0;bits=0;}if(state.head){state.head.hcrc=state.flags>>9&1;state.head.done=true;}stream.adler=state.check=0;state.mode=TYPE;break;case DICTID:while(bits<32){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}stream.adler=state.check=zlib.zswap32(hold);hold=0;bits=0;state.mode=DICT;case DICT:if(state.havedict===0){stream.next_out=put;stream.avail_out=left;stream.next_in=next;stream.avail_in=have;state.hold=hold;state.bits=bits;return Z_NEED_DICT;}stream.adler=state.check=1;state.mode=TYPE;case TYPE:if(flush===Z_BLOCK||flush===Z_TREES)break inf_leave;case TYPEDO:if(state.last){hold>>>=bits&7;bits-=bits&7;state.mode=CHECK;break;}while(bits<3){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}state.last=hold&0x01;hold>>>=1;bits-=1;switch(hold&0x03){case 0:state.mode=STORED;break;case 1:fixedtables(state);state.mode=LEN_;if(flush===Z_TREES){hold>>>=2;bits-=2;break inf_leave;}break;case 2:state.mode=TABLE;break;case 3:stream.msg='invalid block type';state.mode=BAD;}hold>>>=2;bits-=2;break;case STORED:hold>>>=bits&7;bits-=bits&7;while(bits<32){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}if((hold&0xffff)!==(hold>>>16^0xffff)){stream.msg='invalid stored block lengths';state.mode=BAD;break;}state.length=hold&0xffff;hold=0;bits=0;state.mode=COPY_;if(flush===Z_TREES)break inf_leave;case COPY_:state.mode=COPY;case COPY:copy=state.length;if(copy){if(copy>have)copy=have;if(copy>left)copy=left;if(copy===0)break inf_leave;zlib.arraySet(output,input,next,copy,put);have-=copy;next+=copy;left-=copy;put+=copy;state.length-=copy;break;}state.mode=TYPE;break;case TABLE:while(bits<14){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}state.nlen=(hold&0x1f)+257;hold>>>=5;bits-=5;state.ndist=(hold&0x1f)+1;hold>>>=5;bits-=5;state.ncode=(hold&0x0f)+4;hold>>>=4;bits-=4;if(state.nlen>286||state.ndist>30){stream.msg='too many length or distance symbols';state.mode=BAD;break;}state.have=0;state.mode=LENLENS;case LENLENS:while(state.have<state.ncode){while(bits<3){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}state.lens[order[state.have++]]=hold&0x07;hold>>>=3;bits-=3;}while(state.have<19){state.lens[order[state.have++]]=0;}state.lencode=state.lendyn;state.lenbits=7;opts={bits:state.lenbits};ret=inflate_table(CODES,state.lens,0,19,state.lencode,0,state.work,opts);state.lenbits=opts.bits;if(ret){stream.msg='invalid code lengths set';state.mode=BAD;break;}state.have=0;state.mode=CODELENS;case CODELENS:while(state.have<state.nlen+state.ndist){while(1){here=state.lencode[hold&(1<<state.lenbits)-1];here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(here_bits<=bits)break;if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}if(here_val<16){hold>>>=here_bits;bits-=here_bits;state.lens[state.have++]=here_val;}else{if(here_val===16){n=here_bits+2;while(bits<n){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}hold>>>=here_bits;bits-=here_bits;if(state.have===0){stream.msg='invalid bit length repeat';state.mode=BAD;break;}len=state.lens[state.have-1];copy=3+(hold&0x03);hold>>>=2;bits-=2;}else if(here_val===17){n=here_bits+3;while(bits<n){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}hold>>>=here_bits;bits-=here_bits;len=0;copy=3+(hold&0x07);hold>>>=3;bits-=3;}else{n=here_bits+7;while(bits<n){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}hold>>>=here_bits;bits-=here_bits;len=0;copy=11+(hold&0x7f);hold>>>=7;bits-=7;}if(state.have+copy>state.nlen+state.ndist){stream.msg='invalid bit length repeat';state.mode=BAD;break;}while(copy--){state.lens[state.have++]=len;}}}if(state.mode===BAD)break;if(state.lens[256]===0){stream.msg='invalid code -- missing end-of-block';state.mode=BAD;break;}state.lenbits=9;opts={bits:state.lenbits};ret=inflate_table(LENS,state.lens,0,state.nlen,state.lencode,0,state.work,opts);state.lenbits=opts.bits;if(ret){stream.msg='invalid literal/lengths set';state.mode=BAD;break;}state.distbits=6;state.distcode=state.distdyn;opts={bits:state.distbits};ret=inflate_table(DISTS,state.lens,state.nlen,state.ndist,state.distcode,0,state.work,opts);state.distbits=opts.bits;if(ret){stream.msg='invalid distances set';state.mode=BAD;break;}state.mode=LEN_;if(flush===Z_TREES)break inf_leave;case LEN_:state.mode=LEN;case LEN:if(have>=6&&left>=258){stream.next_out=put;stream.avail_out=left;stream.next_in=next;stream.avail_in=have;state.hold=hold;state.bits=bits;inflate_fast(stream,_out);put=stream.next_out;output=stream.output;left=stream.avail_out;next=stream.next_in;input=stream.input;have=stream.avail_in;hold=state.hold;bits=state.bits;if(state.mode===TYPE)state.back=-1;break;}state.back=0;while(1){here=state.lencode[hold&(1<<state.lenbits)-1];here_bits=here>>>24;here_op=here>>>16&0xFF;here_val=here&0xFFFF;if(here_bits<=bits)break;if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}if(here_op&&(here_op&0xf0)===0){last_bits=here_bits;last_op=here_op;last_val=here_val;while(1){here=state.lencode[last_val+((hold&(1<<last_bits+last_op)-1)>>last_bits)];here_bits=here>>>24;here_op=here>>>16&0xFF;here_val=here&0xFFFF;if(last_bits+here_bits<=bits)break;if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}hold>>>=last_bits;bits-=last_bits;state.back+=last_bits;}hold>>>=here_bits;bits-=here_bits;state.back+=here_bits;state.length=here_val;if(here_op===0){state.mode=LIT;break;}if(here_op&32){state.back=-1;state.mode=TYPE;break;}if(here_op&64){stream.msg='invalid literal/length code';state.mode=BAD;break;}state.extra=here_op&15;state.mode=LENEXT;case LENEXT:if(state.extra){n=state.extra;while(bits<n){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}state.length+=hold&(1<<state.extra)-1;hold>>>=state.extra;bits-=state.extra;state.back+=state.extra;}state.was=state.length;state.mode=DIST;case DIST:while(1){here=state.distcode[hold&(1<<state.distbits)-1];here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(here_bits<=bits)break;if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}if((here_op&0xf0)===0){last_bits=here_bits;last_op=here_op;last_val=here_val;while(1){here=state.distcode[last_val+((hold&(1<<last_bits+last_op)-1)>>last_bits)];here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(last_bits+here_bits<=bits)break;if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}hold>>>=last_bits;bits-=last_bits;state.back+=last_bits;}hold>>>=here_bits;bits-=here_bits;state.back+=here_bits;if(here_op&64){stream.msg='invalid distance code';state.mode=BAD;break;}state.offset=here_val;state.extra=here_op&15;state.mode=DISTEXT;case DISTEXT:if(state.extra){n=state.extra;while(bits<n){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}state.offset+=hold&(1<<state.extra)-1;hold>>>=state.extra;bits-=state.extra;state.back+=state.extra;}if(state.offset>state.dmax){stream.msg='invalid distance too far back';state.mode=BAD;break;}state.mode=MATCH;case MATCH:if(left===0)break inf_leave;copy=_out-left;if(state.offset>copy){copy=state.offset-copy;if(copy>state.whave&&state.sane){stream.msg='invalid distance too far back';state.mode=BAD;break;}if(copy>state.wnext){copy-=state.wnext;from=state.wsize-copy;}else from=state.wnext-copy;if(copy>state.length)copy=state.length;from_source=state.window;}else{from_source=output;from=put-state.offset;copy=state.length;}if(copy>left)copy=left;left-=copy;state.length-=copy;do{output[put++]=from_source[from++];}while(--copy);if(state.length===0)state.mode=LEN;break;case LIT:if(left===0)break inf_leave;output[put++]=state.length;left--;state.mode=LEN;break;case CHECK:if(state.wrap){while(bits<32){if(have===0)break inf_leave;have--;hold|=input[next++]<<bits;bits+=8;}_out-=left;stream.total_out+=_out;state.total+=_out;if(_out)stream.adler=state.check=state.flags?zlib.crc32(state.check,output,_out,put-_out):zlib.adler32(state.check,output,_out,put-_out);_out=left;if((state.flags?hold:zlib.zswap32(hold))!==state.check){stream.msg='incorrect data check';state.mode=BAD;break;}hold=0;bits=0;}state.mode=LENGTH;case LENGTH:if(state.wrap&&state.flags){while(bits<32){if(have===0)break inf_leave;have--;hold+=input[next++]<<bits;bits+=8;}if(hold!==(state.total&0xffffffff)){stream.msg='incorrect length check';state.mode=BAD;break;}hold=0;bits=0;}state.mode=DONE;case DONE:ret=Z_STREAM_END;break inf_leave;case BAD:ret=Z_DATA_ERROR;break inf_leave;case MEM:return Z_MEM_ERROR;case SYNC:default:return Z_STREAM_ERROR;}}stream.next_out=put;stream.avail_out=left;stream.next_in=next;stream.avail_in=have;state.hold=hold;state.bits=bits;if(state.wsize||_out!==stream.avail_out&&state.mode<BAD&&(state.mode<CHECK||flush!==Z_FINISH))if(updatewindow(stream,stream.output,stream.next_out,_out-stream.avail_out))return state.mode=MEM,Z_MEM_ERROR;_in-=stream.avail_in;_out-=stream.avail_out;stream.total_in+=_in;stream.total_out+=_out;state.total+=_out;if(state.wrap&&_out){stream.adler=state.check=state.flags?zlib.crc32(state.check,output,_out,stream.next_out-_out):zlib.adler32(state.check,output,_out,stream.next_out-_out);}stream.data_type=state.bits+(state.last?64:0)+(state.mode===TYPE?128:0)+(state.mode===LEN_||state.mode===COPY_?256:0);if((_in===0&&_out===0||flush===Z_FINISH)&&ret===Z_OK)return Z_BUF_ERROR;return ret;};var inflate_table=function inflate_table(type,lens,lens_index,codes,table,table_index,work,options){var bits=options.bits,len=0,sym=0,min=0,max=0,curr=0,drop=0,left=1,used=0,huff=0,incr=void 0,fill=void 0,low=void 0,mask=void 0,next=void 0,base=null,base_index=0,end=void 0,count=new Uint16Array(MAXBITS+1),offs=new Uint16Array(MAXBITS+1),extra=null,extra_index=0,here_bits=void 0,here_op=void 0,here_val=void 0;for(len=0;len<=MAXBITS;count[len++]=0){}for(sym=0;sym<codes;count[lens[lens_index+sym++]]++){}for(max=MAXBITS;max>=0;max--){if(count[max]!==0)break;}if(max===0){table[table_index++]=1<<24|64<<16|0;table[table_index++]=1<<24|64<<16|0;options.bits=1;return 0;}for(min=1;min<max;min++){if(count[min]!==0)break;}var root=Math.max(Math.min(bits,max),min);for(len=1;len<=MAXBITS;len++){if((left=(left<<1)-count[len])<0)return-1;}if(left>0&&(type===CODES||max!==1))return-1;offs[1]=0;for(len=1;len<MAXBITS;offs[len+1]=offs[len]+count[len++]){}for(sym=0;sym<codes;sym++){if(lens[lens_index+sym]!==0)work[offs[lens[lens_index+sym]]++]=sym;}if(type===CODES){base=extra=work;end=19;}else if(type===LENS){base=lbase;base_index-=257;extra=lext;extra_index-=257;end=256;}else{base=dbase;extra=dext;end=-1;}sym=0;len=min;next=table_index;curr=root;low=-1;used=1<<root;mask=used-1;if(type===LENS&&used>ENOUGH_LENS||type===DISTS&&used>ENOUGH_DISTS)return 1;while(1){here_bits=len-drop;if(work[sym]<end){here_op=0;here_val=work[sym];}else if(work[sym]>end){here_op=extra[extra_index+work[sym]];here_val=base[base_index+work[sym]];}else{here_op=32+64;here_val=0;}incr=1<<len-drop;fill=1<<curr;min=fill;do{fill-=incr;table[next+(huff>>drop)+fill]=here_bits<<24|here_op<<16|here_val|0;}while(fill);incr=1<<len-1;while(huff&incr){incr>>=1;}huff=incr!==0?(huff&incr-1)+incr:0;sym++;if(--count[len]===0){if(len===max)break;len=lens[lens_index+work[sym]];}if(len>root&&(huff&mask)!==low){drop=drop||root;next+=min;curr=len-drop;left=1<<curr;while(curr+drop<max){left-=count[curr+drop];if(left<=0)break;curr++;left<<=1;}used+=1<<curr;if(type===LENS&&used>ENOUGH_LENS||type===DISTS&&used>ENOUGH_DISTS)return 1;low=huff&mask;table[low]=root<<24|curr<<16|next-table_index|0;}}if(huff)table[next+huff]=len-drop<<24|64<<16|0;options.bits=root;return 0;};var inflate_fast=function inflate_fast(stream,start){var state=stream.state,_in=stream.next_in,input=stream.input,last=_in+(stream.avail_in-5),_out=stream.next_out,output=stream.output,beg=_out-(start-stream.avail_out),end=_out+(stream.avail_out-257),dmax=state.dmax,wsize=state.wsize,whave=state.whave,wnext=state.wnext,s_window=state.window,hold=state.hold,bits=state.bits,lcode=state.lencode,dcode=state.distcode,lmask=(1<<state.lenbits)-1,dmask=(1<<state.distbits)-1,here=void 0,op=void 0,len=void 0,dist=void 0,from=void 0,from_source=void 0;top:do{if(bits<15){hold+=input[_in++]<<bits;bits+=8;hold+=input[_in++]<<bits;bits+=8;}here=lcode[hold&lmask];dolen:while(1){op=here>>>24;hold>>>=op;bits-=op;op=here>>>16&0xFF;if(op===0)output[_out++]=here&0xFFFF;else if(op&16){len=here&0xFFFF;op&=15;if(op){if(bits<op){hold+=input[_in++]<<bits;bits+=8;}len+=hold&(1<<op)-1;hold>>>=op;bits-=op;}if(bits<15){hold+=input[_in++]<<bits;bits+=8;hold+=input[_in++]<<bits;bits+=8;}here=dcode[hold&dmask];dodist:while(1){op=here>>>24;hold>>>=op;bits-=op;op=here>>>16&0xFF;if(op&16){dist=here&0xFFFF;op&=15;if(bits<op){hold+=input[_in++]<<bits;bits+=8;if(bits<op){hold+=input[_in++]<<bits;bits+=8;}}dist+=hold&(1<<op)-1;if(dist>dmax){stream.msg='invalid distance too far back';state.mode=BAD;break top;}hold>>>=op;bits-=op;op=_out-beg;if(dist>op){op=dist-op;if(op>whave&&state.sane){stream.msg='invalid distance too far back';state.mode=BAD;break top;}from=0;from_source=s_window;if(wnext===0){from+=wsize-op;if(op<len){len-=op;do{output[_out++]=s_window[from++];}while(--op);from=_out-dist;from_source=output;}}else if(wnext<op){from+=wsize+wnext-op;op-=wnext;if(op<len){len-=op;do{output[_out++]=s_window[from++];}while(--op);from=0;if(wnext<len){op=wnext;len-=op;do{output[_out++]=s_window[from++];}while(--op);from=_out-dist;from_source=output;}}}else{from+=wnext-op;if(op<len){len-=op;do{output[_out++]=s_window[from++];}while(--op);from=_out-dist;from_source=output;}}while(len>2){output[_out++]=from_source[from++];output[_out++]=from_source[from++];output[_out++]=from_source[from++];len-=3;}if(len){output[_out++]=from_source[from++];if(len>1)output[_out++]=from_source[from++];}}else{from=_out-dist;do{output[_out++]=output[from++];output[_out++]=output[from++];output[_out++]=output[from++];len-=3;}while(len>2);if(len){output[_out++]=output[from++];if(len>1)output[_out++]=output[from++];}}}else if((op&64)===0){here=dcode[(here&0xffff)+(hold&(1<<op)-1)];continue dodist;}else{stream.msg='invalid distance code';state.mode=BAD;break top;}break;}}else if((op&64)===0){here=lcode[(here&0xffff)+(hold&(1<<op)-1)];continue dolen;}else if(op&32){state.mode=TYPE;break top;}else{stream.msg='invalid literal/length code';state.mode=BAD;break top;}break;}}while(_in<last&&_out<end);len=bits>>3;_in-=len;bits-=len<<3;hold&=(1<<bits)-1;stream.next_in=_in;stream.next_out=_out;stream.avail_in=_in<last?5+(last-_in):5-(_in-last);stream.avail_out=_out<end?257+(end-_out):257-(_out-end);state.hold=hold;state.bits=bits;};var updatewindow=function updatewindow(stream,src,end,copy){var state=stream.state;if(state.window===null){state.wsize=1<<state.wbits;state.wnext=0;state.whave=0;state.window=new Uint8Array(state.wsize);}if(copy>=state.wsize){zlib.arraySet(state.window,src,end-state.wsize,state.wsize,0);state.wnext=0;state.whave=state.wsize;}else{var dist=state.wsize-state.wnext;if(dist>copy)dist=copy;zlib.arraySet(state.window,src,end-copy,dist,state.wnext);copy-=dist;if(copy){zlib.arraySet(state.window,src,end-copy,copy,0);state.wnext=copy;state.whave=state.wsize;}else{state.wnext+=dist;if(state.wnext===state.wsize)state.wnext=0;if(state.whave<state.wsize)state.whave+=dist;}}return 0;};zlib.Inflator=Inflator;var defaultTaskManager={schedule:function schedule(task){return task();}};var PNGDecoder=Object.create(null);PNGDecoder.process=function(buffer){var taskManager=arguments.length>1&&arguments[1]!==undefined?arguments[1]:defaultTaskManager;return PNGDecoder.decode(buffer,taskManager).pipe(function(ctx){return PNGDecoder.inflate(ctx);}).pipe(function(ctx){return PNGDecoder.readInterlace(ctx);}).pipe(function(ctx){return PNGDecoder.toRGBA8(ctx);});};PNGDecoder.inflate=function(target){return Signal(function(resolve,reject){var inflator=zlib.Inflator(),rawData=target.out.data,rawDataLength=rawData.length,taskManager=target.taskManager,maxChunkSize=1024*16;inflator.onComplete=function(_){return target.out.data=inflator.result,resolve(target);};inflator.onError=function(code,message){return reject(new Error("Inflator exception "+code+": \""+message+"\""));};for(var offset=0;offset<rawDataLength;offset+=maxChunkSize){taskManager.schedule(inflator.consume.bind(inflator,new Uint8Array(rawData.buffer,rawData.byteOffset+offset,Math.min(maxChunkSize,rawDataLength-offset)),offset+maxChunkSize>=rawDataLength));}});};PNGDecoder.toRGBA8=function(target){return Signal(function(resolve,reject){var width=target.out.width,height=target.out.height,area=width*height,pixelByteSize=target.channels*target.out.depth,bytesPerPixel=pixelByteSize,bytesPerLine=Math.ceil(width*bytesPerPixel/8),stream=PNGDecoder.stream,bin=PNGDecoder.bin,taskManager=target.taskManager,chunkMaxSize=1024*16*16*10,buffer=new Uint8Array(area*4),uint32View=new Uint32Array(buffer.buffer),src=target.out.data,colorType=target.out.colorType,depth=target.out.depth;var processor=void 0,totalArea=area;if(colorType===6){totalArea=area<<2;if(depth===8)processor=stream.copy.bind(null,buffer,0,src,0);else if(depth===16)processor=stream.iterateChunk.bind(null,function(i){return buffer[i]=src[i++<<1];});}else if(colorType===2){var trns=target.out.transparency,tR=trns?trns[0]:-1,tG=trns?trns[1]:-1,tB=trns?trns[2]:-1;if(depth===8)processor=stream.iterateChunk.bind(null,function(i){var qi=i<<2,i3=i*3;buffer[qi]=src[i3];buffer[qi+1]=src[i3+1];buffer[qi+2]=src[i3+2];buffer[qi+3]=trns&&src[i3]===tR&&src[i3+1]===tG&&src[i3+2]===tB?0:0xFF;});else if(depth===16)processor=stream.iterateChunk.bind(null,function(i){var qi=i<<2,i6=i*6;buffer[qi]=src[i6];buffer[qi+1]=src[i6+2];buffer[qi+2]=src[i6+4];buffer[qi+3]=trns&&bin.readShort(src,i6)===tR&&bin.readShort(src,i6+2)===tG&&bin.readShort(src,i6+4)===tB?0:0xFF;});}else if(colorType===3){var palette=target.out.palette,alpha=target.out.transparency,_trns=alpha?alpha.length:0;if(depth===8)processor=stream.iterateChunk.bind(null,function(i){var qi=i<<2,c=src[i],p=3*c;buffer[qi]=palette[p];buffer[qi+1]=palette[p+1];buffer[qi+2]=palette[p+2];buffer[qi+3]=c<_trns?alpha[c]:0xFF;});}else if(colorType===4){if(depth===8)processor=stream.iterateChunk.bind(null,function(i){var qi=i<<2,ii=i<<1,grey=src[ii];buffer[qi]=buffer[qi+1]=buffer[qi+2]=grey;buffer[qi+3]=src[ii+1];});else if(depth===16)processor=stream.iterateChunk.bind(null,function(i){var qi=i<<2,grey=src[qi];buffer[qi]=buffer[qi+1]=buffer[qi+2]=grey;buffer[qi+3]=src[ii+2];});}else if(colorType===0){var _trns2=target.out.transparency||-1;if(depth===1)processor=stream.iterateChunk.bind(null,function(i){var grey=0xFF*(src[i>>3]>>0x07-(i&0x07)&0x01),alpha=grey===_trns2*0xFF?0:0xFF;uint32View[i]=alpha<<24|grey<<16|grey<<8|grey;});else if(depth===2)processor=stream.iterateChunk.bind(null,function(i){var grey=0x55*(src[i>>2]>>0x06-((i&0x03)<<1)&0x03),alpha=grey===_trns2*0x55?0:0xFF;uint32View[i]=alpha<<24|grey<<16|grey<<8|grey;});else if(depth===4)processor=stream.iterateChunk.bind(null,function(i){var grey=0x11*(src[i>>1]>>0x04-((i&0x01)<<2)&0x0F),alpha=grey===_trns2*0x11?0:0xFF;uint32View[i]=alpha<<24|grey<<16|grey<<8|grey;});else if(depth===8)processor=stream.iterateChunk.bind(null,function(i){var grey=src[i],alpha=grey===_trns2?0:0xFF;uint32View[i]=alpha<<24|grey<<16|grey<<8|grey;});else if(depth===16)processor=stream.iterateChunk.bind(null,function(i){var grey=src[i<<1],alpha=bin.readUshort(src,i<<1)===_trns2?0:0xFF;uint32View[i]=alpha<<24|grey<<16|grey<<8|grey;});}for(var execOffset=0;execOffset<totalArea;execOffset+=chunkMaxSize){taskManager.schedule(stream.processChunk.bind(null,processor,Math.min(chunkMaxSize,totalArea-execOffset),execOffset));}taskManager.schedule(function(_){return target.out.data=buffer,resolve(target);});});};PNGDecoder.decode=function(buffer,taskManager){return Signal(function(resolve,reject){var data=new Uint8Array(buffer),bitmapData=new Uint8Array(data.length),out={data:bitmapData},bin=PNGDecoder.binary,stream=PNGDecoder.stream,readChunkMaxSize=1024*8;var offset=8,bitmapOffset=0;var parseChunk={'IHDR':function IHDR(o){out.width=bin.readUint(data,o);o+=4;out.height=bin.readUint(data,o);o+=4;out.depth=data[o++];out.colorType=data[o++];out.compress=data[o++];out.filter=data[o++];out.interlace=data[o++];},'IDAT':function IDAT(o,l){var processor=stream.copy.bind(null,bitmapData,bitmapOffset,data,o);for(var readOffset=0;readOffset<l;readOffset+=readChunkMaxSize){taskManager.schedule(stream.processChunk.bind(null,processor,Math.min(readChunkMaxSize,l-readOffset),readOffset));}bitmapOffset+=l;},'pHYs':function pHYs(o){return out.pixelDimensions={x:bin.readUint(data,o),y:bin.readUint(data,o+4),unit:data[o+8]};},'cHRM':function cHRM(o){return out.chromaticies=Array(4).fill().map(function(_,i){return{x:bin.readUint(data,o+i*4)/100000.0,y:bin.readUint(data,o+i*4+4)/100000.0};});},'tEXt':function tEXt(o,l){},'iTXt':function iTXt(o,l){},'PLTE':function PLTE(o,l){return out.palette=bin.readBytes(data,o,l);},'hIST':function hIST(o){return out.paletteHistogram=Array(Math.floor(out.palette.length/3)).fill().map(function(_,i){return bin.readUshort(data,o+i*2);});},'tRNS':function tRNS(o,l){return out.transparency=out.colorType===3&&bin.readBytes(data,o,l)||out.colorType===2&&[bin.readUshort(data,o),bin.readUshort(data,o+2),bin.readUshort(data,o+4)]||out.colorType===0&&bin.readUshort(data,o)||null;},'gAMA':function gAMA(o){return out.colorGamma=bin.readUint(data,o)/100000.0;},'sRGB':function sRGB(o){return out.rgbColorSpace=data[o];},'bKGD':function bKGD(o){return out.backgrounColor=(out.colorType===0||out.colorType===4)&&[bin.readUshort(data,o)]||(out.colorType===2||out.colorType===6)&&[bin.readUshort(data,o),bin.readUshort(data,o+2),bin.readUshort(data,o+4)]||out.colorType===3&&data[o];},'IEND':function IEND(_){if(out.compress!==0)reject(new Error('Unsupported compression method'));if(out.filter!==0)reject(new Error('Unsupported filter method'));return'END';},default:function _default(_,length,type){return null;}};var read=function read(_){var length=bin.readUint(data,offset);offset+=4;var type=bin.readASCII(data,offset,4);offset+=4;var end=(parseChunk[type]||parseChunk.default)(offset,length,type)==='END';offset+=length;var crc=bin.readUint(data,offset);offset+=4;!end?taskManager.schedule(read):resolve({taskManager:taskManager,out:out,get alpha(){return out.colorType===4||out.colorType===6;},get channels(){return[1,null,3,1,2,null,4][out.colorType];}});};taskManager.schedule(read);});};PNGDecoder.readInterlace=function(target){return Signal(function(resolve,reject){var buffer=target.out.data,width=target.out.width,height=target.out.height,pixelByteSize=target.channels*target.out.depth,interlace=target.out.interlace,stream=PNGDecoder.stream,taskManager=target.taskManager,chunkMaxSize=1024*8;if(interlace===0)return PNGDecoder.filterZero(buffer,0,width,height,pixelByteSize,taskManager).pipe(function(data){return target.out.data=data,resolve(target);});var bytesPerPixel=pixelByteSize,colorBytesPerPixel=bytesPerPixel>>3,bytesPerLine=Math.ceil(width*bytesPerPixel/8),outputBuffer=new Uint8Array(height*bytesPerLine),rowBegin=[0,0,4,0,2,0,1],colBegin=[0,4,0,2,0,1,0],rowStep=[8,8,8,4,4,2,2],colStep=[8,8,4,4,2,2,1];var inputOffset=0;var writeInterlace=bytesPerPixel===1&&function(row,col,ci){return outputBuffer[row*bytesPerLine+(col>>3)]|=(buffer[ci>>3]>>0x07-(ci&0x07)&0x01)<<0x07-((col&0x03)<<0);}||bytesPerPixel===2&&function(row,col,ci){return outputBuffer[row*bytesPerLine+(col>>2)]|=(buffer[ci>>3]>>0x06-(ci&0x07)&0x03)<<0x06-((col&0x03)<<1);}||bytesPerPixel===4&&function(row,col,ci){return outputBuffer[row*bytesPerLine+(col>>1)]|=(buffer[ci>>3]>>0x04-(ci&0x07)&0x0F)<<0x04-((col&0x01)<<2);}||bytesPerPixel>=8&&function(row,col,ci){var wOffset=row*bytesPerLine+col*colorBytesPerPixel;for(var i=0;i<colorBytesPerPixel;outputBuffer[wOffset+i]=buffer[(ci>>3)+i++]){}};var processInterlace=function processInterlace(write,subWidth,subHeight,rb,cb,rs,cs,bytesPerSubLine,offset,i){var r=Math.floor(i/subWidth),c=i%subWidth,row=rb+r*rs,col=cb+c*cs,ci=(offset+r*bytesPerSubLine<<3)+c*bytesPerPixel;write(row,col,ci);};var interlacePass=function interlacePass(pass){var rs=rowStep[pass],cs=colStep[pass],rb=rowBegin[pass],cb=colBegin[pass],subWidth=Math.ceil((width-cb)/cs),subHeight=Math.ceil((height-rb)/rs),subArea=subWidth*subHeight,bytesPerSubLine=Math.ceil(subWidth*bytesPerPixel/8),processor=stream.iterateChunk.bind(null,processInterlace.bind(null,writeInterlace,subWidth,subHeight,rb,cb,rs,cs,bytesPerSubLine,inputOffset));PNGDecoder.decode.filterZero(buffer,inputOffset,subWidth,subHeight,pixelByteSize,taskManager);for(var execOffset=0;execOffset<subArea;execOffset+=chunkMaxSize){taskManager.schedule(stream.processChunk.bind(null,processor,Math.min(chunkMaxSize,subArea-execOffset),execOffset));}inputOffset+=subArea!==0?subHeight*(1+bytesPerSubLine):0;};for(var i=0;i<7;taskManager.schedule(interlacePass.bind(null,i++))){}taskManager.schedule(function(_){return target.out.data=outputBuffer,resolve(target);});});};PNGDecoder.filterZero=function(buffer,offset,width,height,pixelByteSize,taskManager){return Signal(function(resolve,reject){var bytesPerLine=Math.ceil(width*pixelByteSize/8),bytesPerPixel=Math.ceil(pixelByteSize/8),bytesHalfLine=bytesPerLine-bytesPerPixel,chunkMaxSize=1024*8,stream=PNGDecoder.stream;var processRow=function processRow(row){var outputOffset=offset+row*bytesPerLine,inputOffset=outputOffset+row+1,type=buffer[inputOffset-1];var exec0=null,exec1=null;if(type===0)exec0=stream.copy.bind(null,buffer,outputOffset,buffer,inputOffset);else if(type===1){exec0=stream.copy.bind(null,buffer,outputOffset,buffer,inputOffset);exec1=stream.merge.bind(null,buffer,outputOffset+bytesPerPixel,buffer,inputOffset+bytesPerPixel,outputOffset,NaN,0);}else if(row===0){exec0=stream.copy.bind(null,buffer,outputOffset,buffer,inputOffset);if(type===2)exec1=stream.copy.bind(null,buffer,outputOffset+bytesPerPixel,buffer,inputOffset+bytesPerPixel);else if(type===3)exec1=stream.merge.bind(null,buffer,outputOffset+bytesPerPixel,buffer,inputOffset+bytesPerPixel,outputOffset,NaN,1);else if(type===4)exec1=stream.paeth.bind(null,buffer,outputOffset+bytesPerPixel,buffer,outputOffset,NaN,NaN);}else{if(type===2)exec0=stream.merge.bind(null,buffer,outputOffset,buffer,inputOffset,outputOffset-bytesPerLine,NaN,0);else if(type===3){exec0=stream.merge.bind(null,buffer,outputOffset,buffer,inputOffset,outputOffset-bytesPerLine,NaN,1);exec1=stream.merge.bind(null,buffer,outputOffset+bytesPerPixel,buffer,inputOffset+bytesPerPixel,outputOffset+bytesPerPixel-bytesPerLine,outputOffset,1);}else if(type===4){exec0=stream.paeth.bind(null,buffer,outputOffset,buffer,inputOffset,NaN,outputOffset-bytesPerLine,NaN);exec1=stream.paeth.bind(null,buffer,outputOffset+bytesPerPixel,buffer,inputOffset+bytesPerPixel,outputOffset,outputOffset+bytesPerPixel-bytesPerLine,outputOffset-bytesPerLine);}}var exec0Length=exec1?bytesPerPixel:bytesPerLine,exec1Length=exec1?bytesHalfLine:0;for(var execOffset=0;execOffset<exec0Length;execOffset+=chunkMaxSize){taskManager.schedule(stream.processChunk.bind(null,exec0,Math.min(chunkMaxSize,exec0Length-execOffset),execOffset));}if(exec1)for(var _execOffset=0;_execOffset<exec1Length;_execOffset+=chunkMaxSize){taskManager.schedule(stream.processChunk.bind(null,exec1,Math.min(chunkMaxSize,exec1Length-_execOffset),_execOffset));}if(row===height-1)taskManager.schedule(function(_){return resolve(buffer);});};for(var r=0;r<height;taskManager.schedule(processRow.bind(null,r++))){}});};PNGDecoder.decode.paeth=function(a,b,c){var p=a+b-c,pa=Math.abs(p-a),pb=Math.abs(p-b),pc=Math.abs(p-c);return pa<=pb&&pa<=pc?a:pb<=pc?b:c;};PNGDecoder.stream={copy:function copy(output,outputOffset,input,inputOffset,length){var offset=arguments.length>5&&arguments[5]!==undefined?arguments[5]:0;for(var i=offset;i<length;output[outputOffset+i]=input[inputOffset+i++]&0xFF){}},merge:function merge(output,outputOffset,input,inputOffset1,inputOffset2,inputOffset3,shift,length){var offset=arguments.length>8&&arguments[8]!==undefined?arguments[8]:0;if(!isNaN(inputOffset3))for(var i=offset;i<length;output[outputOffset+i]=input[inputOffset1+i]+(input[inputOffset2+i]+input[inputOffset3+i++]>>shift)&0xFF){}else if(shift)for(var _i28=offset;_i28<length;output[outputOffset+_i28]=input[inputOffset1+_i28]+(input[inputOffset2+_i28++]>>shift)&0xFF){}else for(var _i29=offset;_i29<length;output[outputOffset+_i29]=input[inputOffset1+_i29]+input[inputOffset2+_i29++]&0xFF){}},paeth:function paeth(output,outputOffset,input,inputOffset1,paethInOffset1,paethInOffset2,paethInOffset3,length){var offset=arguments.length>8&&arguments[8]!==undefined?arguments[8]:0;var paeth=PNGDecoder.decode.paeth;if(isNaN(paethInOffset1))for(var i=offset;i<length;output[outputOffset+i]=input[inputOffset1+i]+paeth(0,input[paethInOffset2+i++],0)&0xFF){}else if(isNaN(paethInOffset2))for(var _i30=offset;_i30<length;output[outputOffset+_i30]=input[inputOffset1+_i30]+paeth(input[paethInOffset1+_i30++],0,0)&0xFF){}else for(var _i31=offset;_i31<length;output[outputOffset+_i31]=input[inputOffset1+_i31]+paeth(input[paethInOffset1+_i31],input[paethInOffset2+_i31],input[paethInOffset3+_i31++])&0xFF){}},processChunk:function processChunk(processor,length){var offset=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;return processor(offset+length,offset);},iterateChunk:function iterateChunk(processor,length,offset){for(var i=offset;i<length;processor(i++)){}}};PNGDecoder.binary={readUint:function readUint(buffer,offset){return buffer[offset]<<24|buffer[offset+1]<<16|buffer[offset+2]<<8|buffer[offset+3];},readUshort:function readUshort(buffer,offset){return buffer[offset]<<8|buffer[offset+1];},readASCII:function readASCII(buffer,offset,length){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'';for(var i=0;i<length;out+=String.fromCharCode(buffer[offset+i++])){}return out;},readBytes:function readBytes(buffer,offset,length){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];for(var i=0;i<length;out.push(buffer[offset+i++])){}return out;},nextByte:function nextByte(buffer,offset){var byte=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;while(buffer[offset++]!=byte){}return offset-1;},pad:function pad(n){var minLength=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2;return(Array(minLength).fill('0').join('')+n).substr(n.length+minLength-Math.max(n.length,minLength));},readUTF8:function readUTF8(buffer,offset,length){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'';var str='';for(var i=0;i<length;str+='%'+PNGDecoder.binary.pad(buffer[offset+i++].toString(16))){}try{return window.decodeURIComponent(str);}catch(e){return PNGDecoder.binary.readASCII(buffer,offset,length);}},writeUshort:function writeUshort(buffer,offset,value){buffer[offset]=value>>8&0xFF;buffer[offset+1]=value&0xFF;},writeUint:function writeUint(buffer,offset,value){buffer[offset]=value>>24&0xFF;buffer[offset+1]=value>>16&0xFF;buffer[offset+2]=value>>8&0xFF;buffer[offset+3]=value&0xFF;},writeASCII:function writeASCII(buffer,offset,str){for(var i=0;i<str.length;buffer[offset+i]=str.charCodeAt(i++)){}}};factory.declare('loader',function(target,options){target.RESOURCE_TYPE.TEXTURE='texture';target.appendParser(function(loader,resource,next){if(resource.extension!=='png')return next();PNGDecoder.process(resource.data,loader.taskManager).listen(function(data){return next({data:data,type:loader.RESOURCE_TYPE.TEXTURE});});});});factory.declare('loader',function(target,options){target.RESOURCE_TYPE.AUDIO='audio';target.appendParser(function(loader,resource,next){if(resource.extension!=='mp3')return next();next({data:resource.data,type:loader.RESOURCE_TYPE.AUDIO});});});var resources=Object.freeze({cache:cache,zlib:zlib,PNGDecoder:PNGDecoder});function unlockAudio(audioCtx){function unlock(){window.removeEventListener('mousedown',unlock);window.removeEventListener('touchend',unlock);audioCtx.resume();}window.addEventListener('mousedown',unlock);window.addEventListener('touchend',unlock);}factory.declare('audio_context',function(target,options){var audioCtx=new(window.AudioContext||window.webkitAudioContext)();var scene=options.scene;unlockAudio(audioCtx);scene.addEventListener('audio_source',function(instance,buffer){var context={audio:audioCtx,nodes:[]};var procedures=target.components.map(function(initialize){return initialize(context);});function update(){for(var i=procedures.length-1;i>=0;i--){procedures[i](instance);}}instance.onCleanup(function(){procedures.length=0;context.nodes.forEach(function(node){return node.disconnect();});context.nodes.length=0;context.audio=context.buffer=null;});buffer.loadEvent.pipe(function(){if(!context.audio)return;context.buffer=buffer.data;instance.mutation.attach(update,null,false);update();});});return{ctx:audioCtx,set pause(value){if(audioCtx.state==='running'&&value)audioCtx.suspend();else if(audioCtx.state!=='running'&&!value)audioCtx.resume();},uploadAudioBuffer:function uploadAudioBuffer(audioData){return Signal(function(done){return audioCtx.decodeAudioData(audioData,function(buffer){return done(buffer);});});},components:[]};});factory.declare('audio_context',function(target,options){var audioCtx=target.ctx;var masterGain=audioCtx.createGain();if(options.compressor){var compressor=audioCtx.createDynamicsCompressor();compressor.threshold.value=10;compressor.ratio.value=20;compressor.reduction.value=-20;masterGain.connect(compressor);compressor.connect(audioCtx.destination);}else{masterGain.connect(audioCtx.destination);}target.components.push(function(context){context.gainNode=context.audio.createGain();context.volume=1;context.nodes.unshift(context.gainNode);context.gainNode.connect(masterGain);return function update(instance){if(instance.volume==context.volume)return;context.volume=instance.volume;context.gainNode.gain.setValueAtTime(context.volume,context.audio.currentTime);};});});function updateListenerCoordinates(audioCtx,position,forward,up){if(audioCtx.listener.positionX&&audioCtx.listener.forwardX){audioCtx.listener.positionX.setValueAtTime(position[0],audioCtx.currentTime);audioCtx.listener.positionY.setValueAtTime(position[1],audioCtx.currentTime);audioCtx.listener.positionZ.setValueAtTime(position[2],audioCtx.currentTime);audioCtx.listener.forwardX.setValueAtTime(forward[0],audioCtx.currentTime);audioCtx.listener.forwardY.setValueAtTime(forward[1],audioCtx.currentTime);audioCtx.listener.forwardZ.setValueAtTime(forward[2],audioCtx.currentTime);audioCtx.listener.upX.setValueAtTime(up[0],audioCtx.currentTime);audioCtx.listener.upY.setValueAtTime(up[1],audioCtx.currentTime);audioCtx.listener.upZ.setValueAtTime(up[2],audioCtx.currentTime);}else{audioCtx.listener.setPosition(position[0],position[1],position[2]);audioCtx.listener.setOrientation(forward[0],forward[1],forward[2],up[0],up[1],up[2]);}}function updateEmitterCoordinates(audioCtx,pannerNode,position,orientation){if(pannerNode.positionX&&pannerNode.orientationX){pannerNode.positionX.setValueAtTime(position[0],audioCtx.currentTime);pannerNode.positionY.setValueAtTime(position[1],audioCtx.currentTime);pannerNode.positionZ.setValueAtTime(position[2],audioCtx.currentTime);pannerNode.orientationX.setValueAtTime(orientation[0],audioCtx.currentTime);pannerNode.orientationY.setValueAtTime(orientation[1],audioCtx.currentTime);pannerNode.orientationZ.setValueAtTime(orientation[2],audioCtx.currentTime);}else{pannerNode.setPosition(position[0],position[1],position[2]);pannerNode.setOrientation(orientation[0],orientation[1],orientation[2]);}}factory.declare('audio_context',function(target,options){var audioCtx=target.ctx;var scene=options.scene;var listener={position:vec3$1(0,0,0),up:vec3$1(0,1,0),forward:vec3$1(0,0,-1)};scene.camera.mutation.pipe(function(mutations){if(!mutations.viewMatrix)return;var _scene$camera=scene.camera,position=_scene$camera.position,rotationMatrix=_scene$camera.rotationMatrix;vec3$1.copy(position,listener.position);listener.forward[0]=-rotationMatrix[2];listener.forward[1]=-rotationMatrix[6];listener.forward[2]=-rotationMatrix[10];listener.up[0]=-rotationMatrix[1];listener.up[1]=-rotationMatrix[5];listener.up[2]=-rotationMatrix[9];updateListenerCoordinates(audioCtx,listener.position,listener.forward,listener.up);});target.components.push(function(context){context.position=vec3$1(0,0,0);context.orientation=vec3$1(1,0,0);context.pannerNode=context.audio.createPanner();Object.assign(context.pannerNode,{panningModel:'equalpower',distanceModel:'exponential',refDistance:1,maxDistance:10000,rolloffFactor:1,coneInnerAngle:360,coneOuterAngle:0,coneOuterGain:0});context.pannerNode.connect(context.nodes[0]);context.nodes.unshift(context.pannerNode);return function update(instance){vec3$1.translationFromMat4(instance.modelMatrix,context.position);updateEmitterCoordinates(context.audio,context.pannerNode,context.position,context.orientation);};});});function initializeAudioSource(context){context.sourceNode=context.audio.createBufferSource();context.sourceNode.buffer=context.buffer;context.sourceNode.playbackRate.value=context.rate;context.sourceNode.loop=context.loop;context.sourceNode.loopStart=0;context.sourceNode.loopEnd=context.buffer.duration;context.sourceNode.connect(context.nodes[0]);}factory.declare('audio_context',function(target,options){target.components.push(function(context){context.loop=true;context.playhead=0;context.rate=1;context.startTime=null;return function update(instance){if(!context.buffer)return;if(context.startTime==instance.startTime&&context.loop==instance.loop)return;var restart=context.startTime!=instance.startTime;context.loop=instance.loop;context.startTime=instance.startTime;var timeOffset=instance.startTime-instance.time;var currentTime=context.audio.currentTime;if(context.sourceNode){var timeElapsed=currentTime-context.prevTime;context.playhead=(context.playhead+timeElapsed)%context.buffer.duration;context.sourceNode.stop(0);}if(restart){context.sourceNode=null;context.playhead=0;}if(context.startTime==null)return;initializeAudioSource(context);context.prevTime=currentTime+Math.max(0,timeOffset);context.playhead+=Math.max(0,-timeOffset);context.sourceNode.start(context.prevTime,context.playhead,undefined);};});});var audio=Object.freeze({});factory.declare('behavior',function(target,options){return{};});var Boid=function Boid(options){var target=Object.create(null),position=vec3$1.copy(options.position||vec3$1.ZERO),rotation=quat$1(),velocity=vec3$1(),steeringForce=vec3$1(),velocitySamples=[],smoothingSampleCount=options.smoothingSampleCount||20;var maxSpeed=options.maxSpeed||1e-2,maxForce=options.maxForce||1e-5,mass=options.mass||1.0,wanderAngle=0;return tie(target,{get position(){return position;},get rotation(){return rotation;},get velocity(){return velocity;},update:function update(deltaTime){target.verlet(deltaTime);if(velocitySamples.length===smoothingSampleCount)velocitySamples.shift();velocitySamples.push(velocity);var totalVelocity=velocitySamples.reduce(function(total,v){return vec3$1.add(total,v,total);},vec3$1());vec3$1.normalize(totalVelocity,totalVelocity);if(!vec3$1.equals(vec3$1.ZERO,totalVelocity))quat$1.normalize(quat$1.fromMat4(mat4.targetTo(vec3$1.ZERO,totalVelocity,vec3$1.AXIS_Y)),rotation);},verlet:function verlet(deltaTime){vec3$1.truncate(steeringForce,maxForce,steeringForce);vec3$1.scale(steeringForce,1/mass,steeringForce);vec3$1.add(velocity,steeringForce,velocity);vec3$1.copy(vec3$1.ZERO,steeringForce);vec3$1.truncate(velocity,maxSpeed,velocity);vec3$1.add(position,velocity,position);},seek:function seek(objective){var arrivalThreshold=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var desiredVelocity=vec3$1.subtract(objective,position),distance=vec3$1.distance(desiredVelocity);vec3$1.scale(desiredVelocity,(distance?1/distance:0)*(distance>arrivalThreshold?maxSpeed:maxSpeed*distance/arrivalThreshold),desiredVelocity);vec3$1.subtract(desiredVelocity,velocity,desiredVelocity);vec3$1.add(steeringForce,desiredVelocity,steeringForce);},flee:function flee(objective){var desiredVelocity=vec3$1.subtract(objective,position),distance=vec3$1.distance(desiredVelocity);vec3$1.scale(desiredVelocity,(distance?1/distance:0)*maxSpeed,desiredVelocity);vec3$1.subtract(desiredVelocity,velocity,desiredVelocity);vec3$1.subtract(steeringForce,desiredVelocity,steeringForce);},wander:function wander(){var wanderDistance=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0.1;var wanderRange=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Math.PI*0.05;var center=vec3$1.normalize(velocity);vec3$1.scale(center,wanderDistance,center);var offset=vec3$1(Math.sin(wanderAngle)*wanderDistance,0,Math.cos(wanderAngle)*wanderDistance);wanderAngle+=genRandomFloat(-0.5*wanderRange,0.5*wanderRange);vec3$1.add(center,offset,center);vec3$1.add(steeringForce,center,steeringForce);},pursue:function pursue(objective){var distanceAhead=vec3$1.distance(vec3$1.subtract(objective.position,position))/maxSpeed;var futureObjective=vec3$1.add(objective.position,vec3$1.scale(vec3$1.normalize(objective.velocity),distanceAhead));target.seek(futureObjective);},evade:function evade(objective){var distanceAhead=vec3$1.distance(vec3$1.subtract(objective.position,position))/maxSpeed;var futureObjective=vec3$1.subtract(objective.position,vec3$1.scale(vec3$1.normalize(objective.velocity),distanceAhead));target.flee(futureObjective);},followPath:function followPath(pathIdx,path,loop){var thresholdRadius=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;var wayPoint=path[pathIdx];if(vec3$1.distance(vec3$1.subtract(position,wayPoint))<thresholdRadius)pathIdx=pathIdx>=path.length-1?loop?0:pathIdx:++pathIdx;target.seek(wayPoint,pathIdx==path.length-1&&!loop?2*thresholdRadius:0);return pathIdx;}});};factory.declare('scene',function(target,options){var taskManager=options.manager;var navigationMesh=factory.build('navigation_mesh',{taskManager:taskManager});return{navigationMesh:navigationMesh,addSolidGeometry:function addSolidGeometry(solidObjects){var solidGeometry=deserialize(solidObjects);if(!solidGeometry.length)return null;return{navigationConstructionEvent:navigationMesh.buildNodes(solidGeometry,'default').pipe(function(layer){var group=layer.groups[layer.groups.length-1];logger.info('navigation',"Navigation mesh group attached.");target.dispatchEvent('navigation',layer);return group;}).fix(function(error){return console.error(error);})};},removeSolidGeometry:function removeSolidGeometry(solidGeometry){solidGeometry.navigationConstructionEvent.pipe(function(group){return navigationMesh.deleteNodes('default',group);}).pipe(function(layer){logger.info('navigation','Navigation mesh chunk detached.');target.dispatchEvent('navigation',layer);});}};});var FollowObjective=function FollowObjective(scene,target,options){options=Object.assign({distanceThreshold:10*10,navigationLayer:'default'},options||{});var lastPosition=vec3$1();var path=null,wayPointIndex=0;return function(position,traverse){if(vec3$1.differenceSquared(lastPosition,target.position)>options.distanceThreshold){vec3$1.copy(target.position,lastPosition);var agentPosition=position,agentTargetPosition=lastPosition;path=scene.navigationMesh.findPath(agentPosition,agentTargetPosition,options.navigationLayer);wayPointIndex=0;logger.info('ai',"Recalculating path. length "+(path&&path.length));}if(path)wayPointIndex=traverse(path,wayPointIndex);else traverse([position],0);};};var behavior=Object.freeze({Boid:Boid,FollowObjective:FollowObjective});var CollisionDetector=function CollisionDetector(detectors){return{test:function test(context,shapeA,shapeB,worldPositionA,worldPositionB,worldRotationA,worldRotationB,bailEarly){context.vec3Pool=aquireVec3Pool();context.flip=shapeA.type>=shapeB.type;var detector=detectors[shapeA.type|shapeB.type],result=!context.flip?detector(context,shapeA,shapeB,worldPositionA,worldPositionB,worldRotationA,worldRotationB,bailEarly):detector(context,shapeB,shapeA,worldPositionB,worldPositionA,worldRotationB,worldRotationA,bailEarly);context.vec3Pool.release();return result;}};};var sphereSphere=function sphereSphere(context,shapeA,shapeB,worldPositionA,worldPositionB,worldRotationA,worldRotationB,bailEarly){var contactNormal=context.contactNormal,contactPointA=context.contactPointA,contactPointB=context.contactPointB;var minDistance=shapeA.radius+shapeB.radius;vec3$1.subtract(worldPositionB,worldPositionA,contactNormal);if(vec3$1.distanceSquared(contactNormal)>=minDistance*minDistance)return false;if(bailEarly)return true;vec3$1.normalize(contactNormal,contactNormal);vec3$1.scale(contactNormal,shapeA.radius,contactPointA);vec3$1.scale(contactNormal,-shapeB.radius,contactPointB);vec3$1.add(contactPointA,worldPositionA,contactPointA);vec3$1.add(contactPointB,worldPositionB,contactPointB);context.registerContact();return true;};var sphereBox=function sphereBox(context,shapeA,shapeB,worldPositionA,worldPositionB,worldRotationA,worldRotationB,bailEarly){var contactNormal=context.contactNormal,contactPointA=context.contactPointA,contactPointB=context.contactPointB,vec3Pool=context.vec3Pool,radius=shapeA.radius,halfExtents=shapeB.halfExtents,boxToSphere=vec3$1.subtract(worldPositionA,worldPositionB,vec3Pool.obtain());var axisX=vec3$1.transformQuat(vec3$1.AXIS_X,worldRotationB,vec3Pool.obtain()),axisY=vec3$1.transformQuat(vec3$1.AXIS_Y,worldRotationB,vec3Pool.obtain()),axisZ=vec3$1.transformQuat(vec3$1.AXIS_Z,worldRotationB,vec3Pool.obtain()),dotX=vec3$1.dot(boxToSphere,axisX),dotY=vec3$1.dot(boxToSphere,axisY),dotZ=vec3$1.dot(boxToSphere,axisZ),side=vec3$1.set(dotX<0?-halfExtents[0]:halfExtents[0],dotY<0?-halfExtents[1]:halfExtents[1],dotZ<0?-halfExtents[2]:halfExtents[2],vec3Pool.obtain()),sideX=dotX<0?-halfExtents[0]:halfExtents[0],sideY=dotY<0?-halfExtents[1]:halfExtents[1],sideZ=dotZ<0?-halfExtents[2]:halfExtents[2],overlapX=halfExtents[0]-Math.abs(dotX),overlapY=halfExtents[1]-Math.abs(dotY),overlapZ=halfExtents[2]-Math.abs(dotZ),minOverlap=Math.min(overlapX,overlapY,overlapZ);if(overlapX>0&&overlapX!=minOverlap)side[0]=dotX;if(overlapY>0&&overlapY!=minOverlap)side[1]=dotY;if(overlapZ>0&&overlapZ!=minOverlap)side[2]=dotZ;vec3$1.set(axisX[0]*side[0]+axisY[0]*side[1]+axisZ[0]*side[2],axisX[1]*side[0]+axisY[1]*side[1]+axisZ[1]*side[2],axisX[2]*side[0]+axisY[2]*side[1]+axisZ[2]*side[2],contactPointB);vec3$1.subtract(contactPointB,boxToSphere,contactNormal);if(vec3$1.distanceSquared(contactNormal)>=radius*radius&&minOverlap<=0)return false;if(bailEarly)return true;if(minOverlap>0)vec3$1.negate(contactNormal,contactNormal);vec3$1.normalize(contactNormal,contactNormal);vec3$1.scale(contactNormal,radius,contactPointA);vec3$1.add(contactPointA,worldPositionA,contactPointA);vec3$1.add(contactPointB,worldPositionB,contactPointB);context.registerContact();return true;};var rotationMatrixA=mat3();var rotationMatrixB=mat3();var axesA=[new Float32Array(rotationMatrixA.buffer,0,3),new Float32Array(rotationMatrixA.buffer,Float32Array.BYTES_PER_ELEMENT*3,3),new Float32Array(rotationMatrixA.buffer,Float32Array.BYTES_PER_ELEMENT*6,3)];var axesB=[new Float32Array(rotationMatrixB.buffer,0,3),new Float32Array(rotationMatrixB.buffer,Float32Array.BYTES_PER_ELEMENT*3,3),new Float32Array(rotationMatrixB.buffer,Float32Array.BYTES_PER_ELEMENT*6,3)];var crossAxes=Array(9).fill().map(function(_){return vec3$1();});var boxBox=function boxBox(context,shapeA,shapeB,worldPositionA,worldPositionB,worldRotationA,worldRotationB,bailEarly){var contactNormal=context.contactNormal,contactPointA=context.contactPointA,contactPointB=context.contactPointB;var vec3Pool=context.vec3Pool,difference=vec3$1.subtract(worldPositionB,worldPositionA,vec3Pool.obtain());mat3.fromQuat(worldRotationA,rotationMatrixA);mat3.fromQuat(worldRotationB,rotationMatrixB);var axisXA=axesA[0],axisYA=axesA[1],axisZA=axesA[2],axisXB=axesB[0],axisYB=axesB[1],axisZB=axesB[2],dotXX=vec3$1.dot(axisXA,axisXB),dotXY=vec3$1.dot(axisXA,axisYB),dotXZ=vec3$1.dot(axisXA,axisZB),dotYX=vec3$1.dot(axisYA,axisXB),dotYY=vec3$1.dot(axisYA,axisYB),dotYZ=vec3$1.dot(axisYA,axisZB),dotZX=vec3$1.dot(axisZA,axisXB),dotZY=vec3$1.dot(axisZA,axisYB),dotZZ=vec3$1.dot(axisZA,axisZB),sideB=shapeB.halfExtents,sideA=shapeA.halfExtents;var dimensionA=vec3Pool.obtain(),dimensionB=vec3Pool.obtain(),axisIndex=-1,minDepth=-Number.MAX_VALUE,sign=void 0,distance=void 0,overlap=void 0,overlapOffset=0.01,lengthThreshold=1e-5;distance=vec3$1.dot(axisXA,difference);vec3$1.set(Math.abs(dotXX),Math.abs(dotXY),Math.abs(dotXZ),dimensionB);overlap=Math.abs(distance)-sideA[0]-vec3$1.dot(dimensionB,sideB);if(overlap>0)return false;else if(overlap>minDepth){minDepth=overlap;axisIndex=0x1;sign=distance>0;}distance=vec3$1.dot(axisYA,difference);vec3$1.set(Math.abs(dotYX),Math.abs(dotYY),Math.abs(dotYZ),dimensionB);overlap=Math.abs(distance)-sideA[1]-vec3$1.dot(dimensionB,sideB);if(overlap>0)return false;else if(overlap>minDepth){minDepth=overlap;axisIndex=0x2;sign=distance>0;}distance=vec3$1.dot(axisZA,difference);vec3$1.set(Math.abs(dotZX),Math.abs(dotZY),Math.abs(dotZZ),dimensionB);overlap=Math.abs(distance)-sideA[2]-vec3$1.dot(dimensionB,sideB);if(overlap>0)return false;else if(overlap>minDepth){minDepth=overlap;axisIndex=0x3;sign=distance>0;}distance=vec3$1.dot(axisXB,difference);vec3$1.set(Math.abs(dotXX),Math.abs(dotYX),Math.abs(dotZX),dimensionA);overlap=Math.abs(distance)-sideB[0]-vec3$1.dot(dimensionA,sideA);if(overlap>0)return false;else if(overlap>minDepth){minDepth=overlap;axisIndex=0x4;sign=distance>0;}distance=vec3$1.dot(axisYB,difference);vec3$1.set(Math.abs(dotXY),Math.abs(dotYY),Math.abs(dotZY),dimensionA);overlap=Math.abs(distance)-sideB[1]-vec3$1.dot(dimensionA,sideA);if(overlap>0)return false;else if(overlap>minDepth){minDepth=overlap;axisIndex=0x5;sign=distance>0;}distance=vec3$1.dot(axisZB,difference);vec3$1.set(Math.abs(dotXZ),Math.abs(dotYZ),Math.abs(dotZZ),dimensionA);overlap=Math.abs(distance)-sideB[2]-vec3$1.dot(dimensionA,sideA);if(overlap>0)return false;else if(overlap>minDepth){minDepth=overlap;axisIndex=0x6;sign=distance>0;}for(var a=0;a<3;a++){for(var b=0;b<3;b++){var crossAxis=vec3$1.cross(axesA[a],axesB[b],crossAxes[a*3+b]);if((distance=vec3$1.distanceSquared(crossAxis))<=lengthThreshold)continue;distance=vec3$1.dot(vec3$1.scale(crossAxis,1/Math.sqrt(distance),crossAxis),difference);vec3$1.set(a==0?0:Math.abs(vec3$1.dot(crossAxis,axisXA)),a&1?0:Math.abs(vec3$1.dot(crossAxis,axisYA)),a&2?0:Math.abs(vec3$1.dot(crossAxis,axisZA)),dimensionA);vec3$1.set(b==0?0:Math.abs(vec3$1.dot(crossAxis,axisXB)),b&1?0:Math.abs(vec3$1.dot(crossAxis,axisYB)),b&2?0:Math.abs(vec3$1.dot(crossAxis,axisZB)),dimensionB);overlap=Math.abs(distance)-vec3$1.dot(dimensionA,sideA)-vec3$1.dot(dimensionB,sideB);if(overlap>0)return false;else if(overlap-overlapOffset>minDepth){minDepth=overlap;axisIndex=0x7+a*3+b;sign=distance>0;}}}var halfX=vec3$1.scale(axisXA,sideA[0],vec3Pool.obtain()),halfY=vec3$1.scale(axisYA,sideA[1],vec3Pool.obtain()),halfZ=vec3$1.scale(axisZA,sideA[2],vec3Pool.obtain()),verticesA=Array(8);for(var i=0;i<8;i++){var vertex=verticesA[i]=vec3$1.copy(worldPositionA,vec3Pool.obtain());i&0x4?vec3$1.subtract(vertex,halfX,vertex):vec3$1.add(vertex,halfX,vertex);i&0x2?vec3$1.subtract(vertex,halfY,vertex):vec3$1.add(vertex,halfY,vertex);i&0x1?vec3$1.subtract(vertex,halfZ,vertex):vec3$1.add(vertex,halfZ,vertex);}vec3$1.scale(axisXB,sideB[0],halfX);vec3$1.scale(axisYB,sideB[1],halfY);vec3$1.scale(axisZB,sideB[2],halfZ);var verticesB=Array(8);for(var _i32=0;_i32<8;_i32++){var _vertex4=verticesB[_i32]=vec3$1.copy(worldPositionB,vec3Pool.obtain());_i32&0x4?vec3$1.subtract(_vertex4,halfX,_vertex4):vec3$1.add(_vertex4,halfX,_vertex4);_i32&0x2?vec3$1.subtract(_vertex4,halfY,_vertex4):vec3$1.add(_vertex4,halfY,_vertex4);_i32&0x1?vec3$1.subtract(_vertex4,halfZ,_vertex4):vec3$1.add(_vertex4,halfZ,_vertex4);}var normal=vec3Pool.obtain(),tangent=vec3Pool.obtain(),binormal=vec3Pool.obtain();if(axisIndex>0x6){if(bailEarly)return true;axisIndex-=0x7;normal=crossAxes[axisIndex];tangent=axesA[axisIndex/3|0];binormal=axesB[axisIndex%3];if(!sign)vec3$1.negate(normal,normal);var _distance3=void 0,vertexA=void 0,vertexB=void 0,maxDistance=-Number.MAX_VALUE,minDistance=Number.MAX_VALUE;for(var _i33=0;_i33<8;_i33++){if((_distance3=vec3$1.dot(normal,verticesA[_i33]))>maxDistance){maxDistance=_distance3;vertexA=verticesA[_i33];}}for(var _i34=0;_i34<8;_i34++){if((_distance3=vec3$1.dot(normal,verticesB[_i34]))<minDistance){minDistance=_distance3;vertexB=verticesB[_i34];}}var _vertex5=vec3$1.subtract(vertexB,vertexA,vec3Pool.obtain());var _dot2=vec3$1.dot(tangent,binormal);vec3$1.subtract(tangent,vec3$1.scale(binormal,_dot2,binormal),binormal);vec3$1.add(vertexA,vec3$1.scale(tangent,vec3$1.dot(_vertex5,binormal)/(1-_dot2*_dot2),tangent),_vertex5);vec3$1.add(_vertex5,vec3$1.scale(normal,minDepth*0.5,vec3$1.temp),_vertex5);vec3$1.dot(normal,difference)<0?vec3$1.negate(normal,contactNormal):vec3$1.copy(normal,contactNormal);vec3$1.copy(_vertex5,contactPointB);vec3$1.scale(contactNormal,-minDepth,contactPointA);vec3$1.add(contactPointB,contactPointA,contactPointA);context.registerContact();return true;}var sideLength=vec3Pool.obtain(),oppositeAxes=vec3Pool.obtain();switch(axisIndex){case 0x1:vec3$1.copy(axisXA,normal),vec3$1.copy(axisYA,tangent),vec3$1.copy(axisZA,binormal),vec3$1.set(dotXX,dotXY,dotXZ,oppositeAxes),vec3$1.set(sideA[0],sideA[1],sideA[2],sideLength);break;case 0x2:vec3$1.copy(axisYA,normal),vec3$1.copy(axisXA,tangent),vec3$1.copy(axisZA,binormal),vec3$1.set(dotYX,dotYY,dotYZ,oppositeAxes),vec3$1.set(sideA[1],sideA[0],sideA[2],sideLength);break;case 0x3:vec3$1.copy(axisZA,normal),vec3$1.copy(axisXA,tangent),vec3$1.copy(axisYA,binormal),vec3$1.set(dotZX,dotZY,dotZZ,oppositeAxes),vec3$1.set(sideA[2],sideA[0],sideA[1],sideLength);break;case 0x4:vec3$1.negate(axisXB,normal),vec3$1.copy(axisYB,tangent),vec3$1.copy(axisZB,binormal),vec3$1.set(-dotXX,-dotYX,-dotZX,oppositeAxes),vec3$1.set(sideB[0],sideB[1],sideB[2],sideLength);break;case 0x5:vec3$1.negate(axisYB,normal),vec3$1.copy(axisXB,tangent),vec3$1.copy(axisZB,binormal),vec3$1.set(-dotXY,-dotYY,-dotZY,oppositeAxes),vec3$1.set(sideB[1],sideB[0],sideB[2],sideLength);break;case 0x6:vec3$1.negate(axisZB,normal),vec3$1.copy(axisXB,tangent),vec3$1.copy(axisYB,binormal),vec3$1.set(-dotXZ,-dotYZ,-dotZZ,oppositeAxes),vec3$1.set(sideB[2],sideB[0],sideB[1],sideLength);break;}if(!sign)vec3$1.negate(normal,normal);if(!sign)vec3$1.negate(oppositeAxes,oppositeAxes);var center=vec3$1.scale(normal,sideLength[0],vec3Pool.obtain()),edgeA=vec3$1.scale(tangent,sideLength[1],vec3Pool.obtain()),edgeB=vec3$1.scale(binormal,sideLength[2],vec3Pool.obtain());vec3$1.add(axisIndex>0x3?worldPositionB:worldPositionA,center,center);var planeC1=-vec3$1.dot(vec3$1.add(center,edgeA,vec3$1.temp),tangent),planeC2=-vec3$1.dot(vec3$1.add(center,edgeB,vec3$1.temp),binormal),planeC3=vec3$1.dot(vec3$1.subtract(center,edgeA,vec3$1.temp),tangent),planeC4=vec3$1.dot(vec3$1.subtract(center,edgeB,vec3$1.temp),binormal);var clipVertices=[[],[]];var faceIndex=-1,faceVertices=axisIndex>0x3?verticesA:verticesB;for(var index=0,minDot=Number.MAX_VALUE;index<6;index++){var _dot3=oppositeAxes[index/2|0]*(-(index&0x1)||1);if(_dot3>=minDot)continue;minDot=_dot3;faceIndex=index;}switch(faceIndex){case 0:clipVertices[0].push(faceVertices[0],faceVertices[2],faceVertices[3],faceVertices[1]);break;case 1:clipVertices[0].push(faceVertices[5],faceVertices[7],faceVertices[6],faceVertices[4]);break;case 2:clipVertices[0].push(faceVertices[4],faceVertices[0],faceVertices[1],faceVertices[5]);break;case 3:clipVertices[0].push(faceVertices[7],faceVertices[3],faceVertices[2],faceVertices[6]);break;case 4:clipVertices[0].push(faceVertices[4],faceVertices[6],faceVertices[2],faceVertices[0]);break;case 5:clipVertices[0].push(faceVertices[1],faceVertices[3],faceVertices[7],faceVertices[5]);break;}if(!clipFaceAgainstPlane(vec3Pool,clipVertices[0],tangent,planeC1,clipVertices[1]).length)return false;clipVertices[0].length=0;if(!clipFaceAgainstPlane(vec3Pool,clipVertices[1],binormal,planeC2,clipVertices[0]).length)return false;clipVertices[1].length=0;if(!clipFaceAgainstPlane(vec3Pool,clipVertices[0],vec3$1.negate(tangent,tangent),planeC3,clipVertices[1]).length)return false;clipVertices[0].length=0;if(!clipFaceAgainstPlane(vec3Pool,clipVertices[1],vec3$1.negate(binormal,binormal),planeC4,clipVertices[0]).length)return false;var dot=void 0,centerDot=-vec3$1.dot(center,normal);for(var _i35=0;_i35<clipVertices[0].length;_i35++){if((dot=vec3$1.dot(normal,clipVertices[0][_i35])+centerDot)<0){vec3$1.dot(normal,difference)<0?vec3$1.negate(normal,contactNormal):vec3$1.copy(normal,contactNormal);vec3$1.copy(clipVertices[0][_i35],contactPointB);vec3$1.scale(contactNormal,-dot,contactPointA);vec3$1.add(contactPointB,contactPointA,contactPointA);context.registerContact();}}return!!context.contactPoints.length;};var sphereConvex=function sphereConvex(context,shapeA,shapeB,worldPositionA,worldPositionB,worldRotationA,worldRotationB,bailEarly){var contactNormal=context.contactNormal,contactPointA=context.contactPointA,contactPointB=context.contactPointB;var vec3Pool=context.vec3Pool,normals=shapeB.faceNormals,faces=shapeB.faces,vertices=shapeB.vertices,radius=shapeA.radius,tempVertices=[],convexToSphere=vec3$1.subtract(worldPositionA,worldPositionB,vec3Pool.obtain());var face=null,faceNormal=vec3Pool.obtain(),facePeneteration=Number.MAX_VALUE;var tempFaceNormal=vec3Pool.obtain();for(var i=faces.length-1;i>=0;i--){var faceVertices=faces[i],index=faceVertices[0],vertex=tempVertices[index]||vec3$1.subtract(tempVertices[index]=vec3$1.transformQuat(vertices[index],worldRotationB,vec3Pool.obtain()),convexToSphere,tempVertices[index]);vec3$1.transformQuat(normals[i],worldRotationB,tempFaceNormal);var peneteration=vec3$1.dot(tempFaceNormal,vertex)+radius;if(peneteration<0)return false;if(facePeneteration<=peneteration)continue;facePeneteration=peneteration;face=faceVertices;vec3$1.copy(tempFaceNormal,faceNormal);}var edgePoint=null,edgeDirection=vec3Pool.obtain(),edgeNormal=vec3Pool.obtain(),edgePeneteration=Number.MAX_VALUE;var tempEdgeDirection=vec3Pool.obtain(),tempEdgeNormal=vec3Pool.obtain();for(var _i36=face.length-1;_i36>=0;_i36--){var indexA=face[_i36],indexB=face[(_i36+1)%face.length],vertexB=tempVertices[indexB],vertexA=tempVertices[indexA]||vec3$1.subtract(tempVertices[indexA]=vec3$1.transformQuat(vertices[indexA],worldRotationB,vec3Pool.obtain()),convexToSphere,tempVertices[indexA]);vec3$1.subtract(vertexB,vertexA,tempEdgeDirection);vec3$1.cross(faceNormal,tempEdgeDirection,tempEdgeNormal);vec3$1.normalize(tempEdgeNormal,tempEdgeNormal);var distance=-vec3$1.dot(vertexA,tempEdgeNormal)+radius;if(distance<0)return false;if(edgePeneteration<=distance)continue;edgePeneteration=distance;edgePoint=vertexA;vec3$1.copy(tempEdgeNormal,edgeNormal);vec3$1.copy(tempEdgeDirection,edgeDirection);}if(edgePeneteration<=radius){vec3$1.normalize(edgeDirection,contactNormal);var projection=Math.clamp(-vec3$1.dot(edgePoint,contactNormal),0,vec3$1.distance(edgeDirection));vec3$1.scale(contactNormal,projection,contactNormal);vec3$1.add(edgePoint,contactNormal,contactNormal);if(vec3$1.distanceSquared(contactNormal)>radius*radius)return false;if(bailEarly)return true;vec3$1.add(convexToSphere,contactNormal,contactPointB);vec3$1.normalize(contactNormal,contactNormal);vec3$1.scale(contactNormal,radius,contactPointA);}else{if(bailEarly)return true;vec3$1.negate(faceNormal,contactNormal);vec3$1.scale(contactNormal,radius-facePeneteration,contactPointB);vec3$1.add(convexToSphere,contactPointB,contactPointB);vec3$1.scale(contactNormal,radius,contactPointA);}vec3$1.add(contactPointB,worldPositionB,contactPointB);vec3$1.add(contactPointA,worldPositionA,contactPointA);context.registerContact();return true;};var satContext=SATContext();var convexConvex=function convexConvex(context,shapeA,shapeB,worldPositionA,worldPositionB,worldRotationA,worldRotationB,bailEarly){var contactNormal=context.contactNormal,contactPointA=context.contactPointA,contactPointB=context.contactPointB;var vec3Pool=context.vec3Pool,separatingAxis=vec3Pool.obtain(),convexToConvex=vec3Pool.obtain(),minDistance=shapeA.boundingSphereRadius+shapeB.boundingSphereRadius;if(vec3$1.differenceSquared(worldPositionA,worldPositionB)>minDistance*minDistance)return false;satContext.vec3Pool=vec3Pool;if(!findSeparatingAxis(satContext,shapeA,shapeB,worldPositionA,worldPositionB,worldRotationA,worldRotationB,separatingAxis))return false;var result=[];clipAgainstHull(satContext,shapeA,worldPositionA,worldRotationA,shapeB,worldPositionB,worldRotationB,separatingAxis,-100,100,result);if(bailEarly&&result.length)return true;for(var i=result.length-1;i>=0;i--){vec3$1.negate(separatingAxis,contactNormal);vec3$1.negate(result[i].normal,convexToConvex);vec3$1.scale(convexToConvex,result[i].depth,convexToConvex);vec3$1.add(result[i].point,convexToConvex,contactPointA);vec3$1.copy(result[i].point,contactPointB);context.registerContact();}return!!context.contactPoints.length;};var spherePlane=function spherePlane(context,shapeA,shapeB,worldPositionA,worldPositionB,worldRotationA,worldRotationB,bailEarly){var contactNormal=context.contactNormal,contactPointA=context.contactPointA,contactPointB=context.contactPointB;vec3$1.transformQuat(vec3$1.AXIS_Z,worldRotationB,contactNormal);vec3$1.negate(contactNormal,contactNormal);vec3$1.normalize(contactNormal,contactNormal);var planeToSphere=vec3$1.subtract(worldPositionA,worldPositionB,context.vec3Pool.obtain());if(-vec3$1.dot(planeToSphere,contactNormal)>shapeA.radius)return false;if(bailEarly)return true;vec3$1.scale(contactNormal,shapeA.radius,contactPointA);vec3$1.scale(contactNormal,vec3$1.dot(contactNormal,planeToSphere),contactPointB);vec3$1.subtract(planeToSphere,contactPointB,contactPointB);vec3$1.add(contactPointA,worldPositionA,contactPointA);vec3$1.add(contactPointB,worldPositionB,contactPointB);context.registerContact();return true;};var planeConvex=function planeConvex(context,shapeA,shapeB,worldPositionA,worldPositionB,worldRotationA,worldRotationB,bailEarly){var contactNormal=context.contactNormal,contactPointA=context.contactPointA,contactPointB=context.contactPointB;var vec3Pool=context.vec3Pool,vertices=shapeB.vertices,planeNormal=vec3$1.transformQuat(vec3$1.AXIS_Z,worldRotationA,vec3Pool.obtain()),planeConvex=vec3$1.subtract(worldPositionB,worldPositionA,vec3Pool.obtain()),worldVertex=vec3Pool.obtain();for(var i=vertices.length-1;i>=0;i--){vec3$1.transformQuat(vertices[i],worldRotationB,worldVertex);vec3$1.add(worldVertex,planeConvex,worldVertex);if(vec3$1.dot(planeNormal,worldVertex)>0.0)continue;if(bailEarly)return true;vec3$1.copy(planeNormal,contactNormal);vec3$1.subtract(worldVertex,planeConvex,contactPointB);vec3$1.scale(planeNormal,vec3$1.dot(planeNormal,worldVertex),contactPointA);vec3$1.subtract(worldVertex,contactPointA,contactPointA);vec3$1.add(contactPointA,worldPositionA,contactPointA);vec3$1.add(contactPointB,worldPositionB,contactPointB);context.registerContact();}return!!context.contactPoints.length;};var ConvexPolyhedron=function ConvexPolyhedron(vertices,faces,uniqueAxes){var shape=Object.create(ConvexPolyhedron.prototype);var vec3Pool=aquireVec3Pool();var faceNormals=Array(faces.length),edge0=vec3Pool.obtain(),edge1=vec3Pool.obtain();for(var i=faces.length-1;i>=0;i--){var face=faces[i],faceNormal=faceNormals[i]=vec3$1(),a=vertices[face[0]],b=vertices[face[1]],c=vertices[face[2]];vec3$1.subtract(b,a,edge0);vec3$1.subtract(c,b,edge1);vec3$1.cross(edge1,edge0,faceNormal);vec3$1.normalize(faceNormal,faceNormal);vec3$1.negate(faceNormal,faceNormal);if(vec3$1.dot(faceNormal,a)<0)throw new Error('Face vertices should be ordered CCW!');}var uniqueEdges=[];for(var _i37=0;_i37<faces.length;_i37++){var _face=faces[_i37];face_iteration:for(var j=0;j<_face.length;j++){var k=(j+1)%_face.length;vec3$1.subtract(vertices[_face[j]],vertices[_face[k]],edge0);vec3$1.normalize(edge0,edge0);for(var l=0;l<uniqueEdges.length;l++){if(vec3$1.equals(uniqueEdges[l],edge0))continue face_iteration;}uniqueEdges.push(vec3$1.copy(edge0));}}var maxSquared=0;for(var _i38=vertices.length-1;_i38>=0;_i38--){var distanceSquared=vec3$1.distanceSquared(vertices[_i38]);if(maxSquared<distanceSquared)maxSquared=distanceSquared;}var boundingSphereRadius=Math.sqrt(maxSquared);vec3Pool.release();return Object.assign(shape,{vertices:vertices,faces:faces,uniqueAxes:uniqueAxes,faceNormals:faceNormals,uniqueEdges:uniqueEdges,boundingSphereRadius:boundingSphereRadius});};ConvexPolyhedron.prototype={calculateWorldAABB:function calculateWorldAABB(position,rotation,min,max){var temp=vec3$1.temp,vertices=this.vertices;vec3$1.copy(vec3$1.MAX,min);vec3$1.copy(vec3$1.MIN,max);for(var i=vertices.length-1;i>=0;i--){vec3$1.transformQuat(vertices[i],rotation,temp);vec3$1.add(temp,position,temp);vec3$1.min(min,temp,min);vec3$1.max(max,temp,max);}},get volume(){return 4.0/3.0*Math.PI*this.boundingSphereRadius;},calculateLocalInertia:function calculateLocalInertia(mass){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec3$1();var vertices=this.vertices,vertexCount=vertices.length,m=mass/3.0;var dx=0,dy=0,dz=0;for(var i=vertexCount-1;i>=0;i--){var vertex=vertices[i];dx+=vertex[0]*vertex[0];dy+=vertex[1]*vertex[1];dz+=vertex[2]*vertex[2];}dx=2*Math.sqrt(2*dx/vertexCount);dy=2*Math.sqrt(2*dy/vertexCount);dz=2*Math.sqrt(2*dz/vertexCount);out[0]=(dy+dz)*m;out[1]=(dx+dz)*m;out[2]=(dx+dy)*m;return out;},transformAllPoints:function transformAllPoints(offset,quaternion){for(var i=this.faceNormals.length-1;i>=0;i--){vec3$1.transformQuat(this.faceNormals[i],quaternion,this.faceNormals[i]);}for(var _i39=this.uniqueEdges.length-1;_i39>=0;_i39--){vec3$1.transformQuat(this.uniqueEdges[_i39],quaternion,this.uniqueEdges[_i39]);}for(var _i40=this.vertices.length-1;_i40>=0;_i40--){var vertex=this.vertices[_i40];vec3$1.transformQuat(vertex,quaternion,vertex);vec3$1.add(vertex,offset,vertex);}}};var Cylinder$1=function Cylinder$1(topRadius,bottomRadius,height){var segments=arguments.length>3&&arguments[3]!==undefined?arguments[3]:8;var vertices=[],faces=[],axes=[],topFace=[],bottomFace=[],segmentAngle=2*Math.PI/segments;for(var i=0;i<segments;i++){var theta=segmentAngle*i,j=(i+1)%segments;vertices.push(vec3$1(bottomRadius*Math.cos(theta),bottomRadius*Math.sin(theta),-0.5*height));vertices.push(vec3$1(topRadius*Math.cos(theta),topRadius*Math.sin(theta),0.5*height));bottomFace.unshift(2*i);topFace.push(2*i+1);faces.push([2*j,2*j+1,2*i+1,2*i]);}faces.push(topFace);faces.push(bottomFace);axes.push(vec3$1.copy(vec3$1.AXIS_Z));for(var _i41=0,uniqueAxes=segments%2?segments/2:segments;_i41<uniqueAxes;_i41++){var _theta=segmentAngle*(_i41+0.5);axes.push(vec3$1(Math.cos(_theta),Math.sin(_theta),0));}return ConvexPolyhedron(vertices,faces,axes);};var Sphere$1=function Sphere$1(){var radius=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var shape=Object.create(Sphere$1.prototype);shape.radius=Math.max(0,radius);return shape;};Sphere$1.prototype={get boundingSphereRadius(){return this.radius;},get volume(){return Math.PI*this.radius*4.0/3.0;},calculateLocalInertia:function calculateLocalInertia(mass){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec3$1();var inertia=mass*this.radius*this.radius*2.0/5.0;out[0]=inertia;out[1]=inertia;out[2]=inertia;return out;},calculateWorldAABB:function calculateWorldAABB(position,rotation,min,max){var radius=this.radius;min[0]=position[0]-radius;max[0]=position[0]+radius;min[1]=position[1]-radius;max[1]=position[1]+radius;min[2]=position[2]-radius;max[2]=position[2]+radius;}};var Plane$1=function Plane$1(){var shape=Object.create(Plane$1.prototype);shape.worldNormal=vec3$1.copy(vec3$1.AXIS_Z);return shape;};Plane$1.prototype={get boundingSphereRadius(){return Number.MAX_VALUE;},get volume(){return Number.MAX_VALUE;},calculateLocalInertia:function calculateLocalInertia(mass){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec3$1();return out;},calculateWorldAABB:function calculateWorldAABB(position,rotation,min,max){var normal=vec3$1.temp;vec3$1.transformQuat(this.worldNormal,rotation,normal);vec3$1.copy(vec3$1.MIN,min);vec3$1.copy(vec3$1.MAX,max);if(normal[0]==1)max[0]=position[0];if(normal[1]==1)max[1]=position[1];if(normal[2]==1)max[2]=position[2];if(normal[0]==-1)min[0]=position[0];if(normal[1]==-1)min[1]=position[1];if(normal[2]==-1)min[2]=position[2];}};var Box=function Box(halfExtents){var sx=halfExtents[0],sy=halfExtents[1],sz=halfExtents[2];var shape=Object.setPrototypeOf(ConvexPolyhedron([vec3$1(-sx,-sy,-sz),vec3$1(sx,-sy,-sz),vec3$1(sx,sy,-sz),vec3$1(-sx,sy,-sz),vec3$1(-sx,-sy,sz),vec3$1(sx,-sy,sz),vec3$1(sx,sy,sz),vec3$1(-sx,sy,sz)],[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],[vec3$1.copy(vec3$1.AXIS_Z),vec3$1.copy(vec3$1.AXIS_Y),vec3$1.copy(vec3$1.AXIS_X)]),Box.prototype);shape.halfExtents=halfExtents;shape.boundingSphereRadius=vec3$1.distance(halfExtents);return shape;};Box.prototype=Object.setPrototypeOf({get volume(){return 8.0*this.halfExtents[0]*this.halfExtents[1]*this.halfExtents[2];},calculateLocalInertia:function calculateLocalInertia(mass){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec3$1();var halfSide=this.halfExtents,sx=halfSide[0]*halfSide[0],sy=halfSide[1]*halfSide[1],sz=halfSide[2]*halfSide[2],sm=mass*1.0/3.0;out[0]=sm*(sy+sz);out[1]=sm*(sx+sz);out[2]=sm*(sx+sy);return out;},calculateWorldAABB:function calculateWorldAABB(position,rotation,min,max){var halfSide=this.halfExtents,temp=vec3$1.temp;vec3$1.copy(vec3$1.MAX,min);vec3$1.copy(vec3$1.MIN,max);for(var i=0;i<8;i++){vec3$1.set(i&0x01?halfSide[0]:-halfSide[0],i&0x02?halfSide[1]:-halfSide[1],i&0x04?halfSide[2]:-halfSide[2],temp);vec3$1.transformQuat(temp,rotation,temp);vec3$1.add(temp,position,temp);vec3$1.min(min,temp,min);vec3$1.max(max,temp,max);}}},ConvexPolyhedron.prototype);var SHAPE_TYPE={SPHERE:1,PLANE:2,CONVEX:16,BOX:4};Sphere$1.prototype.type=SHAPE_TYPE.SPHERE;Plane$1.prototype.type=SHAPE_TYPE.PLANE;ConvexPolyhedron.prototype.type=SHAPE_TYPE.CONVEX;Box.prototype.type=SHAPE_TYPE.BOX;var detectors=Object.create(null);detectors[SHAPE_TYPE.SPHERE]=sphereSphere;detectors[SHAPE_TYPE.BOX]=boxBox;detectors[SHAPE_TYPE.CONVEX]=convexConvex;detectors[SHAPE_TYPE.BOX|SHAPE_TYPE.CONVEX]=convexConvex;detectors[SHAPE_TYPE.SPHERE|SHAPE_TYPE.CONVEX]=sphereConvex;detectors[SHAPE_TYPE.SPHERE|SHAPE_TYPE.BOX]=sphereBox;detectors[SHAPE_TYPE.SPHERE|SHAPE_TYPE.PLANE]=spherePlane;detectors[SHAPE_TYPE.PLANE|SHAPE_TYPE.BOX]=planeConvex;detectors[SHAPE_TYPE.PLANE|SHAPE_TYPE.CONVEX]=planeConvex;var collisionDetector=CollisionDetector(detectors);factory.declare('physics',function(target,options){var simulationEvent={deltaTime:0.0,time:0.0,frame:0};var time=0.0,timeRemaining=0.0;return tie({update:function update(elapsedTime,minDeltaTime){var maxSubSteps=arguments.length>2&&arguments[2]!==undefined?arguments[2]:10;if(!minDeltaTime){target.step(elapsedTime);return time+=elapsedTime;}timeRemaining+=elapsedTime;var substeps=0;while(timeRemaining>=minDeltaTime&&substeps<maxSubSteps){timeRemaining-=minDeltaTime;target.step(minDeltaTime);time+=minDeltaTime;substeps++;}var f=timeRemaining%minDeltaTime/minDeltaTime;for(var i=target.bodies.length-1;i>=0;i--){var body=target.bodies[i];vec3$1.lerp(body.previousPosition,body.position,f,body.interpolatedPosition);quat$1.slerp(body.previousQuaternion,body.quaternion,f,body.interpolatedQuaternion);quat$1.normalize(body.interpolatedQuaternion,body.interpolatedQuaternion);}return time;},get frame(){return simulationEvent.frame;},step:function step(deltaTime){simulationEvent.frame++;simulationEvent.time=time;simulationEvent.deltaTime=deltaTime;target.simulate(simulationEvent);}},EventEmitter());});var TupleDictionary=function TupleDictionary(_){var dataMap=Object.create(null);return{get:function get(i,j){return i>j?dataMap[j+'-'+i]:dataMap[i+'-'+j];},set:function set(i,j,value){return dataMap[i>j?j+'-'+i:i+'-'+j]=value;},clear:function clear(_){return Object.keys(dataMap).forEach(function(key){return delete dataMap[key];});}};};var materialLibrary=function(_){var materials=[],contactMaterials=[],contactMaterialMap=TupleDictionary();return{get defaultContactMaterial(){return contactMaterials[0];},createMaterial:function createMaterial(options){var material=Object.assign({id:materials.length,name:''},options||{});materials.push(material);return material;},createContactMaterial:function createContactMaterial(materialA){var materialB=arguments.length>1&&arguments[1]!==undefined?arguments[1]:materialA;var options=arguments[2];var contactMaterial=Object.assign({id:contactMaterials.length,materials:[materialA,materialB],friction:0.3,restitution:0.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3,collisionResponse:true},options||{});contactMaterials.push(contactMaterial);contactMaterialMap.set(materialA.id,materialB.id,contactMaterial);return contactMaterial;},getContactMaterial:function getContactMaterial(materialA,materialB){return materialA&&materialB&&contactMaterialMap.get(materialA.id,materialB.id)||contactMaterials[0];}};}();materialLibrary.createContactMaterial(materialLibrary.createMaterial({name:'default'}),undefined,{friction:0.3,restitution:0.0});var composeTriangularKey=function composeTriangularKey(i,j){i|=0;j|=0;return i>j?(i*(i+1)>>1)+j-1:(j*(j+1)>>1)+i-1;};var OverlapMatrix=function OverlapMatrix(){var composeKey=arguments.length>0&&arguments[0]!==undefined?arguments[0]:composeTriangularKey;var frameThreshold=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var matrix=[],overlaps=[],additions=[],removals=[];return{allocate:function allocate(count){return matrix.length=composeKey(count,count-1);},get:function get(i,j){return matrix[composeKey(i,j)];},set:function set(i,j,frame){var key=composeKey(i,j),prevFrame=matrix[key];matrix[key]=frame;if(prevFrame===undefined||frame-prevFrame>frameThreshold){return true;}else{return false;}},clear:function clear(_){additions.length=0;removals.length=0;matrix.length=0;},get additions(){return additions;}};};factory.declare('physics',function(target,options){var bodies=[],constraints=[],overlapMatrix=OverlapMatrix();return{overlapMatrix:overlapMatrix,bodies:bodies,constraints:constraints,addConstraint:function addConstraint(constraint){return constraints.push(constraint);},removeConstraint:function removeConstraint(constraint){var idx=constraints.indexOf(constraint);if(idx==-1)return false;constraints.splice(idx,1);constraint.detach();},addBody:function addBody(body){if(!isNaN(body.index))return false;body.index=bodies.length;bodies.push(body);target.dispatchEvent('bodyAdded',body);return body;},removeBody:function removeBody(body){delete body.index;var idx=bodies.indexOf(body);if(idx===-1)return false;bodies.splice(idx,1);for(var i=bodies.length-1;i>=idx;i--){bodies[i].index=i;}target.dispatchEvent('bodyRemoved',body);}};});var ContactManifold=function ContactManifold(_){return{contactNormal:vec3$1(),contactPointA:vec3$1(),contactPointB:vec3$1()};};var ManifoldContext=function ManifoldContext(_){var contactPool=Pool(ContactManifold),context=Object.create(null);return Object.assign(context,{flip:false,material:null,bodyA:null,bodyB:null,shapeA:null,shapeB:null,worldPositionA:vec3$1(),worldPositionB:vec3$1(),worldRotationA:quat$1(),worldRotationB:quat$1(),contactPoints:[],contactNormal:vec3$1(),contactPointA:vec3$1(),contactPointB:vec3$1(),clear:function clear(_){if(context.contactPoints.length==0)return false;contactPool.release.apply(contactPool,context.contactPoints);context.contactPoints.length=0;},registerContact:function registerContact(_){var contact=contactPool.obtain();if(context.flip){vec3$1.negate(context.contactNormal,contact.contactNormal);vec3$1.subtract(context.contactPointB,context.bodyA.position,contact.contactPointA);vec3$1.subtract(context.contactPointA,context.bodyB.position,contact.contactPointB);}else{vec3$1.copy(context.contactNormal,contact.contactNormal);vec3$1.subtract(context.contactPointA,context.bodyA.position,contact.contactPointA);vec3$1.subtract(context.contactPointB,context.bodyB.position,contact.contactPointB);}context.contactPoints.push(contact);return contact;}});};var Jacobian=function Jacobian(_){return{spatial:vec3$1(),angular:vec3$1()};};Jacobian.multiply=function(a,b){return vec3$1.dot(a.spatial,b.spatial)+vec3$1.dot(a.angular,b.angular);};var Equation=function Equation(_){return Object.setPrototypeOf({id:Equation.prototype.globalCounter++,minForce:-1e6,maxForce:1e6,bodyA:null,bodyB:null,a:0.0,b:0.0,eps:0.0,jacobianElementA:Jacobian(),jacobianElementB:Jacobian()},Equation.prototype).setSpookParams(1e7,4,1/60);};Equation.prototype={globalCounter:0,setSpookParams:function setSpookParams(stiffness,relaxation,timeStep){this.a=4.0/(timeStep*(1+4*relaxation));this.b=4.0*relaxation/(1+4*relaxation);this.eps=4.0/(timeStep*timeStep*stiffness*(1+4*relaxation));return this;},computeRightHandSide:function computeRightHandSide(deltaTime){var GW=this.computeBodyVelocities(),Gq=this.computeBodyCoordinates(),GiMf=this.computeGiMf();return-Gq*this.a-GW*this.b-GiMf*deltaTime;},computeBodyCoordinates:function computeBodyCoordinates(){return vec3$1.dot(this.jacobianElementA.spatial,this.bodyA.position)+vec3$1.dot(this.jacobianElementB.spatial,this.bodyB.position);},computeBodyVelocities:function computeBodyVelocities(){var bodyA=this.bodyA,bodyB=this.bodyB,jacobianA=this.jacobianElementA,jacobianB=this.jacobianElementB;return vec3$1.dot(jacobianA.spatial,bodyA.velocity)+vec3$1.dot(jacobianA.angular,bodyA.angularVelocity)+vec3$1.dot(jacobianB.spatial,bodyB.velocity)+vec3$1.dot(jacobianB.angular,bodyB.angularVelocity);},computeGWlambda:function computeGWlambda(){var bodyA=this.bodyA,bodyB=this.bodyB,jacobianA=this.jacobianElementA,jacobianB=this.jacobianElementB;return vec3$1.dot(jacobianA.spatial,bodyA.vlambda)+vec3$1.dot(jacobianA.angular,bodyA.wlambda)+vec3$1.dot(jacobianB.spatial,bodyB.vlambda)+vec3$1.dot(jacobianB.angular,bodyB.wlambda);},computeDenominator:function computeDenominator(){return this.computeGiMGt()+this.eps;},computeGiMf:function computeGiMf(){var bodyA=this.bodyA,bodyB=this.bodyB,jacobianA=this.jacobianElementA,jacobianB=this.jacobianElementB,temp=vec3$1.temp;var out=0;if(bodyA.dynamic){out+=vec3$1.dot(jacobianA.spatial,vec3$1.scale(bodyA.force,bodyA.invMass,temp));out+=vec3$1.dot(jacobianA.angular,vec3$1.transformMat3(bodyA.torque,bodyA.invInertiaWorld,temp));}if(bodyB.dynamic){out+=vec3$1.dot(jacobianB.spatial,vec3$1.scale(bodyB.force,bodyB.invMass,temp));out+=vec3$1.dot(jacobianB.angular,vec3$1.transformMat3(bodyB.torque,bodyB.invInertiaWorld,temp));}return out;},computeGiMGt:function computeGiMGt(){var bodyA=this.bodyA,bodyB=this.bodyB,jacobianA=this.jacobianElementA,jacobianB=this.jacobianElementB,temp=vec3$1.temp;var out=0;if(bodyA.dynamic){out+=bodyA.invMass;out+=vec3$1.dot(jacobianA.angular,vec3$1.transformMat3(jacobianA.angular,bodyA.invInertiaWorld,temp));}if(bodyB.dynamic){out+=bodyB.invMass;out+=vec3$1.dot(jacobianB.angular,vec3$1.transformMat3(jacobianB.angular,bodyB.invInertiaWorld,temp));}return out;},addToWlambda:function addToWlambda(deltalambda){var bodyA=this.bodyA,bodyB=this.bodyB,jacobianA=this.jacobianElementA,jacobianB=this.jacobianElementB,temp=vec3$1.temp;if(bodyA.dynamic){vec3$1.scale(jacobianA.spatial,bodyA.invMass*deltalambda,temp);vec3$1.add(bodyA.vlambda,temp,bodyA.vlambda);vec3$1.transformMat3(jacobianA.angular,bodyA.invInertiaWorld,temp);vec3$1.scale(temp,deltalambda,temp);vec3$1.add(bodyA.wlambda,temp,bodyA.wlambda);}if(bodyB.dynamic){vec3$1.scale(jacobianB.spatial,bodyB.invMass*deltalambda,temp);vec3$1.add(bodyB.vlambda,temp,bodyB.vlambda);vec3$1.transformMat3(jacobianB.angular,bodyB.invInertiaWorld,temp);vec3$1.scale(temp,deltalambda,temp);vec3$1.add(bodyB.wlambda,temp,bodyB.wlambda);}}};var ContactEquation=function ContactEquation(_){return Object.setPrototypeOf(Object.assign(Equation(),{contactNormal:vec3$1(),contactPointA:vec3$1(),contactPointB:vec3$1(),minForce:0,maxForce:1e6,restitution:0.0}),ContactEquation.prototype);};ContactEquation.prototype=Object.setPrototypeOf({computeRightHandSide:function computeRightHandSide(deltaTime){var bodyA=this.bodyA,bodyB=this.bodyB,contactPointA=this.contactPointA,contactPointB=this.contactPointB,contactNormal=this.contactNormal,spatialA=this.jacobianElementA.spatial,spatialB=this.jacobianElementB.spatial,angularA=this.jacobianElementA.angular,angularB=this.jacobianElementB.angular,positionA=bodyA.position,positionB=bodyB.position;vec3$1.negate(contactNormal,spatialA);vec3$1.copy(contactNormal,spatialB);vec3$1.cross(contactPointA,spatialA,angularA);vec3$1.cross(contactPointB,spatialB,angularB);var peneterationX=positionB[0]+contactPointB[0]-positionA[0]-contactPointA[0],peneterationY=positionB[1]+contactPointB[1]-positionA[1]-contactPointA[1],peneterationZ=positionB[2]+contactPointB[2]-positionA[2]-contactPointA[2],g=contactNormal[0]*peneterationX+contactNormal[1]*peneterationY+contactNormal[2]*peneterationZ,e1=this.restitution+1,GW=e1*vec3$1.dot(bodyB.velocity,spatialB)+e1*vec3$1.dot(bodyA.velocity,spatialA)+vec3$1.dot(bodyB.angularVelocity,angularB)+vec3$1.dot(bodyA.angularVelocity,angularA),GiMf=this.computeGiMf();return-g*this.a-GW*this.b-deltaTime*GiMf;}},Equation.prototype);var FrictionEquation=function FrictionEquation(_){return Object.setPrototypeOf(Object.assign(Equation(),{contactTangent:vec3$1(),contactPointA:vec3$1(),contactPointB:vec3$1()}),FrictionEquation.prototype);};FrictionEquation.prototype=Object.setPrototypeOf({computeRightHandSide:function computeRightHandSide(deltaTime){var bodyA=this.bodyA,bodyB=this.bodyB,contactPointA=this.contactPointA,contactPointB=this.contactPointB,contactTangent=this.contactTangent,spatialA=this.jacobianElementA.spatial,spatialB=this.jacobianElementB.spatial,angularA=this.jacobianElementA.angular,angularB=this.jacobianElementB.angular;vec3$1.copy(contactTangent,spatialB);vec3$1.negate(contactTangent,spatialA);vec3$1.cross(contactPointB,spatialB,angularB);vec3$1.cross(contactPointA,spatialA,angularA);var GW=this.computeBodyVelocities(),GiMf=this.computeGiMf();return-GW*this.b-deltaTime*GiMf;}},Equation.prototype);var frictionEquationGenerator=function frictionEquationGenerator(frictionEquationPool,frictionEquations){return function(bodyA,bodyB,shapeA,shapeB,material,contactPoint,deltaTime,gravity){var friction=material.friction;if(friction<=0)return false;var g=friction*vec3$1.distance(gravity);var reducedMass=bodyA.invMass+bodyB.invMass;if(reducedMass>0)reducedMass=1.0/reducedMass;var slipForce=g*reducedMass;var equationA=frictionEquationPool.obtain();var equationB=frictionEquationPool.obtain();equationA.bodyA=equationB.bodyA=bodyA;equationA.bodyB=equationB.bodyB=bodyB;equationA.minForce=equationB.minForce=-slipForce;equationA.maxForce=equationB.maxForce=slipForce;vec3$1.copy(contactPoint.contactPointA,equationA.contactPointA);vec3$1.copy(contactPoint.contactPointA,equationB.contactPointA);vec3$1.copy(contactPoint.contactPointB,equationA.contactPointB);vec3$1.copy(contactPoint.contactPointB,equationB.contactPointB);vec3$1.extractTangents(contactPoint.contactNormal,equationA.contactTangent,equationB.contactTangent);equationA.setSpookParams(material.frictionEquationStiffness,material.frictionEquationRelaxation,deltaTime);equationB.setSpookParams(material.frictionEquationStiffness,material.frictionEquationRelaxation,deltaTime);frictionEquations.push(equationA,equationB);return true;};};var contactEquationGenerator=function contactEquationGenerator(contactEquationPool,contactEquations){return function(bodyA,bodyB,shapeA,shapeB,material,contactPoint,deltaTime){var equation=contactEquationPool.obtain();equation.bodyA=bodyA;equation.bodyB=bodyB;equation.restitution=material.restitution;equation.setSpookParams(material.contactEquationStiffness,material.contactEquationRelaxation,deltaTime);vec3$1.copy(contactPoint.contactNormal,equation.contactNormal);vec3$1.copy(contactPoint.contactPointA,equation.contactPointA);vec3$1.copy(contactPoint.contactPointB,equation.contactPointB);contactEquations.push(equation);return equation;};};var Narrowphase=function Narrowphase(collisionDetector,options){options=Object.assign({frictionReduction:false},options||{});var manifoldContext=ManifoldContext(),worldPositionA=manifoldContext.worldPositionA,worldPositionB=manifoldContext.worldPositionB,worldRotationA=manifoldContext.worldRotationA,worldRotationB=manifoldContext.worldRotationB,contactEquationPool=Pool(function(_){return ContactEquation();}),frictionEquationPool=Pool(function(_){return FrictionEquation();}),contactEquations=[],frictionEquations=[],generateContactEquation=contactEquationGenerator(contactEquationPool,contactEquations),generateFrictionEquation=frictionEquationGenerator(frictionEquationPool,frictionEquations);return{generateContactManifold:function generateContactManifold(bodyA,bodyB,material,contactRegistrator,_ref33){var deltaTime=_ref33.deltaTime,gravity=_ref33.gravity;manifoldContext.bodyA=bodyA;manifoldContext.bodyB=bodyB;manifoldContext.material=material;for(var shapesA=bodyA.shapes,a=shapesA.length-1;a>=0;a--){quat$1.multiply(bodyA.quaternion,bodyA.shapeOrientations[a],worldRotationA);vec3$1.transformQuat(bodyA.shapeOffsets[a],bodyA.quaternion,worldPositionA);vec3$1.add(bodyA.position,worldPositionA,worldPositionA);var shapeA=manifoldContext.shapeA=shapesA[a];for(var shapesB=bodyB.shapes,b=shapesB.length-1;b>=0;b--){quat$1.multiply(bodyB.quaternion,bodyB.shapeOrientations[b],worldRotationB);vec3$1.transformQuat(bodyB.shapeOffsets[b],bodyB.quaternion,worldPositionB);vec3$1.add(bodyB.position,worldPositionB,worldPositionB);var shapeB=manifoldContext.shapeB=shapesB[b];if(vec3$1.differenceSquared(worldPositionA,worldPositionB)>Math.pow(shapeA.boundingSphereRadius+shapeB.boundingSphereRadius,2))continue;if(material.collisionResponse){collisionDetector.test(manifoldContext,shapeA,shapeB,worldPositionA,worldPositionB,worldRotationA,worldRotationB,false);for(var i=manifoldContext.contactPoints.length-1;i>=0;i--){var equation=generateContactEquation(bodyA,bodyB,shapeA,shapeB,material,manifoldContext.contactPoints[i],deltaTime);if(!options.frictionReduction)generateFrictionEquation(bodyA,bodyB,shapeA,shapeB,material,manifoldContext.contactPoints[i],deltaTime,gravity);}if(options.frictionReduction&&manifoldContext.contactPoints.length){var averageContactPoint=manifoldContext.contactPoints[0];var invCount=1.0/manifoldContext.contactPoints.length;for(var _i42=manifoldContext.contactPoints.length-1;_i42>0;_i42--){vec3$1.add(averageContactPoint.contactNormal,manifoldContext.contactPoints[_i42].contactNormal);vec3$1.add(averageContactPoint.contactPointA,manifoldContext.contactPoints[_i42].contactPointA);vec3$1.add(averageContactPoint.contactPointB,manifoldContext.contactPoints[_i42].contactPointB);}vec3$1.normalize(averageContactPoint.contactNormal,averageContactPoint.contactNormal);vec3$1.scale(averageContactPoint.contactPointA,invCount,averageContactPoint.contactPointA);vec3$1.scale(averageContactPoint.contactPointB,invCount,averageContactPoint.contactPointB);generateFrictionEquation(bodyA,bodyB,shapeA,shapeB,material,averageContactPoint,deltaTime,gravity);}if(manifoldContext.contactPoints.length)contactRegistrator(bodyA,bodyB,shapeA,shapeB,manifoldContext);}else if(collisionDetector.test(manifoldContext,shapeA,shapeB,worldPositionA,worldPositionB,worldRotationA,worldRotationB,true))contactRegistrator(bodyA,bodyB,shapeA,shapeB);manifoldContext.clear();}}},get contactEquations(){return contactEquations;},get frictionEquations(){return frictionEquations;},clear:function clear(_){contactEquationPool.release.apply(contactEquationPool,contactEquations);frictionEquationPool.release.apply(frictionEquationPool,frictionEquations);contactEquations.length=0;frictionEquations.length=0;}};};var DefaultNarrowphase=function DefaultNarrowphase(_){return Narrowphase(collisionDetector);};var GaussSeidelSolver=function GaussSeidelSolver(options){options=Object.assign({iterations:10,tolerance:1e-7},options||{});var invDenominators=[],rightHandSideValues=[],lambdas=[];return{get tolerance(){return options.tolerance;},get iterations(){return options.iterations;},set tolerance(value){options.tolerance=value;},set iterations(value){options.iterations=value;},solve:function solve(equations,bodies,deltaTime){var toleranceSquared=options.tolerance*options.tolerance,maxIterations=options.iterations,equationCount=invDenominators.length=rightHandSideValues.length=lambdas.length=equations.length;var iteration=0;if(equationCount==0)return 0;for(var i=bodies.length-1;i>=0;i--){vec3$1.copy(vec3$1.ZERO,bodies[i].vlambda);vec3$1.copy(vec3$1.ZERO,bodies[i].wlambda);}for(var _i43=0;_i43<equationCount;_i43++){var equation=equations[_i43];lambdas[_i43]=0.0;rightHandSideValues[_i43]=equation.computeRightHandSide(deltaTime);invDenominators[_i43]=1.0/equation.computeDenominator();}for(iteration=0;iteration<maxIterations;iteration++){var totalError=0.0;for(var _i44=0;_i44<equationCount;_i44++){var _equation=equations[_i44],rhs=rightHandSideValues[_i44],invDenominator=invDenominators[_i44],lambda=lambdas[_i44],GWlambda=_equation.computeGWlambda(),deltalambda=invDenominator*(rhs-GWlambda-_equation.eps*lambda);deltalambda=Math.clamp(deltalambda,_equation.minForce-lambda,_equation.maxForce-lambda);lambdas[_i44]+=deltalambda;totalError+=Math.abs(deltalambda);_equation.addToWlambda(deltalambda);}if(totalError*totalError<toleranceSquared)break;}for(var _i45=bodies.length-1;_i45>=0;_i45--){var body=bodies[_i45];vec3$1.multiply(body.vlambda,body.linearFactor,body.vlambda);vec3$1.add(body.velocity,body.vlambda,body.velocity);vec3$1.multiply(body.wlambda,body.angularFactor,body.wlambda);vec3$1.add(body.angularVelocity,body.wlambda,body.angularVelocity);}return iteration;}};};var breadthFirstSearch=function(queue){return function(root,visitFunction){if(!visitFunction(root))return false;queue.push(root);while(queue.length){var node=queue.pop();for(var i=node.children.length-1;i>=0;i--){if(visitFunction(node.children[i]))queue.push(node.children[i]);}}return true;};}([]);var SolverNode=function SolverNode(_){return{body:null,children:[],equations:[],visited:false};};var IslandSplitSolver=function IslandSplitSolver(subsolver,options){options=Object.assign({iterations:10,tolerance:1e-7,nodePoolLength:128/4},options||{});var nodePool=Pool(function(_){return SolverNode();}),nodes=[],islandBodies=[],islandEquations=[],bodyIdMap=[],visitFunction=function visitFunction(node){if(node.visited||!node.body.dynamic)return false;node.visited=true;islandBodies.push(node.body);for(var i=node.equations.length-1;i>=0;i--){var equation=node.equations[i];if(islandEquations.indexOf(equation)!==-1)continue;islandEquations.push(equation);}return true;};nodePool.allocate(options.nodePoolLength);return{get tolerance(){return options.tolerance;},get iterations(){return options.iterations;},set tolerance(value){options.tolerance=value;},set iterations(value){options.iterations=value;},solve:function solve(equations,bodies,deltaTime){var bodyCount=bodies.length,equationCount=equations.length;for(var i=0;i<bodyCount;i++){var node=nodes[i]||(nodes[i]=nodePool.obtain());node.body=bodies[i];bodyIdMap[node.body.index]=i;node.children.length=0;node.equations.length=0;node.visited=false;}for(var _i46=0;_i46<equationCount;_i46++){var equation=equations[_i46],idxA=bodyIdMap[equation.bodyA.index],idxB=bodyIdMap[equation.bodyB.index],nodeA=nodes[idxA],nodeB=nodes[idxB];nodeA.children.push(nodeB);nodeB.children.push(nodeA);nodeA.equations.push(equation);nodeB.equations.push(equation);}subsolver.tolerance=options.tolerance;subsolver.iterations=options.iterations;var iteration=0;for(var _i47=0;_i47<bodyCount;_i47++){var child=nodes[_i47];if(!breadthFirstSearch(child,visitFunction,SolverNode.visitNode))continue;subsolver.solve(islandEquations.sort(function(a,b){return b.id-a.id;}),islandBodies,deltaTime);islandEquations.length=0;islandBodies.length=0;iteration++;}return iteration;}};};var DefaultSolver=function DefaultSolver(_){return GaussSeidelSolver();};factory.declare('physics',function(target,options){var broadphase=options.broadphase||DefaultBroadphase(),narrowphase=options.narrowphase||DefaultNarrowphase(),solver=options.solver||DefaultSolver(),equations=[];var frame=0;target.addEventListener('bodyAdded',broadphase.add.bind(broadphase));target.addEventListener('bodyRemoved',broadphase.remove.bind(broadphase));var collisionEvent={bodyA:null,bodyB:null,shapeA:null,shapeB:null,contactManifold:null};var pairs1=[],pairs2=[];var collisionPairs={clear:function clear(_){pairs1.length=0;pairs2.length=0;},add:function add(a,b){pairs1.push(a);pairs2.push(b);}};return{get narrowphase(){return narrowphase;},get solver(){return solver;},get broadphase(){return broadphase;},contactRegistrator:function contactRegistrator(bodyA,bodyB,shapeA,shapeB,contactManifold){collisionEvent.bodyA=bodyA;collisionEvent.bodyB=bodyB;collisionEvent.shapeA=shapeA;collisionEvent.shapeB=shapeB;collisionEvent.contactManifold=contactManifold;target.dispatchEvent('collision',collisionEvent);if(target.overlapMatrix.set(bodyA.index,bodyB.index,frame)){bodyA.dispatchEvent('collision',collisionEvent);bodyB.dispatchEvent('collision',collisionEvent);}},simulate:function simulate(event){frame=event.frame;target.dispatchEvent('preStep',event);narrowphase.clear();broadphase.queryCandidates(collisionPairs);for(var i=pairs1.length-1;i>=0;i--){var bodyA=pairs1[i],bodyB=pairs2[i],material=materialLibrary.getContactMaterial(bodyA.material,bodyB.material);narrowphase.generateContactManifold(bodyA,bodyB,material,target.contactRegistrator,{deltaTime:event.deltaTime,gravity:target.gravity});}collisionPairs.clear();var contactEquations=narrowphase.contactEquations;var frictionEquations=narrowphase.frictionEquations;equations.length=0;equations.push.apply(equations,frictionEquations);equations.push.apply(equations,contactEquations);for(var _i48=target.constraints.length-1;_i48>=0;_i48--){var constraint=target.constraints[_i48];if(!constraint.enabled)continue;constraint.update();equations.push.apply(equations,constraint.equations);}target.dispatchEvent('preSolve',event);solver.solve(equations,target.bodies,event.deltaTime);target.dispatchEvent('preIntegrate',event);target.integrate(event);target.dispatchEvent('postIntegrate',event);target.dispatchEvent('postStep',event);}};});var _integrate=function _integrate(body,deltaTime,quaternionNormalization){if(!body.dynamic)return false;var position=body.position,quaternion=body.quaternion,velocity=body.velocity,angularVelocity=body.angularVelocity,force=body.force,torque=body.torque,linearFactor=body.linearFactor,angularFactor=body.angularFactor,invInertia=body.invInertiaWorld,invTimeMass=body.invMass*deltaTime;vec3$1.copy(position,body.previousPosition);vec3$1.copy(quaternion,body.previousQuaternion);velocity[0]+=force[0]*linearFactor[0]*invTimeMass;velocity[1]+=force[1]*linearFactor[1]*invTimeMass;velocity[2]+=force[2]*linearFactor[2]*invTimeMass;var rqx=torque[0]*angularFactor[0],rqy=torque[1]*angularFactor[1],rqz=torque[2]*angularFactor[2];angularVelocity[0]+=deltaTime*(invInertia[0]*rqx+invInertia[1]*rqy+invInertia[2]*rqz);angularVelocity[1]+=deltaTime*(invInertia[3]*rqx+invInertia[4]*rqy+invInertia[5]*rqz);angularVelocity[2]+=deltaTime*(invInertia[6]*rqx+invInertia[7]*rqy+invInertia[8]*rqz);position[0]+=velocity[0]*deltaTime;position[1]+=velocity[1]*deltaTime;position[2]+=velocity[2]*deltaTime;var ax=angularVelocity[0]*angularFactor[0],ay=angularVelocity[1]*angularFactor[1],az=angularVelocity[2]*angularFactor[2],halfDeltaTime=0.5*deltaTime,qx=quaternion[0],qy=quaternion[1],qz=quaternion[2],qw=quaternion[3];quaternion[0]+=halfDeltaTime*(ax*qw+ay*qz-az*qy);quaternion[1]+=halfDeltaTime*(ay*qw+az*qx-ax*qz);quaternion[2]+=halfDeltaTime*(az*qw+ax*qy-ay*qx);quaternion[3]+=halfDeltaTime*(-ax*qx-ay*qy-az*qz);if(quaternionNormalization)quaternionNormalization(quaternion,quaternion);body.worldAABB.dirty=true;if(body.invInertia[0]!=body.invInertia[1]||body.invInertia[0]!=body.invInertia[2])body.cachedInvInertiaWorld.dirty=true;};factory.declare('physics',function(target,options){options=Object.assign({normalizationFrequency:1,normalizationFunction:quat$1.normalize},options||{});var gravity=vec3$1.copy(options.gravity||vec3$1());target.addEventListener('preStep',function(event){for(var i=target.bodies.length-1;i>=0;i--){var body=target.bodies[i];if(!body.dynamic)continue;var mass=body.mass,force=body.force;force[0]+=mass*gravity[0];force[1]+=mass*gravity[1];force[2]+=mass*gravity[2];}});target.addEventListener('preIntegrate',function(event){for(var i=target.bodies.length-1;i>=0;i--){var body=target.bodies[i];if(!body.dynamic)continue;var linearDamping=Math.pow(1.0-body.linearDamping,event.deltaTime);var velocity=body.velocity;vec3$1.scale(velocity,linearDamping,velocity);var angularVelocity=body.angularVelocity;if(!angularVelocity)continue;var angularDamping=Math.pow(1.0-body.angularDamping,event.deltaTime);vec3$1.scale(angularVelocity,angularDamping,angularVelocity);}});return{gravity:gravity,integrate:function integrate(event){var quaternionNormalization=event.frame%options.normalizationFrequency?null:options.normalizationFunction;for(var i=target.bodies.length-1;i>=0;i--){var body=target.bodies[i];_integrate(body,event.deltaTime,quaternionNormalization);vec3$1.copy(vec3$1.ZERO,body.force);vec3$1.copy(vec3$1.ZERO,body.torque);}}};});factory.declare('physics',function(target,options){var _Raytracer;return{raycast:Raytracer(target,(_Raytracer={},_defineProperty(_Raytracer,SHAPE_TYPE.SPHERE,raySphere),_defineProperty(_Raytracer,SHAPE_TYPE.CONVEX,rayConvex),_defineProperty(_Raytracer,SHAPE_TYPE.PLANE,rayPlane),_defineProperty(_Raytracer,SHAPE_TYPE.BOX,rayBox),_Raytracer))};});var RigidBody=function RigidBody(options){var body=Object.assign(Object.create(RigidBody.prototype),{mass:0,linearDamping:1e-1,angularDamping:1e-1,linearFactor:vec3$1(1,1,1),angularFactor:vec3$1(1,1,1),position:vec3$1(),quaternion:quat$1(),fixedRotation:false},options||{});body.vlambda=vec3$1();body.wlambda=vec3$1();body.velocity=vec3$1();body.angularVelocity=vec3$1();body.force=vec3$1();body.torque=vec3$1();body.invMass=body.mass?1.0/body.mass:0;body.previousPosition=vec3$1.copy(body.position);body.interpolatedPosition=vec3$1.copy(body.position);body.previousQuaternion=quat$1.copy(body.quaternion);body.interpolatedQuaternion=quat$1.copy(body.quaternion);body.shapes=[];body.shapeOffsets=[];body.shapeOrientations=[];body.inertia=vec3$1();body.cachedInvInertia=vec3$1();body.cachedInvInertia.dirty=true;body.cachedInvInertiaWorld=mat3();body.cachedInvInertiaWorld.dirty=true;body.worldAABB=AABB();body.worldAABB.dirty=true;body.combinedBoundingRadius=0;body.joints=[];return Object.assign(body,EventEmitter());};RigidBody.prototype={tempVec3:vec3$1(),tempQuat:quat$1(),tempAABB:AABB(),get dynamic(){return!!this.mass;},addShape:function addShape(shape){var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec3$1();var orientation=arguments.length>2&&arguments[2]!==undefined?arguments[2]:quat$1();this.shapes.push(shape);this.shapeOffsets.push(offset);this.shapeOrientations.push(orientation);this.combinedBoundingRadius=0;this.worldAABB.dirty=true;this.cachedInvInertiaWorld.dirty=true;return this;},removeShape:function removeShape(shape){var idx=this.shapes.indexOf(shape);if(idx==-1)return false;this.shapes.splice(idx,1);this.shapeOffsets.splice(idx,1);this.shapeOrientations.splice(idx,1);this.combinedBoundingRadius=0;this.worldAABB.dirty=true;this.cachedInvInertiaWorld.dirty=true;return this;},get boundingSphereRadius(){if(this.combinedBoundingRadius)return this.combinedBoundingRadius;for(var i=this.shapes.length-1;i>=0;i--){var radius=vec3$1.distance(this.shapeOffsets[i])+this.shapes[i].boundingSphereRadius;if(radius>this.combinedBoundingRadius)this.combinedBoundingRadius=radius;}return this.combinedBoundingRadius;},get aabb(){if(!this.worldAABB.dirty)return this.worldAABB;var aabb=this.worldAABB,worldPosition=this.tempVec3,worldRotation=this.tempQuat,shapeAABB=this.tempAABB;vec3$1.copy(vec3$1.MAX,aabb.lowerBound);vec3$1.copy(vec3$1.MIN,aabb.upperBound);for(var i=this.shapes.length-1;i>=0;i--){var shape=this.shapes[i];vec3$1.transformQuat(this.shapeOffsets[i],this.quaternion,worldPosition);vec3$1.add(worldPosition,this.position,worldPosition);quat$1.multiply(this.shapeOrientations[i],this.quaternion,worldRotation);shape.calculateWorldAABB(worldPosition,worldRotation,shapeAABB.lowerBound,shapeAABB.upperBound);AABB.extend(shapeAABB,aabb,aabb);}aabb.dirty=false;return aabb;},get invInertia(){if(!this.cachedInvInertia.dirty)return this.cachedInvInertia;var inertia=this.inertia,invInertia=this.cachedInvInertia,fixedRotation=this.fixedRotation,shapeInertia=this.tempVec3;vec3$1.copy(vec3$1.ZERO,inertia);for(var i=this.shapes.length-1;i>=0;i--){this.shapes[i].calculateLocalInertia(this.mass,shapeInertia);vec3$1.transformQuat(shapeInertia,this.shapeOrientations[i],shapeInertia);vec3$1.add(shapeInertia,this.shapeOffsets[i],shapeInertia);vec3$1.add(inertia,shapeInertia,inertia);}vec3$1.set(inertia[0]>0&&!fixedRotation?1.0/inertia[0]:0,inertia[1]>0&&!fixedRotation?1.0/inertia[1]:0,inertia[2]>0&&!fixedRotation?1.0/inertia[2]:0,invInertia);invInertia.dirty=false;return invInertia;},get invInertiaWorld(){if(!this.cachedInvInertiaWorld.dirty)return this.cachedInvInertiaWorld;var invInertia=this.invInertia,invInertiaWorld=this.cachedInvInertiaWorld;var temp=mat3.fromQuat(this.quaternion,mat3.temp);mat3.transpose(temp,invInertiaWorld);mat3.scale(temp,invInertia,temp);mat3.multiply(temp,invInertiaWorld,invInertiaWorld);invInertiaWorld.dirty=false;return invInertiaWorld;},applyForce:function applyForce(force,relativePoint){if(!this.dynamic)return false;vec3$1.add(this.force,force,this.force);var angularForce=vec3$1.cross(relativePoint,force,vec3$1.temp);vec3$1.add(this.torque,angularForce,this.torque);},applyImpulse:function applyImpulse(impulse,relativePoint){if(!this.dynamic)return false;var temp=vec3$1.temp,invInertiaWorld=this.invInertiaWorld;vec3$1.scale(impulse,this.invMass,temp);vec3$1.add(this.velocity,temp,this.velocity);vec3$1.cross(relativePoint,impulse,temp);vec3$1.transformMat3(temp,invInertiaWorld,temp);this.invInertiaWorld.vmult(temp,temp);vec3$1.add(this.angularVelocity,temp,this.angularVelocity);},applyLocalForce:function applyLocalForce(force,point){if(!this.dynamic)return false;Transform.vectorToWorldFrame(force,this.position,this.quaternion,force);Transform.pointToWorldFrame(point,this.position,this.quaternion,point);return this.applyForce(force,point);},applyLocalImpulse:function applyLocalImpulse(impulse,point){if(!this.dynamic)return false;Transform.vectorToWorldFrame(impulse,this.position,this.quaternion,impulse);Transform.pointToWorldFrame(point,this.position,this.quaternion,point);return this.applyImpulse(impulse,point);},getVelocityAtWorldPoint:function getVelocityAtWorldPoint(worldPoint){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec3$1();vec3$1.subtract(worldPoint,this.position,out);vec3$1.cross(this.angularVelocity,out,out);vec3$1.add(this.velocity,out,out);return out;}};Object.defineProperty(RigidBody.prototype,'dynamic',{get:function(base){return function(){if(this.sleeping)return false;return base.call(this);};}(Object.getOwnPropertyDescriptor(RigidBody.prototype,'dynamic').get)});factory.declare('physics',function(target,options){options=Object.assign({allowSleep:!true,sleepSpeedLimit:0.1,sleepTimeLimit:1},options||{});if(!options.allowSleep)return false;var wakeUp=function wakeUp(body){body.sleeping=false;body.sleepTimer=options.sleepTimeLimit;for(var i=body.joints.length-1;i>=0;i--){var joint=body.joints[i];if(!joint.awakeConnected)continue;var oppositeBody=joint.bodyA===body?joint.bodyB:joint.bodyA;if(oppositeBody.sleeping)wakeUp(oppositeBody);}};var putToSleep=function putToSleep(body){body.sleeping=true;vec3$1.copy(vec3$1.ZERO,body.velocity);vec3$1.copy(vec3$1.ZERO,body.angularVelocity);};target.addEventListener('bodyAdded',function(body){body.sleepTimer=options.sleepTimeLimit;});target.addEventListener('collision',function(event){var bodyA=event.bodyA,bodyB=event.bodyB,speedLimitSquared=2*options.sleepSpeedLimit*options.sleepSpeedLimit;if(bodyA.sleeping&&bodyB.dynamic&&!bodyB.sleeping){var speedSquared=vec3$1.distanceSquared(bodyB.velocity)+vec3$1.distanceSquared(bodyB.angularVelocity);if(speedSquared>=speedLimitSquared)bodyA.wakeUpFlag=true;}if(bodyB.sleeping&&bodyA.dynamic&&!bodyA.sleeping){var _speedSquared=vec3$1.distanceSquared(bodyA.velocity)+vec3$1.distanceSquared(bodyA.angularVelocity);if(_speedSquared>=speedLimitSquared)bodyB.wakeUpFlag=true;}});target.addEventListener('preSolve',function(event){for(var i=target.bodies.length-1;i>=0;i--){var body=target.bodies[i];if(!body.wakeUpFlag)continue;wakeUp(body);body.wakeUpFlag=false;}});target.addEventListener('postStep',function(event){var deltaTime=event.deltaTime,speedLimitSquared=2*options.sleepSpeedLimit*options.sleepSpeedLimit;for(var i=target.bodies.length-1;i>=0;i--){var body=target.bodies[i];if(!body.dynamic&&!body.sleeping)continue;var speedSquared=vec3$1.distanceSquared(body.velocity)+vec3$1.distanceSquared(body.angularVelocity);if(body.sleeping&&speedSquared>speedLimitSquared)wakeUp(body);else if(!body.sleeping)if(speedSquared>=speedLimitSquared)body.sleepTimer=options.sleepTimeLimit;else if((body.sleepTimer-=deltaTime)<=0)putToSleep(body);}});return{};});var PairsArray$1=function PairsArray$1(){var array=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];return{add:function add(a,b){return array.push([a,b]);},next:function next(_){return array.pop();}};};var checkCollisionFlags=function checkCollisionFlags(bodyA,bodyB){if(!bodyA.dynamic&&!bodyB.dynamic)return false;var material=materialLibrary.getContactMaterial(bodyA.material,bodyB.material);var jointIterationCost=bodyA.joints.length<bodyB.joints.length,joints=jointIterationCost?bodyA.joints:bodyB.joints;if(!jointIterationCost)bodyB=bodyA;for(var i=joints.length-1;i>=0;i--){var joint=joints[i];if(joint.collisionResponse)continue;if(joint.bodyA===bodyB||joint.bodyB===bodyB)return false;}return true;};var testAABBCollision=function testAABBCollision(bodyA,bodyB){var aabbA=bodyA.aabb,aabbB=bodyB.aabb;return AABB.overlap(aabbA,aabbB);};var testBoundingSphereCollision=function testBoundingSphereCollision(bodyA,bodyB){var combinedRadius=bodyA.boundingSphereRadius+bodyB.boundingSphereRadius;return vec3$1.differenceSquared(bodyA.position,bodyB.position)<combinedRadius*combinedRadius;};var BruteForceBroadphase=function BruteForceBroadphase(_ref34){var checkCollisionFlags$$1=_ref34.checkCollisionFlags,testCollision=_ref34.testCollision;var bodies=[];return{add:function add(body){if(bodies.indexOf(body)!==-1)return false;bodies.push(body);},remove:function remove(body){var index=bodies.indexOf(body);if(index===-1)return false;bodies.splice(index,1);},queryCandidates:function queryCandidates(){var pairs=arguments.length>0&&arguments[0]!==undefined?arguments[0]:PairsArray$1();for(var a=bodies.length-1;a>0;a--){for(var b=a-1,bodyA=bodies[a];b>=0;b--){var bodyB=bodies[b];if(!checkCollisionFlags$$1(bodyA,bodyB))continue;if(testCollision(bodyA,bodyB))pairs.add(bodyA,bodyB);}}return pairs;},aabbQuery:function aabbQuery(aabb){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];for(var i=bodies.length-1;i>=0;i--){if(AABB.overlap(bodies[i].aabb,aabb))out.push(bodies[i]);}return out;}};};var insertionSort=function insertionSort(array,comparator){for(var length=array.length,i=1;i<length;i++){var j=void 0,item=array[i];for(j=i-1;j>=0;j--){if(comparator(array[j],item)>=0)break;array[j+1]=array[j];}array[j+1]=item;}return array;};var SimpleSAPBroadphase=function SimpleSAPBroadphase(_ref35){var checkCollisionFlags$$1=_ref35.checkCollisionFlags,testCollision=_ref35.testCollision;var bodies=[];var checkBounds=function checkBounds(bodyA,bodyB,axisIndex){return bodyB.aabb.lowerBound[axisIndex]<bodyA.aabb.upperBound[axisIndex];};var sortList=function sortList(list,axisIndex){return insertionSort(list,function(a,b){return b.aabb.lowerBound[axisIndex]-a.aabb.lowerBound[axisIndex];});};var axisIndex=0;return{add:function add(body){if(bodies.indexOf(body)!==-1)return false;bodies.push(body);},remove:function remove(body){var index=bodies.indexOf(body);if(index===-1)return false;bodies.splice(index,1);},queryCandidates:function queryCandidates(){var pairs=arguments.length>0&&arguments[0]!==undefined?arguments[0]:PairsArray$1();sortList(bodies,axisIndex);for(var length=bodies.length,a=0;a<length;a++){for(var b=a+1,bodyA=bodies[a];b<length;b++){var bodyB=bodies[b];if(!checkBounds(bodyA,bodyB,axisIndex))break;if(!checkCollisionFlags$$1(bodyA,bodyB))continue;if(testCollision(bodyA,bodyB))pairs.add(bodyA,bodyB);}}return pairs;},aabbQuery:function aabbQuery(aabb){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];sortList(bodies,axisIndex);for(var length=bodies.length,i=0;i<length;i++){var body=bodies[i];if(AABB.overlap(body.aabb,aabb))result.push(body);}return out;},autoDetectAxis:function autoDetectAxis(_){var totalX=0,totalSquaredX=0,totalY=0,totalSquaredY=0,totalZ=0,totalSquaredZ=0;for(var i=bodies.length-1;i>=0;i--){var body=bodies[i],positionX=body.position[0],positionY=body.position[1],positionZ=body.position[2];totalX+=positionX;totalY+=positionY;totalZ+=positionZ;totalSquaredX+=positionX*positionX;totalSquaredY+=positionY*positionY;totalSquaredZ+=positionZ*positionZ;}var invLength=1.0/bodies.length,varianceX=totalSquaredX-totalX*totalX*invLength,varianceY=totalSquaredY-totalY*totalY*invLength,varianceZ=totalSquaredZ-totalZ*totalZ*invLength,varianceMax=Math.max(varianceX,varianceY,varianceZ);if(varianceX==varianceMax)return axisIndex=0;if(varianceY==varianceMax)return axisIndex=1;if(varianceZ==varianceMax)return axisIndex=2;}};};var SAPMarker=function SAPMarker(value,pointer,sign,connections){return{value:value,pointer:pointer,sign:sign,connections:connections,prev:null};};var SAPAxis=function SAPAxis(_){var markers=[];var stack=[];return{markers:markers,get count(){return markers.length;},addMarker:function addMarker(min,max,pointer,connections){var lowerMarker=SAPMarker(min,pointer,-1,connections);var upperMarker=SAPMarker(max,pointer,+1,connections);markers.push(lowerMarker,upperMarker);connections.push(lowerMarker,upperMarker);},removeMarker:function removeMarker(pointer){for(var i=markers.length-1;i>=0;i--){if(markers[i].pointer===pointer)markers.splice(i,1);}},sort:function sort(_){var length=markers.length;insertion_sort:{var threshold=0;while(length>>++threshold!=0){}threshold*=length>>2;for(var i=1;i<length;i++){var j=void 0,marker=markers[i],pivot=marker.value;for(j=i-1;j>=0;j--){if(markers[j].value<=pivot)break;markers[j+1]=markers[j];}markers[j+1]=marker;if((threshold-=i-j)<0)break insertion_sort;}return true;}quick_sort:{stack.push(0,length-1);while(stack.length){var right=stack.pop(),left=stack.pop(),_pivot=markers[left+right>>1].value,_i49=left,_j2=right;while(_i49<=_j2){while(markers[_i49].value<_pivot){_i49++;}while(markers[_j2].value>_pivot){_j2--;}if(_i49>_j2)break;var temp=markers[_i49];markers[_i49]=markers[_j2];markers[_j2]=temp;_i49++;_j2--;}if(_i49<right)stack.push(_i49,right);if(left<_i49-1)stack.push(left,_i49-1);}return true;}},calculateTestCount:function calculateTestCount(_){var count=1,total=0;for(var length=markers.length,i=1;i<length;i++){markers[i].sign>0?count--:total+=count++;}return total;}};};var SweepAndPruneBroadphase=function SweepAndPruneBroadphase(_ref36){var checkCollisionFlags$$1=_ref36.checkCollisionFlags,testCollision=_ref36.testCollision;var broadphase=Object.create(null);var dynamicAxes=[SAPAxis(),SAPAxis(),SAPAxis()];var staticAxes=[SAPAxis(),SAPAxis(),SAPAxis()];var linkedQueue=[{prev:null},{prev:null}];var index0=0,index1=1,index2=2;return Object.assign(broadphase,{update:function update(_){var staticMarkers=staticAxes[0].markers,dynamicMarkers=dynamicAxes[0].markers;for(var i=staticMarkers.length-1;i>=0;i--){var marker=staticMarkers[i];if(marker.sign>0)continue;if(!marker.pointer.dynamic)continue;broadphase.remove(marker.pointer,false);broadphase.add(marker.pointer);}for(var _i50=dynamicMarkers.length-1;_i50>=0;_i50--){var _marker=dynamicMarkers[_i50];if(_marker.sign>0)continue;if(_marker.pointer.dynamic){var body=_marker.pointer,connections=_marker.connections;connections[0].value=body.aabb.lowerBound[0];connections[1].value=body.aabb.upperBound[0];connections[2].value=body.aabb.lowerBound[1];connections[3].value=body.aabb.upperBound[1];connections[4].value=body.aabb.lowerBound[2];connections[5].value=body.aabb.upperBound[2];}else{broadphase.remove(_marker.pointer,true);broadphase.add(_marker.pointer);}}},add:function add(body){var dynamic=arguments.length>1&&arguments[1]!==undefined?arguments[1]:body.dynamic;var connections=[];if(dynamic){dynamicAxes[0].addMarker(body.aabb.lowerBound[0],body.aabb.upperBound[0],body,connections);dynamicAxes[1].addMarker(body.aabb.lowerBound[1],body.aabb.upperBound[1],body,connections);dynamicAxes[2].addMarker(body.aabb.lowerBound[2],body.aabb.upperBound[2],body,connections);}else{staticAxes[0].addMarker(body.aabb.lowerBound[0],body.aabb.upperBound[0],body,connections);staticAxes[1].addMarker(body.aabb.lowerBound[1],body.aabb.upperBound[1],body,connections);staticAxes[2].addMarker(body.aabb.lowerBound[2],body.aabb.upperBound[2],body,connections);}},remove:function remove(body){var dynamic=arguments.length>1&&arguments[1]!==undefined?arguments[1]:body.dynamic;if(dynamic){dynamicAxes[0].removeMarker(body);dynamicAxes[1].removeMarker(body);dynamicAxes[2].removeMarker(body);}else{staticAxes[0].removeMarker(body);staticAxes[1].removeMarker(body);staticAxes[2].removeMarker(body);}},queryCandidates:function queryCandidates(){var pairs=arguments.length>0&&arguments[0]!==undefined?arguments[0]:PairsArray$1();broadphase.update();var axis0=dynamicAxes[index0],axis1=dynamicAxes[index1];axis0.sort();axis1.sort();if(axis0.calculateTestCount()>=axis1.calculateTestCount())index0=index1+(index1=index0,0);var dynamicAxis=dynamicAxes[index0],staticAxis=staticAxes[index0];staticAxis.sort();linkedQueue[0].prev=null;linkedQueue[1].prev=null;for(var marker,queueIndex,s=0,d=0;d<dynamicAxis.count;){queueIndex=+(s==staticAxis.count||staticAxis.markers[s].value>=dynamicAxis.markers[d].value);marker=queueIndex?dynamicAxis.markers[d++]:staticAxis.markers[s++];if(marker.sign>0){var min=marker.connections[index0*2],prev=void 0,node=linkedQueue[queueIndex];while(prev=node.prev){if(prev===min){node.prev=min.prev;min.prev=null;break;}node=prev;}continue;}var connections=marker.connections,bodyA=marker.pointer;for(var _node=linkedQueue[1].prev;_node!=null;_node=_node.prev){if(connections[index1*2]>_node.connections[index1*2+1]||connections[index1*2+1]<_node.connections[index1*2]||connections[index2*2]>_node.connections[index2*2+1]||connections[index2*2+1]<_node.connections[index2*2])continue;if(!checkCollisionFlags$$1(bodyA,_node.pointer))continue;if(testCollision(bodyA,_node.pointer))pairs.add(bodyA,_node.pointer);}if(queueIndex)for(var _node2=linkedQueue[0].prev;_node2!=null;_node2=_node2.prev){if(connections[index1*2]>_node2.connections[index1*2+1]||connections[index1*2+1]<_node2.connections[index1*2]||connections[index2*2]>_node2.connections[index2*2+1]||connections[index2*2+1]<_node2.connections[index2*2])continue;if(!checkCollisionFlags$$1(bodyA,_node2.pointer))continue;if(testCollision(bodyA,_node2.pointer))pairs.add(bodyA,_node2.pointer);}marker.prev=linkedQueue[queueIndex].prev;linkedQueue[queueIndex].prev=marker;}index1=index2+(index2=index1,0);return pairs;}});};var UniformGridBroadphase=function UniformGridBroadphase(_ref37){var checkCollisionFlags=_ref37.checkCollisionFlags,testCollision=_ref37.testCollision;var dimensions=vec3$1.copy([10,10,10]),aabbMin=vec3$1.copy([100,100,100]),aabbMax=vec3$1.copy([-100,-100,-100]);var binCount=dimensions[0]*dimensions[1]*dimensions[2];var bins=Array(binCount).fill().map(function(_){return[];}),binSizes=Array(binCount).fill(0),bodies=[];return{add:function add(body){if(bodies.indexOf(body)!==-1)return false;bodies.push(body);},remove:function remove(body){var index=bodies.indexOf(body);if(index===-1)return false;bodies.splice(index,1);},queryCandidates:function queryCandidates(){var pairs=arguments.length>0&&arguments[0]!==undefined?arguments[0]:PairsArray();var stepX=dimensions[1]*dimensions[2],stepY=dimensions[2],stepZ=1;var binSizeX=(aabbMax[0]-aabbMin[0])/dimensions[0],binSizeY=(aabbMax[1]-aabbMin[1])/dimensions[1],binSizeZ=(aabbMax[2]-aabbMin[2])/dimensions[2];for(var i=binSizes.length-1;i>=0;binSizes[i--]=0){}var xmult=1/binSizeX,ymult=1/binSizeY,zmult=1/binSizeZ;var insertBox=function insertBox(x0,y0,z0,x1,y1,z1,body){var xoff0=(x0-aabbMin[0])*xmult|0,yoff0=(y0-aabbMin[1])*ymult|0,zoff0=(z0-aabbMin[2])*zmult|0,xoff1=Math.ceil((x1-aabbMin[0])*xmult),yoff1=Math.ceil((y1-aabbMin[1])*ymult),zoff1=Math.ceil((z1-aabbMin[2])*zmult);xoff0=Math.clamp(xoff0,0,dimensions[0]-1);yoff0=Math.clamp(yoff0,0,dimensions[1]-1);zoff0=Math.clamp(zoff0,0,dimensions[2]-1);xoff1=Math.clamp(xoff1,0,dimensions[0]-1);yoff1=Math.clamp(yoff1,0,dimensions[1]-1);zoff1=Math.clamp(zoff1,0,dimensions[2]-1);xoff0*=stepX;yoff0*=stepY;zoff0*=stepZ;xoff1*=stepX;yoff1*=stepY;zoff1*=stepZ;for(var xoff=xoff0;xoff<=xoff1;xoff+=stepX){for(var yoff=yoff0;yoff<=yoff1;yoff+=stepY){for(var zoff=zoff0;zoff<=zoff1;zoff+=stepZ){var idx=xoff+yoff+zoff;bins[idx][binSizes[idx]++]=body;}}}};for(var _i51=0;_i51<bodies.length;_i51++){var body=bodies[_i51];if(body.aabbNeedsUpdate)body.computeAABB();insertBox(body.aabb.lowerBound[0],body.aabb.lowerBound[1],body.aabb.lowerBound[2],body.aabb.upperBound[0],body.aabb.upperBound[1],body.aabb.upperBound[2],body);}var pairUniqueMap=Object.create(null);for(var _i52=0;_i52<bins.length;_i52++){var length=binSizes[_i52];if(length<=1)continue;var bin=bins[_i52];for(var a=0;a<length;a++){for(var bodyA=bin[a],b=0;b<a;b++){var bodyB=bin[b];var key=bodyA.id<bodyB.id?bodyA.id+'-'+bodyB.id:bodyB.id+'-'+bodyA.id;if(pairUniqueMap[key])continue;pairUniqueMap[key]=true;if(!checkCollisionFlags(bodyA,bodyB))continue;if(testCollision(bodyA,bodyB))pairs.add(bodyA,bodyB);}}}return pairs;}};};var DBVTNode=function DBVTNode(_){return{pointer:null,aabb:AABB(),parent:null,left:null,right:null,height:0};};var DBVTree=function DBVTree(_){var tree=Object.create(null),tempAABB=AABB(),nodePool=Pool(function(_){return DBVTNode();});tree.root=null;return Object.assign(tree,{nodePool:nodePool,insertLeaf:function insertLeaf(leaf){if(tree.root===null)return tree.root=leaf,leaf.parent=null,tree;var sibling=tree.root;while(!sibling.pointer){var left=sibling.left,right=sibling.right,creationCost=2*AABB.surfaceArea(AABB.extend(sibling.aabb,leaf.aabb,tempAABB)),descendingCost=creationCost-2*AABB.surfaceArea(sibling.aabb),descLeftCost=descendingCost+AABB.surfaceArea(AABB.extend(leaf.aabb,left.aabb,tempAABB))-(left.pointer?0:AABB.surfaceArea(left.aabb)),descRightCost=descendingCost+AABB.surfaceArea(AABB.extend(leaf.aabb,right.aabb,tempAABB))-(right.pointer?0:AABB.surfaceArea(right.aabb));if(creationCost<descLeftCost&&creationCost<descRightCost)break;sibling=descLeftCost<descRightCost?left:right;}var prevParent=sibling.parent,parent=nodePool.obtain();parent.parent=prevParent;parent.left=leaf;parent.right=sibling;AABB.extend(leaf.aabb,sibling.aabb,parent.aabb);parent.height=sibling.height+1;sibling.parent=leaf.parent=parent;if(sibling===tree.root)tree.root=parent;else if(prevParent.left===sibling)prevParent.left=parent;else prevParent.right=parent;tree.update(parent);return tree;},removeLeaf:function removeLeaf(leaf){if(tree.root===leaf)return tree.root=null,tree;var parent=leaf.parent,sibling=parent.left===leaf?parent.right:parent.left;if(tree.root===parent)return tree.root=sibling,sibling.parent=null,tree;var grandParent=parent.parent;sibling.parent=grandParent;grandParent.left===parent?grandParent.left=sibling:grandParent.right=sibling;nodePool.release(parent);tree.update(grandParent);return tree;},update:function update(node){while(node=tree.updateNodeProperties(tree.balance(node)).parent){}},updateNodeProperties:function updateNodeProperties(node){var L=node.left,R=node.right;AABB.extend(L.aabb,R.aabb,node.aabb);node.height=Math.max(L.height,R.height)+1;return node;},balance:function balance(node){var height=node.height;if(height<2)return node;var parent=node.parent,L=node.left,R=node.right,balance=L.height-R.height;if(balance>1){var LL=L.left,LR=L.right;if(LL.height>LR.height){L.right=node;node.parent=L;node.left=LR;LR.parent=node;}else{L.left=node;node.parent=L;node.left=LL;LL.parent=node;}tree.updateNodeProperties(node);tree.updateNodeProperties(L);if(!parent)tree.root=L;else if(parent.left===node)parent.left=L;else parent.right=L;L.parent=parent;return L;}else if(balance<-1){var RL=R.left,RR=R.right;if(RL.height>RR.height){R.right=node;node.parent=R;node.right=RR;RR.parent=node;}else{R.left=node;node.parent=R;node.right=RL;RL.parent=node;}tree.updateNodeProperties(node);tree.updateNodeProperties(R);if(!parent)tree.root=R;else if(parent.left===node)parent.left=R;else parent.right=R;R.parent=parent;return R;}return node;}});};var DynamicBoundingVolumeTreeBroadphase=function DynamicBoundingVolumeTreeBroadphase(_ref38){var checkCollisionFlags$$1=_ref38.checkCollisionFlags,testCollision=_ref38.testCollision;var tree=DBVTree(),leaves=[],stack=[],margin=0.1;return{add:function add(body){var node=tree.nodePool.obtain();node.height=0;node.left=node.right=null;node.pointer=body;leaves.push(node);tree.insertLeaf(node);},remove:function remove(body){var idx=leaves.findIndex(function(leaf){return leaf.pointer===body;});if(idx==-1)return false;var leaf=leaves[idx];leaf.pointer=null;tree.removeLeaf(leaf);tree.nodePool.release(leaf);leaves.splice(idx,1);},queryCandidates:function queryCandidates(){var pairs=arguments.length>0&&arguments[0]!==undefined?arguments[0]:PairsArray$1();for(var i=leaves.length-1;i>=0;i--){var leaf=leaves[i];if(AABB.contains(leaf.aabb,leaf.pointer.aabb))continue;AABB.copy(leaf.pointer.aabb,leaf.aabb);AABB.margin(leaf.aabb,margin,leaf.aabb);tree.removeLeaf(leaf).insertLeaf(leaf);}for(var _i53=leaves.length-1;_i53>=0;_i53--){var nodeA=leaves[_i53],bodyA=nodeA.pointer;var parent=void 0,node=nodeA;while(parent=node.parent){if(node===parent.left)stack.push(parent.right);node=parent;}while(stack.length){var nodeB=stack.pop(),bodyB=nodeB.pointer;if(bodyB){if(!checkCollisionFlags$$1(bodyA,bodyB))continue;if(testCollision(bodyA,bodyB))pairs.add(bodyA,bodyB);}else if(!AABB.overlap(bodyA.aabb,nodeB.aabb))continue;else nodeB.left.height>nodeB.right.height?stack.push(nodeB.left,nodeB.right):stack.push(nodeB.right,nodeB.left);}}}};};var DefaultBroadphase=function DefaultBroadphase(_){return BruteForceBroadphase({checkCollisionFlags:checkCollisionFlags,testCollision:testBoundingSphereCollision});};var RotationalEquation=function RotationalEquation(_){return Object.setPrototypeOf(Object.assign(Equation(),{axisA:vec3$1.copy(vec3$1.AXIS_X),axisB:vec3$1.copy(vec3$1.AXIS_Y),maxAngle:Math.PI/2}),RotationalEquation.prototype);};RotationalEquation.prototype=Object.setPrototypeOf({computeRightHandSide:function computeRightHandSide(deltaTime){var normalA=this.axisA,normalB=this.axisB,angularA=this.jacobianElementA.angular,angularB=this.jacobianElementB.angular;vec3$1.cross(normalA,normalB,angularB);vec3$1.cross(normalB,normalA,angularA);var g=Math.cos(this.maxAngle)-vec3$1.dot(normalA,normalB),GW=this.computeBodyVelocities(),GiMf=this.computeGiMf();return-g*this.a-GW*this.b-deltaTime*GiMf;}},Equation.prototype);var RotationalMotorEquation=function RotationalMotorEquation(_){return Object.setPrototypeOf(Object.assign(Equation(),{axisA:vec3$1(),axisB:vec3$1(),targetVelocity:0}),RotationalMotorEquation.prototype);};RotationalMotorEquation.prototype=Object.setPrototypeOf({computeRightHandSide:function computeRightHandSide(deltaTime){vec3$1.copy(this.axisA,this.jacobianElementA.angular);vec3$1.negate(this.axisB,this.jacobianElementB.angular);var GW=this.computeBodyVelocities()-this.targetVelocity,GiMf=this.computeGiMf();return-GW*this.b-deltaTime*GiMf;}},Equation.prototype);var Constraint=function Constraint(bodyA,bodyB,options){var target=Object.assign(Object.create(null),{collisionResponse:true,enabled:true},options||{});var equations=[];bodyA.joints.push(target);bodyB.joints.push(target);return tie(target,{bodyA:bodyA,bodyB:bodyB,equations:equations,detach:function detach(_){bodyA.joints.remove(target);bodyB.joints.remove(target);}});};var DistanceConstraint=function DistanceConstraint(bodyA,bodyB){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var constraint=Constraint(bodyA,bodyB,options),equation=ContactEquation();equation.bodyA=bodyA;equation.bodyB=bodyB;equation.minForce=-(options.maxForce||1e6);equation.maxForce=options.maxForce||1e6;constraint.equations.push(equation);return Object.assign(constraint,{distance:options.distance||vec3$1.difference(bodyA.position,bodyB.position),update:function update(_){var normal=equation.contactNormal,halfDistance=0.5*constraint.distance;vec3$1.subtract(constraint.bodyB.position,constraint.bodyA.position,normal);vec3$1.normalize(normal,normal);vec3$1.scale(normal,halfDistance,equation.contactPointA);vec3$1.scale(normal,-halfDistance,equation.contactPointB);}});};var PointToPointConstraint=function PointToPointConstraint(bodyA,bodyB){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var constraint=Constraint(bodyA,bodyB,options),equationX=ContactEquation(),equationY=ContactEquation(),equationZ=ContactEquation();equationX.bodyA=equationY.bodyA=equationZ.bodyA=bodyA;equationX.bodyB=equationY.bodyB=equationZ.bodyB=bodyB;equationX.minForce=equationY.minForce=equationZ.minForce=-(options.maxForce||1e6);equationX.maxForce=equationY.maxForce=equationZ.maxForce=options.maxForce||1e6;vec3$1.copy(vec3$1.AXIS_X,equationX.contactNormal);vec3$1.copy(vec3$1.AXIS_Y,equationY.contactNormal);vec3$1.copy(vec3$1.AXIS_Z,equationZ.contactNormal);var pivotA=vec3$1.copy(options.pivotA||vec3$1()),pivotB=vec3$1.copy(options.pivotB||vec3$1());constraint.equations.push(equationX,equationY,equationZ);return Object.assign(constraint,{update:function update(_){vec3$1.transformQuat(pivotA,constraint.bodyA.quaternion,equationX.contactPointA);vec3$1.transformQuat(pivotB,constraint.bodyB.quaternion,equationX.contactPointB);vec3$1.copy(equationX.contactPointA,equationY.contactPointA);vec3$1.copy(equationX.contactPointB,equationY.contactPointB);vec3$1.copy(equationX.contactPointA,equationZ.contactPointA);vec3$1.copy(equationX.contactPointB,equationZ.contactPointB);}});};var HingeConstraint=function HingeConstraint(bodyA,bodyB){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var constraint=PointToPointConstraint(bodyA,bodyB,options);var equationA=RotationalEquation(),equationB=RotationalEquation(),motorEquation=RotationalMotorEquation();equationA.bodyA=equationB.bodyA=motorEquation.bodyA=bodyA;equationA.bodyB=equationB.bodyB=motorEquation.bodyB=bodyB;motorEquation.enabled=false;motorEquation.maxForce=options.maxForce||1e6;motorEquation.minForce=-(options.maxForce||1e6);var axisA=vec3$1.copy(options.axisA||vec3$1.AXIS_X),axisB=vec3$1.copy(options.axisB||vec3$1.AXIS_X);constraint.equations.push(equationA,equationB,motorEquation);return Object.assign(constraint,{enableMotor:function enableMotor(_){return motorEquation.enabled=true;},disableMotor:function disableMotor(_){return motorEquation.enabled=false;},setMotorSpeed:function setMotorSpeed(value){return motorEquation.targetVelocity=value;},setMotorMaxForce:function setMotorMaxForce(value){motorEquation.maxForce=value;motorEquation.minForce=-value;},update:function(base){return function(_){var bodyA=constraint.bodyA,bodyB=constraint.bodyB;vec3$1.transformQuat(axisA,bodyA.quaternion,motorEquation.axisA);vec3$1.transformQuat(axisB,bodyB.quaternion,motorEquation.axisB);vec3$1.extractTangents(motorEquation.axisA,equationA.axisA,equationB.axisA);vec3$1.copy(motorEquation.axisB,equationA.axisB);vec3$1.copy(motorEquation.axisB,equationB.axisB);return base();};}(constraint.update)});};var LockConstraint=function LockConstraint(bodyA,bodyB){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};options.pivotA=vec3$1();options.pivotB=vec3$1();var middle=vec3$1.add(bodyA.position,bodyB.position);vec3$1.scale(middle,0.5,middle);Transform.pointToLocalFrame(middle,bodyA.position,bodyA.quaternion,options.pivotA);Transform.pointToLocalFrame(middle,bodyB.position,bodyB.quaternion,options.pivotB);var constraint=PointToPointConstraint(bodyA,bodyB,options);var initialXUnitA=Transform.vectorToLocalFrame(vec3$1.AXIS_X,bodyA.position,bodyA.quaternion),initialXUnitB=Transform.vectorToLocalFrame(vec3$1.AXIS_X,bodyB.position,bodyB.quaternion),initialYUnitA=Transform.vectorToLocalFrame(vec3$1.AXIS_Y,bodyA.position,bodyA.quaternion),initialYUnitB=Transform.vectorToLocalFrame(vec3$1.AXIS_Y,bodyB.position,bodyB.quaternion),initialZUnitA=Transform.vectorToLocalFrame(vec3$1.AXIS_Z,bodyA.position,bodyA.quaternion),initialZUnitB=Transform.vectorToLocalFrame(vec3$1.AXIS_Z,bodyB.position,bodyB.quaternion);var rotationalEquationX=RotationalEquation(),rotationalEquationY=RotationalEquation(),rotationalEquationZ=RotationalEquation();rotationalEquationX.bodyA=rotationalEquationY.bodyA=rotationalEquationZ.bodyA=bodyA;rotationalEquationX.bodyB=rotationalEquationY.bodyB=rotationalEquationZ.bodyB=bodyB;constraint.equations.push(rotationalEquationX,rotationalEquationY,rotationalEquationZ);return Object.assign(constraint,{update:function(base){return function(_){var bodyA=constraint.bodyA,bodyB=constraint.bodyB;Transform.vectorToWorldFrame(initialXUnitA,bodyA.position,bodyA.quaternion,rotationalEquationX.axisA);Transform.vectorToWorldFrame(initialYUnitB,bodyB.position,bodyB.quaternion,rotationalEquationX.axisB);Transform.vectorToWorldFrame(initialYUnitA,bodyA.position,bodyA.quaternion,rotationalEquationY.axisA);Transform.vectorToWorldFrame(initialZUnitB,bodyB.position,bodyB.quaternion,rotationalEquationY.axisB);Transform.vectorToWorldFrame(initialZUnitA,bodyA.position,bodyA.quaternion,rotationalEquationZ.axisA);Transform.vectorToWorldFrame(initialXUnitB,bodyB.position,bodyB.quaternion,rotationalEquationZ.axisB);return base();};}(constraint.update)});};var ConeTwistConstraint=function ConeTwistConstraint(bodyA,bodyB){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};options.collisionResponse=!!options.collisionResponse;var constraint=PointToPointConstraint(bodyA,bodyB,options);var axisA=vec3$1.copy(options.axisA||vec3$1());var axisB=vec3$1.copy(options.axisB||vec3$1());var coneEquation=RotationalEquation();var twistEquation=RotationalEquation();coneEquation.bodyA=twistEquation.bodyA=bodyA;coneEquation.bodyB=twistEquation.bodyB=bodyB;coneEquation.maxForce=twistEquation.maxForce=0;coneEquation.minForce=twistEquation.minForce=-(options.maxForce||1e6);constraint.equations.push(coneEquation,twistEquation);return Object.assign(constraint,{angle:options.angle||0.0,twistAngle:options.twistAngle||0.0,update:function(base){return function(_){var bodyA=constraint.bodyA,bodyB=constraint.bodyB;vec3$1.extractTangents(axisA,coneEquation.axisA,twistEquation.axisA);Transform.vectorToWorldFrame(twistEquation.axisA,bodyA.position,bodyA.quaternion,twistEquation.axisA);vec3$1.extractTangents(axisB,coneEquation.axisB,twistEquation.axisB);Transform.vectorToWorldFrame(twistEquation.axisB,bodyB.position,bodyB.quaternion,twistEquation.axisB);Transform.vectorToWorldFrame(axisA,bodyA.position,bodyA.quaternion,coneEquation.axisA);Transform.vectorToWorldFrame(axisB,bodyB.position,bodyB.quaternion,coneEquation.axisB);coneEquation.maxAngle=constraint.angle;twistEquation.maxAngle=constraint.twistAngle;return base();};}(constraint.update)});};factory.declare('physics',function(target,options){var subsystems=[];target.addEventListener('preStep',function(event){for(var i=subsystems.length-1;i>=0;i--){subsystems[i].update(event.deltaTime);}});return{subsystems:subsystems};});var Spring=function Spring(bodyA,bodyB,options){options=Object.assign({restLength:1,stiffness:100,damping:1},options||{});var localAnchorA=vec3$1.copy(options.localAnchorA||vec3$1());var localAnchorB=vec3$1.copy(options.localAnchorB||vec3$1());if(options.worldAnchorA)Transform.pointToLocalFrame(options.worldAnchorA,bodyA.position,bodyA.quaternion,localAnchorA);if(options.worldAnchorB)Transform.pointToLocalFrame(options.worldAnchorB,bodyB.position,bodyB.quaternion,localAnchorB);return{update:function update(_){var vec3Pool=aquireVec3Pool(),damping=options.damping,stiffness=options.stiffness,restLength=options.restLength,temp=vec3Pool.obtain();var offsetA=Transform.pointToWorldFrame(localAnchorA,bodyA.position,bodyA.quaternion,vec3Pool.obtain());var offsetB=Transform.pointToWorldFrame(localAnchorB,bodyB.position,bodyB.quaternion,vec3Pool.obtain());var direction=vec3$1.subtract(offsetB,offsetA,vec3Pool.obtain());var distance=vec3$1.distance(direction);vec3$1.normalize(direction,direction);vec3$1.subtract(offsetA,bodyA.position,offsetA);vec3$1.subtract(offsetB,bodyB.position,offsetB);var relativeVelocity=vec3$1.subtract(bodyB.velocity,bodyA.velocity,vec3Pool.obtain());vec3$1.cross(bodyB.angularVelocity,offsetB,temp);vec3$1.add(relativeVelocity,temp,relativeVelocity);vec3$1.cross(bodyA.angularVelocity,offsetA,temp);vec3$1.subtract(relativeVelocity,temp,relativeVelocity);vec3$1.scale(direction,-stiffness*(distance-restLength)-damping*vec3$1.dot(relativeVelocity,direction),direction);vec3$1.subtract(bodyA.force,direction,bodyA.force);vec3$1.add(bodyB.force,direction,bodyB.force);vec3$1.cross(offsetA,direction,temp);vec3$1.subtract(bodyA.torque,temp,bodyA.torque);vec3$1.cross(offsetB,direction,temp);vec3$1.add(bodyB.torque,temp,bodyB.torque);vec3Pool.release();}};};var SmoothedParticleHydrodynamicsSystem=function SmoothedParticleHydrodynamicsSystem(options){options=Object.assign({density:1,smoothingRadius:1,speedOfSound:1,viscosity:0.01,epsilon:0.000001},options||{});var particles=[],pressures=[],densities=[],neighbors=[];var computeWeight=function computeWeight(radius){var smoothingRadius=options.smoothingRadius;return 315.0/(64.0*Math.PI*Math.pow(smoothingRadius,9))*Math.pow(smoothingRadius*smoothingRadius-radius*radius,3);};var computeWeightGradient=function computeWeightGradient(radiusVector){var out=arguments.length>1&&arguments[1]!==undefined?arguments[1]:vec3$1();var smoothingRadius=options.smoothingRadius,radius=vec3$1.distance(radiusVector);return vec3$1.scale(radiusVector,945.0/(32.0*Math.PI*Math.pow(smoothingRadius,9))*Math.pow(smoothingRadius*smoothingRadius-radius*radius,2),out);};var computeNabla=function computeNabla(radius){var smoothingRadius=options.smoothingRadius,radiusSquared=radius*radius;return 945.0/(32.0*Math.PI*Math.pow(smoothingRadius,9))*(smoothingRadius*smoothingRadius-radiusSquared)*(7*radiusSquared-3*smoothingRadius*smoothingRadius);};return{add:function add(particle){particles.push(particle);neighbors.push([]);},remove:function remove(particle){var idx=particles.indexOf(particle);if(idx==-1)return false;particles.splice(idx,1);neighbors.pop();},update:function update(_){var vec3Pool=aquireVec3Pool(),radiusSquared=options.smoothingRadius*options.smoothingRadius,speedSquared=options.speedOfSound*options.speedOfSound,epsilon=options.epsilon;for(var i=0;i<particles.length;i++){var particle=particles[i],position=particle.position,neighborList=neighbors[i],totalDensity=0;neighborList.length=0;for(var j=0;j<particles.length;j++){var neighbor=particles[j],distanceSquared=vec3$1.differenceSquared(position,neighbor.position);if(distanceSquared>=radiusSquared)continue;neighborList.push(neighbor);var distance=Math.sqrt(distanceSquared),weight=computeWeight(distance);totalDensity+=neighbor.mass*weight;}densities[i]=totalDensity;pressures[i]=speedSquared*(totalDensity-options.density);}var pressure=vec3Pool.obtain(),viscosity=vec3Pool.obtain(),difference=vec3Pool.obtain(),weightGradient=vec3Pool.obtain();for(var _i54=0;_i54<particles.length;_i54++){var _particle=particles[_i54],_neighborList=neighbors[_i54],force=_particle.force;vec3$1.copy(vec3$1.ZERO,pressure);vec3$1.copy(vec3$1.ZERO,viscosity);for(var _j3=0;_j3<_neighborList.length;_j3++){var _neighbor=_neighborList[_j3];vec3$1.subtract(_particle.position,_neighbor.position,difference);var radius=vec3$1.distance(difference),pressureContribution=-_neighbor.mass*(pressures[_i54]/(densities[_i54]*densities[_i54]+epsilon)+pressures[_j3]/(densities[_j3]*densities[_j3]+epsilon));computeWeightGradient(difference,weightGradient);vec3$1.scale(weightGradient,pressureContribution,weightGradient);vec3$1.add(pressure,weightGradient,pressure);vec3$1.subtract(_neighbor.velocity,_particle.velocity,difference);var viscosityContribution=options.viscosity*_neighbor.mass*1.0/(0.0001+densities[_i54]*densities[_j3]);vec3$1.scale(difference,viscosityContribution,difference);var nabla=computeNabla(radius);vec3$1.scale(difference,nabla,difference);vec3$1.add(viscosity,difference,viscosity);}vec3$1.scale(pressure,_particle.mass,pressure);vec3$1.scale(viscosity,_particle.mass,viscosity);vec3$1.add(force,viscosity,force);vec3$1.add(force,pressure,force);}vec3Pool.release();}};};var shapeMapper$1={'plane':function plane(options){return Plane$1();},'box':function box(options){return Box(options.halfExtents);},'sphere':function sphere(options){return Sphere$1(options.radius);},'convex':function convex(options){return ConvexPolyhedron(options.vertices,options.faces);},'cylinder':function cylinder(options){return Cylinder$1(options.radius,options.radius,options.height,options.segments);}};var deserialize$1=function deserialize$1(json){return json.map(function(bodyParameters){var shapes=bodyParameters.shapes,material=bodyParameters.material;var body=RigidBody(Object.assign(Object.create(null),bodyParameters,{material:materialLibrary[material]}));shapes.forEach(function(shape){if(!shapeMapper$1[shape.type])throw new Error("Unrecognized shape "+shape.type);var shapeGeometry=shapeMapper$1[shape.type](shape);body.addShape(shapeGeometry,shape.offset,shape.orientation);});return body;});};var physics=Object.freeze({aquireVec3Pool:aquireVec3Pool,aquireVec2Pool:aquireVec2Pool,vec3:vec3$1,vec2:vec2,mat3:mat3,quat:quat$1,Transform:Transform,Ray:Ray$1,Raytracer:Raytracer,rayConvex:rayConvex,raySphere:raySphere,rayPlane:rayPlane,rayBox:rayBox,clipAgainstHull:clipAgainstHull,findSeparatingAxis:findSeparatingAxis,SATContext:SATContext,clipFaceAgainstPlane:clipFaceAgainstPlane,AABB:AABB,collisionDetector:collisionDetector,DefaultBroadphase:DefaultBroadphase,PairsArray:PairsArray$1,checkCollisionFlags:checkCollisionFlags,testAABBCollision:testAABBCollision,testBoundingSphereCollision:testBoundingSphereCollision,BruteForceBroadphase:BruteForceBroadphase,SimpleSAPBroadphase:SimpleSAPBroadphase,SweepAndPruneBroadphase:SweepAndPruneBroadphase,UniformGridBroadphase:UniformGridBroadphase,DynamicBoundingVolumeTreeBroadphase:DynamicBoundingVolumeTreeBroadphase,DefaultNarrowphase:DefaultNarrowphase,Narrowphase:Narrowphase,Equation:Equation,ContactEquation:ContactEquation,FrictionEquation:FrictionEquation,RotationalEquation:RotationalEquation,RotationalMotorEquation:RotationalMotorEquation,Constraint:Constraint,DistanceConstraint:DistanceConstraint,PointToPointConstraint:PointToPointConstraint,HingeConstraint:HingeConstraint,LockConstraint:LockConstraint,ConeTwistConstraint:ConeTwistConstraint,DefaultSolver:DefaultSolver,GaussSeidelSolver:GaussSeidelSolver,IslandSplitSolver:IslandSplitSolver,Sphere:Sphere$1,Plane:Plane$1,ConvexPolyhedron:ConvexPolyhedron,Box:Box,SHAPE_TYPE:SHAPE_TYPE,Cylinder:Cylinder$1,materialLibrary:materialLibrary,RigidBody:RigidBody,Spring:Spring,SmoothedParticleHydrodynamicsSystem:SmoothedParticleHydrodynamicsSystem,shapeMapper:shapeMapper$1,deserialize:deserialize$1});factory.declare('scene',function(target){var camera=factory.build('camera');return tie({camera:camera,update:function update(deltaTime){target.dispatchEvent('update',deltaTime);camera.recalculateView();}},EventEmitter());});factory.declare('camera',function(target,options){options=tie({fovy:45.0,zNear:0.1,zFar:1024.0},options);var projectionMatrix=mat4.identity(),viewMatrix=mat4.identity(),rotation=mat4(),eyePosition=vec3$1(),eyeRotation=quat$1(),viewFrustum=frustum(),mutation=Stream();return{projectionMatrix:projectionMatrix,viewMatrix:viewMatrix,eyePosition:eyePosition,eyeRotation:eyeRotation,mutation:mutation,get rotation(){return eyeRotation;},set rotation(value){quat$1.copy(value,eyeRotation);},get position(){return eyePosition;},set position(value){vec3$1.copy(value,eyePosition);},get viewProjectionMatrix(){return mat4.multiply(projectionMatrix,viewMatrix);},resize:function resize(screen){return mat4.perspective(options.fovy*Math.PI/180,screen.width/screen.height,options.zNear,options.zFar,projectionMatrix),frustum.fromMat(projectionMatrix,viewFrustum),mutation.onSuccess({projectionMatrix:projectionMatrix});},recalculateView:function recalculateView(_){mat4.fromQuat(eyeRotation,rotation);mat4.translate(rotation,vec3$1.scale(eyePosition,-1),viewMatrix);mutation.onSuccess({viewMatrix:viewMatrix});},rotate:function rotate(yaw,pitch){quat$1.rotateY(eyeRotation,yaw,eyeRotation);quat$1.multiply(quat$1.setAxisAngle(vec3$1.LEFT,pitch),eyeRotation,eyeRotation);quat$1.normalize(eyeRotation,eyeRotation);},get rotationMatrix(){return rotation;},get forward(){return vec3$1(-rotation[2],-rotation[6],-rotation[10]);},get up(){return vec3$1(-rotation[1],-rotation[5],-rotation[9]);},get left(){return vec3$1(-rotation[0],-rotation[4],-rotation[8]);},frustumCulling:function frustumCulling(instance){return frustum.containsSphere(viewFrustum,vec4.transform(vec3$1.translationFromMat4(instance.modelMatrix),viewMatrix),instance.boundingSphereRadius);}};});factory.declare('perspective:camera',function(target,options){options=tie({fovy:45.0,aspectRatio:1,zNear:0.1,zFar:1024.0},options);var up=vec3$1.copy(options.up||vec3$1.AXIS_Y),forward=vec3$1.copy(options.forward||vec3$1.AXIS_Z),position=vec3$1.copy(options.position||vec3$1.ZERO),projectionMatrix=mat4.identity(),viewMatrix=mat4.identity(),viewProjectionMatrix=mat4.identity(),viewFrustum=frustum();var dirtyFlag=[true,true];return{get position(){return position;},set position(value){vec3$1.copy(value,position);dirtyFlag[1]=true;},get up(){return up;},set up(value){vec3$1.copy(value,up);dirtyFlag[1]=true;},get forward(){return forward;},set forward(value){vec3$1.copy(value,forward);dirtyFlag[1]=true;},get zNear(){return options.zNear;},set zNear(value){if(target.zNear===value)return;options.zNear=value;dirtyFlag[0]=true;},get zFar(){return options.zFar;},set zFar(value){if(target.zFar===value)return;options.zFar=value;dirtyFlag[0]=true;},get fovy(){return options.fovy;},set fovy(value){if(target.fovy===value)return;options.fovy=value;dirtyFlag[0]=true;},get aspectRatio(){return options.aspectRatio;},set aspectRatio(value){if(target.aspectRatio===value)return;options.aspectRatio=value;dirtyFlag[0]=true;},get viewFrustum(){if(!dirtyFlag[0])return viewFrustum;dirtyFlag[0]=false;mat4.perspective(options.fovy,options.aspectRatio,options.zNear,options.zFar,projectionMatrix);frustum.fromMat(projectionMatrix,viewFrustum);return viewFrustum;},get projectionMatrix(){if(!dirtyFlag[0])return projectionMatrix;dirtyFlag[0]=false;mat4.perspective(options.fovy,options.aspectRatio,options.zNear,options.zFar,projectionMatrix);frustum.fromMat(projectionMatrix,viewFrustum);return projectionMatrix;},get viewMatrix(){if(!dirtyFlag[1])return viewMatrix;dirtyFlag[1]=false;mat4.lookAt(position,vec3$1.add(position,forward),up,viewMatrix);return viewMatrix;},get viewProjectionMatrix(){mat4.multiply(target.projectionMatrix,target.viewMatrix,viewProjectionMatrix);return viewProjectionMatrix;},frustumCulling:function frustumCulling(instance){return frustum.containsSphere(target.viewFrustum,vec4.transform(vec3$1.translationFromMat4(instance.modelMatrix),target.viewMatrix),instance.boundingSphereRadius);}};});factory.declare('cube:camera',function(target,options){var cameras=[{up:[0,-1,0],forward:[1,0,0]},{up:[0,-1,0],forward:[-1,0,0]},{up:[0,0,1],forward:[0,1,0]},{up:[0,0,-1],forward:[0,-1,0]},{up:[0,-1,0],forward:[0,0,1]},{up:[0,-1,0],forward:[0,0,-1]}].map(function(options){return factory.build('perspective:camera',tie({fovy:0.5*Math.PI,aspectRatio:1},options));});return{cube:true,faces:cameras,get zFar(){return cameras[0].zFar;},set zFar(value){for(var i=cameras.length-1;i>=0;cameras[i--].zFar=value){}},get zNear(){return cameras[0].zNear;},set zNear(value){for(var i=cameras.length-1;i>=0;cameras[i--].zNear=value){}},get position(){return cameras[0].position;},set position(value){for(var i=cameras.length-1;i>=0;cameras[i--].position=value){}}};});var Observable=function Observable(target){var mutation=Stream(),cleanupProcedures=[];return{mutation:mutation,cleanupProcedures:cleanupProcedures,delete:function _delete(_){mutation.clear();for(var i=0;i<cleanupProcedures.length;i++){cleanupProcedures[i].call(target,target);}cleanupProcedures.length=0;},onCleanup:function onCleanup(procedure){return cleanupProcedures.indexOf(procedure)==-1&&cleanupProcedures.push(procedure);},propagate:function propagate(event,value,context){return mutation.onSuccess(event.context?event:Observable.MutationEvent(event,value,context));}};};Observable.MutationEvent=function(event){return function(eventName,value,context){event.eventName=eventName;event.value=value;event.context=context;return event;};}(Object.create(null));var Instance=function Instance(target,options){var modelMatrix=mat4.identity(),position=vec3$1.copy(options.position||vec3$1.ZERO),rotation=quat$1.copy(options.rotation||quat$1()),scale=vec3$1.copy(options.scale||vec3$1.ONE);var dirtyFlag=true;target.mutation=target.mutation.pipe(function(event){dirtyFlag=true;return event;},false);return{delegate:options.delegate,get position(){return position;},get scale(){return scale;},get rotation(){return rotation;},set position(value){vec3$1.copy(value,position);target.propagate(0,value,target);},set scale(value){vec3$1.copy(value,scale);target.propagate(0,value,target);},set rotation(value){quat$1.copy(value,rotation);target.propagate(0,value,target);},recalculateModelMatrix:function recalculateModelMatrix(_){mat4.fromRotationTranslationScale(rotation,position,scale,modelMatrix);target.parent&&mat4.multiply(target.parent.modelMatrix,modelMatrix,modelMatrix);dirtyFlag=false;},get modelMatrix(){if(dirtyFlag)target.recalculateModelMatrix();return modelMatrix;}};};var Node=function Node(target,options){var nodes=[];var parent=null;target.onCleanup(function(_){var idx=nodes.length;while(idx--){nodes[idx].delete();}parent&&parent.removeElement(target);});target.mutation.attach(function(event){var idx=nodes.length;while(idx--){nodes[idx].propagate(event);}},null,false);return{get parent(){return parent;},set parent(value){parent=value;},get root(){var root=target;while(root.parent){root=root.parent;}return root;},get elements(){return nodes;},addElement:function addElement(){for(var _len18=arguments.length,elements=Array(_len18),_key18=0;_key18<_len18;_key18++){elements[_key18]=arguments[_key18];}return elements.forEach(function(element){if(element.parent)element.parent.removeElement(element);nodes.push(element);element.parent=target;element.propagate(0,target,element);}),target;},removeElement:function removeElement(){for(var _len19=arguments.length,elements=Array(_len19),_key19=0;_key19<_len19;_key19++){elements[_key19]=arguments[_key19];}return elements.forEach(function(element){var idx=nodes.indexOf(element);if(idx==-1)return false;nodes.splice(idx,1);element.parent=null;element.propagate(0,null,element);}),target;}};};var INSTANCE_GROUP={STATIC:'static',DYNAMIC:'dynamic',SKINNED:'skinned'};factory.declare('instance',Observable).declare('instance',Node).declare('instance',Instance);factory.declare('instance',function(target,options){var highlight=vec3.copy(options.highlight||vec3(1,1,1));return{get highlight(){return highlight;},set highlight(value){vec3.copy(value,highlight);},visible:true,get boundingSphereRadius(){var radius=target.delegate&&target.delegate.data&&target.delegate.data.boundingSphereRadius;return(radius!=null?radius:1.0)*Math.max.apply(Math,_toConsumableArray(target.scale));}};});factory.declare('scene',function(target,options){var resourceManager=options.manager,instanceGroups=Object.create(null),resourceMap=Object.create(null);return{createInstance:function createInstance(options){var id=options.url,group=options.group||INSTANCE_GROUP.STATIC;if(!id)return factory.build('instance',tie({scene:target},options));if(!resourceMap[id])(instanceGroups[group]=instanceGroups[group]||[]).push(resourceMap[id]=tie(resourceManager.requestResource(id),{id:id,group:group,instances:[]}));var instance=factory.build('instance',tie({delegate:resourceMap[id]},options));instance.onCleanup(target.removeInstance.bind(target,instance));resourceMap[id].instances.push(instance);target.dispatchEvent('instance',instance);return instance;},fetchInstancesByGroup:function fetchInstancesByGroup(group){return instanceGroups[group]||[];},removeInstance:function removeInstance(instance){var delegate=instance.delegate;if(!delegate)return false;delegate.instances.remove(instance);if(delegate.instances.length===0){instanceGroups[delegate.group].remove(delegate);delete resourceMap[delegate.id];delegate.unload();}}};});factory.declare('scene',function(target,options){var fogDensity=options.fogDensity||0.00016;var fogColor=vec3$1.copy(options.fogColor||[1.0,1.0,1.0]),mutation=Stream().default({fogColor:fogColor,fogDensity:fogDensity});return{environment:{mutation:mutation,get fogDensity(){return fogDensity;},set fogDensity(value){fogDensity!==value&&(fogDensity=value);mutation.onSuccess({fogDensity:fogDensity});},get fogColor(){return fogColor;},set fogColor(value){fogColor!==value&&vec3$1.copy(value,fogColor);mutation.onSuccess({fogColor:fogColor});}}};});factory.declare('spotlight',Observable);factory.declare('spotlight',Node);factory.declare('spotlight',function(target,options){var position=vec3$1.copy(options.position||[0,0,0]),destination=vec3$1.copy(options.destination||[0,-1,0]),color=vec3$1.copy(options.color||[1,1,1]),camera=factory.build('perspective:camera');var radius=radius=options.radius||100,outerAngle=options.angle||0.25*Math.PI,innerAngle=0.5*outerAngle,castShadow=options.castShadow!==undefined?!!options.castShadow:false;var dirtyFlag=true;target.mutation.attach(function(_){return dirtyFlag=true;},null,false);return{get camera(){if(!dirtyFlag)return camera;dirtyFlag=false;var worldPosition=target.parent?vec4.transform(position,target.parent.modelMatrix):position;var worldDestination=target.parent?vec4.transform(destination,target.parent.modelMatrix):destination;var direction=vec3$1.normalize(vec3$1.subtract(worldDestination,worldPosition));camera.position=worldPosition;camera.forward=direction;camera.zNear=radius*0.001;camera.zFar=2*radius;camera.fovy=outerAngle*2.0;camera.aspectRatio=1;camera.up=Math.abs(direction[1])>0.9?vec3$1.AXIS_Z:vec3$1.AXIS_Y;return camera;},get castShadow(){return castShadow;},get position(){return position;},get destination(){return destination;},get direction(){return target.camera.forward;},get color(){return color;},get radius(){return radius;},get angle(){return outerAngle;},get cosOuterAngle(){return Math.cos(outerAngle);},get cosInnerAngle(){return Math.cos(innerAngle);},set castShadow(value){castShadow=!!value;},set color(value){vec3$1.copy(value,color);},set angle(value){outerAngle=value;innerAngle=0.5*value;dirtyFlag=true;},set position(value){vec3$1.copy(value,position);dirtyFlag=true;},set destination(value){vec3$1.copy(value,destination);dirtyFlag=true;},set radius(value){radius=value;dirtyFlag=true;},queryShadowcasters:function queryShadowcasters(_){return options.queryShadowcasters().filter(function(instance){return target.camera.frustumCulling(instance);});},get boundingSphereRadius(){return radius;}};});factory.declare('omnilight',Observable);factory.declare('omnilight',Node);factory.declare('omnilight',function(target,options){var position=vec3$1.copy(options.position||[0,0,0]),color=vec3$1.copy(options.color||[1,1,1]),camera=factory.build('cube:camera');var radius=radius=options.radius||100,castShadow=options.castShadow!==undefined?!!options.castShadow:false;var dirtyFlag=true;target.mutation.attach(function(_){return dirtyFlag=true;},null,false);return{get camera(){if(!dirtyFlag)return camera;dirtyFlag=false;camera.position=target.parent?vec4.transform(position,target.parent.modelMatrix):position;return camera;},get castShadow(){return castShadow;},get position(){return position;},get color(){return color;},get radius(){return radius;},set castShadow(value){castShadow=!!value;},set color(value){vec3$1.copy(value,color);},set position(value){vec3$1.copy(value,position);dirtyFlag=true;},set radius(value){radius=value;dirtyFlag=true;},queryShadowcasters:function queryShadowcasters(face){return options.queryShadowcasters().filter(function(instance){return target.camera.faces[face].frustumCulling(instance);});},get boundingSphereRadius(){return radius;}};});factory.declare('hemisphere',Observable);factory.declare('hemisphere',function(target,options){var up=vec3$1.copy(options.up||[0,1,0]),skyColor=vec3$1.copy(options.skyColor||[1,1,1]),groundColor=vec3$1.copy(options.groundColor||[0,0,0]);return{get up(){return up;},get skyColor(){return skyColor;},get groundColor(){return groundColor;},set up(value){vec3$1.copy(value,up);},set skyColor(value){vec3$1.copy(value,skyColor);},set groundColor(value){vec3$1.copy(value,groundColor);}};});factory.declare('scene',function(target,options){var lights=[],queryShadowcasters=function queryShadowcasters(_){return target.fetchInstancesByGroup('static').filter(function(mesh){return mesh.loaded;}).map(function(mesh){return mesh.instances;}).flatten();};return{lights:lights,createLight:function createLight(options){var light=tie(factory.build(options.type,options),{type:options.type,queryShadowcasters:queryShadowcasters});light.onCleanup(lights.remove.bind(lights,light));lights.push(light);target.dispatchEvent('light',light);return light;}};});factory.declare('scene',function(target,options){var resourceManager=options.manager;var audioSources=[];target.addEventListener('update',function(deltaTime){deltaTime*=0.001;for(var i=audioSources.length-1;i>=0;i--){audioSources[i].time+=deltaTime;}});return{createAudioSource:function createAudioSource(options){var source=resourceManager.requestResource(options.url);var instance=factory.build('audio_source',options);target.dispatchEvent('audio_source',instance,source);audioSources.push(instance);instance.onCleanup(audioSources.remove.bind(audioSources,instance));return instance;}};});factory.declare('audio_source',Observable);factory.declare('audio_source',Instance);factory.declare('audio_source',function(target,options){options=Object.assign({volume:1,loop:true,startTime:null},options);return{time:0,startTime:options.startTime,get volume(){return options.volume;},get loop(){return options.loop;},set volume(value){options.volume=value;target.propagate(0,value,target);},set loop(value){options.loop=value;target.propagate(0,value,target);},play:function play(){target.startTime=target.time;target.propagate(0,null,target);},stop:function stop(){target.startTime=null;target.propagate(0,null,target);}};});var OctreeObjectSegmentMappers={boundingSphere:function boundingSphere(object){return[{get radius(){return object.boundingSphereRadius;},get position(){return object.cachedPosition=vec3$1.translationFromMat4(object.modelMatrix,object.cachedPosition||vec3$1());}}];}};var BinaryPartitionTree=function BinaryPartitionTree(options){var octree=Octree({overlapPercent:0.15,objectsThreshold:8});return{octree:octree,add:function add(object,options){octree.add(object,OctreeObjectSegmentMappers.boundingSphere);},search:function search(ray,radius,options){var result=octree.search(ray.origin,radius,ray.direction,{groupByObject:true});return result.map(function(o){return o.object;});},update:function update(_){octree.rebuild();octree.update();},remove:function remove(object){octree.remove(object);}};};factory.declare('scene',function(target,options){var bsp=BinaryPartitionTree();var entities=[];return{bsp:bsp,removeInstance:function(base){return function(instance){entities.remove(instance);bsp.remove(instance);return base(instance);};}(target.removeInstance),createInstance:function(base){return function(options){var instance=base(options);if(options.trackSpatial){instance.delegate?instance.delegate.loadEvent.listen(bsp.add.bind(bsp,instance)):bsp.add(instance);entities.push(instance);}return instance;};}(target.createInstance),update:function(deltaTime){bsp.update();}.extend(target.update),raytrace:function raytrace(sceenCoords){var raycaster=Raycaster.fromCamera(target.camera,sceenCoords);return bsp.search(raycaster.ray,Infinity).filter(function(entity){return raycaster.intersect(entity);});},get entities(){return entities;}};});factory.declare('scene',function(target,options){var clusterPartitioning=StaticClusterPartitioning({worldScale:100}),mutatedInstances=[],mutatedClusters=[],addDeferredInstance=function addDeferredInstance(instance){return mutatedInstances.indexOf(instance)==-1&&mutatedInstances.push(instance);},addDeferredCluster=function addDeferredCluster(cluster){if(cluster.awaitEvent)return false;var loadQueue=cluster.pointers.unique(function(instance){return instance.delegate.id;}).map(function(instance){return instance.delegate.loadEvent;}).filter(function(signal){return!signal.status;});if(!loadQueue.length)return clusterPartitioning.dispatchEvent('complete',cluster),true;cluster.awaitEvent=Signal.all(loadQueue).pipe(function(_){return addDeferredCluster((cluster.awaitEvent=false,cluster));});};clusterPartitioning.addEventListener('add',function(cluster){return mutatedClusters.indexOf(cluster)==-1&&mutatedClusters.push(cluster);});target.addEventListener('update',function(){if(mutatedInstances.length){mutatedInstances.forEach(function(instance){var worldPosition=vec3$1.translationFromMat4(instance.modelMatrix);clusterPartitioning.add(worldPosition,instance);});mutatedInstances.length=0;mutatedClusters.forEach(addDeferredCluster);mutatedClusters.length=0;}});return{clusterPartitioning:clusterPartitioning,createInstance:function(base){return function(options){var instance=base(options);if(instance.delegate&&instance.delegate.group==='static'){addDeferredInstance(instance);instance.onCleanup(mutatedInstances.remove.bind(mutatedInstances,instance));instance.onCleanup(clusterPartitioning.remove.bind(clusterPartitioning,instance));instance.mutation.pipe(addDeferredInstance.bind(null,instance));}return instance;};}(target.createInstance)};});factory.declare('scene',function(target,options){var resourceManager=options.manager,particleEmitters=Object.create(null);target.addEventListener('update',function(deltaTime){deltaTime=Math.min(1e3/60,0.001*deltaTime);Object.values(particleEmitters).forEach(function(emitter){emitter.instances.forEach(function(instance){return instance.advanceTime(deltaTime);});emitter.delegate&&emitter.delegate.advanceTime(deltaTime);});});return{defineParticleSystem:function defineParticleSystem(options){particleEmitters[options.name]=tie(options,{instances:[],texture:typeof options.texture==='string'?resourceManager.requestResource(options.texture):options.texture});return target;},createParticleEmitter:function createParticleEmitter(options){var particleSystem=particleEmitters[options.type];if(!particleSystem)throw new Error("Particle System \""+options.type+"\" not defined.");var instance=factory.build('particle_emitter',Object.assign({emitter:particleSystem},options));particleSystem.instances.push(instance);target.dispatchEvent('particle_emitter',instance,particleSystem);instance.onCleanup(particleSystem.instances.remove.bind(particleSystem.instances,instance));return instance;}};});factory.declare('particle_emitter',Observable);factory.declare('particle_emitter',Instance);factory.declare('particle_emitter',function(target,options){return{time:options.timeOffset||0,frequency:options.emitter.frequency||0,visible:true,get boundingSphereRadius(){return options.emitter.delegate?options.emitter.delegate.radius:0;},advanceTime:options.emitter.static?function(deltaTime){return target.time+=deltaTime;}:function(deltaTime){target.time+=deltaTime;var amountToSpawn=target.frequency&&Math.floor(target.time/target.frequency);if(amountToSpawn<=0||!options.emitter.delegate)return false;target.time-=amountToSpawn*target.frequency;options.emitter.delegate.emitParticles(amountToSpawn,target.modelMatrix);},trigger:function trigger(_){}};});factory.declare('scene',function(target,options){var surfaces=[];target.addEventListener('update',function(deltaTime){deltaTime*=1e-3;for(var i=surfaces.length-1;i>=0;i--){surfaces[i].advanceTime(deltaTime);}});return{surfaces:surfaces,createLiquidSurface:function createLiquidSurface(options){var instance=factory.build('liquid_surface',options);surfaces.push(instance);target.dispatchEvent('liquid_surface',instance);instance.onCleanup(surfaces.remove.bind(surfaces,instance));return instance;}};});factory.declare('liquid_surface',Observable);factory.declare('liquid_surface',Instance);factory.declare('liquid_surface',function(target,options){return{frequency:0.16,choppiness:4,height:1,color:vec3$1.copy(options.color||vec3$1.ZERO),time:options.timeOffset||0,visible:true,get boundingSphereRadius(){return 100*Math.max.apply(Math,_toConsumableArray(target.scale));},advanceTime:function advanceTime(deltaTime){return target.time+=deltaTime;}};});var scene=Object.freeze({Observable:Observable,Instance:Instance,Node:Node,BinaryPartitionTree:BinaryPartitionTree,OctreeObjectSegmentMappers:OctreeObjectSegmentMappers});var TIME_RESOLUTION=1e3;factory.declare('timeline',function(target,options){var DQS=options.dualQuatSkinning,frames=!DQS?options.frames:options.frames.map(function(frame){return Object.assign(frame,{transform:dualquat.fromRotationTranslation(frame.rotation,frame.position)});}),startTime=frames[0].time,endTime=frames[frames.length-1].time,minInterval=Array.range(frames.length-1).map(function(idx){return frames[idx+1].time-frames[idx].time;}).map(function(duration){return Math.floor(duration*TIME_RESOLUTION);}).reduce(greatestCommonDivisor)/TIME_RESOLUTION,pointerArray=new Uint16Array(minInterval?Math.floor((endTime-startTime)/minInterval)+1:0),interpolatedFrame=!DQS?{position:vec3$1(),rotation:quat$1()}:{transform:dualquat()};for(var p=0,i=0;p<pointerArray.length&&i<frames.length;frames[i].time-startTime>(p+0.5)*minInterval?pointerArray[++p]=i-1:pointerArray[p]=Math.min(frames.length-2,i++)){}return{sample:!DQS?function(time){if(time<startTime||minInterval===0)return frames[0];if(time>endTime)return frames[frames.length-1];var frameIdx=pointerArray[Math.floor((time-startTime)/minInterval)],frame=frames[frameIdx],nextFrame=frames[frameIdx+1],factor=(time-frame.time)/(nextFrame.time-frame.time);vec3$1.lerp(frame.position,nextFrame.position,factor,interpolatedFrame.position);quat$1.slerp(frame.rotation,nextFrame.rotation,factor,interpolatedFrame.rotation);return interpolatedFrame;}:function(time){if(time<startTime||minInterval===0)return frames[0];if(time>endTime)return frames[frames.length-1];var frameIdx=pointerArray[Math.floor((time-startTime)/minInterval)],frame=frames[frameIdx],nextFrame=frames[frameIdx+1],factor=(time-frame.time)/(nextFrame.time-frame.time);dualquat.lerp(frame.transform,nextFrame.transform,factor,interpolatedFrame.transform);return interpolatedFrame;},get duration(){return endTime;}};});factory.declare('animation',function(target,options){var DQS=options.dualQuatSkinning,layers=options.layers.map(function(bones){return bones.map(function(frames){return factory.build('timeline',{frames:frames,dualQuatSkinning:DQS});});}),duration=layers.map(function(timelines){return timelines.reduce(function(duration,timeline){return Math.max(duration,timeline.duration);},0);}),accPosition=vec3$1(),accRotation=quat$1(),frameTransform=!DQS?mat4.identity():dualquat();return{getLayerLength:function getLayerLength(layer){return duration[layer];},sample:!DQS?function(boneId,mixer){if(mixer.length===1){var clip=mixer[0],clipDuration=duration[clip.layer],sampler=layers[clip.layer][boneId];if(!sampler)return false;var frame=sampler.sample(clip.crop(clipDuration));return mat4.fromRotationTranslationScale(frame.rotation,frame.position,[1,1,1],frameTransform);}else if(mixer.length>1){vec3$1.copy([0,0,0],accPosition);vec4.copy([0,0,0,0],accRotation);mixer.forEach(function(clip){var clipDuration=duration[clip.layer],frame=layers[clip.layer][boneId].sample(clip.crop(clipDuration)),framePosition=frame.position,frameRotation=frame.rotation,weight=clip.weight||0;accPosition[0]+=weight*framePosition[0];accPosition[1]+=weight*framePosition[1];accPosition[2]+=weight*framePosition[2];accRotation[0]+=weight*frameRotation[0];accRotation[1]+=weight*frameRotation[1];accRotation[2]+=weight*frameRotation[2];accRotation[3]+=weight*frameRotation[3];});return mat4.fromRotationTranslationScale(accRotation,accPosition,[1,1,1],frameTransform);}}:function(boneId,mixer){if(mixer.length===1){var clip=mixer[0],clipDuration=duration[clip.layer],sampler=layers[clip.layer][boneId];if(!sampler)return false;var frame=sampler.sample(clip.crop(clipDuration));return dualquat.copy(frame.transform,frameTransform);}else if(mixer.length>1){dualquat.copy([0,0,0,0,0,0,0,0],frameTransform);mixer.forEach(function(clip){var clipDuration=duration[clip.layer],frame=layers[clip.layer][boneId].sample(clip.crop(clipDuration)),transform=frame.transform,weight=clip.weight||0;frameTransform[0]+=weight*transform[0];frameTransform[1]+=weight*transform[1];frameTransform[2]+=weight*transform[2];frameTransform[3]+=weight*transform[3];frameTransform[4]+=weight*transform[4];frameTransform[5]+=weight*transform[5];frameTransform[6]+=weight*transform[6];frameTransform[7]+=weight*transform[7];});return frameTransform;}}};});factory.declare('armature',function(target,options){options.dualQuatSkinning=true;var DQS=options.dualQuatSkinning,TRANSFORM_MATRIX_SIZE=!DQS?4*3:8,bones=snapshot(options.bones.slice(1)),animation=options.animation&&factory.build('animation',{layers:options.animation,dualQuatSkinning:DQS}),transformArray=new Float32Array(bones.length*TRANSFORM_MATRIX_SIZE),transform=[],worldTransform=[],tempMat=mat4();bones.forEach(function(bone,offsetId){Object.assign(bone,{id:offsetId+1,invBindPose:mat4.invert(bone.bindPose)});transform[bone.id]=new Float32Array(transformArray.buffer,Float32Array.BYTES_PER_ELEMENT*TRANSFORM_MATRIX_SIZE*offsetId,TRANSFORM_MATRIX_SIZE);mat4.copy(mat4.identity(),transform[bone.id]);if(DQS){bone.localTransform=dualquat.fromMat4(bone.localTransform);bone.invBindPose=dualquat.fromMat4(bone.invBindPose);worldTransform[bone.id]=dualquat();}else{worldTransform[bone.id]=mat4.identity();}});return{get bones(){return bones;},get animation(){return animation;},get worldTransform(){return worldTransform;},get transform(){return transform;},update:!DQS?function(mixer){bones.forEach(function(bone){var boneId=bone.id,parentBoneId=bone.parent,frameTransform=animation.sample(boneId,mixer)||bone.localTransform;mat4.copy(frameTransform,worldTransform[boneId]);if(parentBoneId>0)mat4.multiply(worldTransform[parentBoneId],worldTransform[boneId],worldTransform[boneId]);mat4.transpose(mat4.multiply(worldTransform[boneId],bone.invBindPose,tempMat),transform[boneId]);});}:function(mixer){bones.forEach(function(bone){var boneId=bone.id,parentBoneId=bone.parent,frameTransform=animation.sample(boneId,mixer)||bone.localTransform;dualquat.copy(frameTransform,worldTransform[boneId]);if(parentBoneId>0)dualquat.multiply(worldTransform[parentBoneId],worldTransform[boneId],worldTransform[boneId]);dualquat.multiply(worldTransform[boneId],bone.invBindPose,transform[boneId]);});},get jointMatrixArray(){return transformArray;}};});var AnimationClip=function AnimationClip(layer){var repeat=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-1;var scale=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;return Object.setPrototypeOf({layer:layer,repeat:repeat,scale:scale,time:0.0,weight:1.0},AnimationClip.prototype);};AnimationClip.prototype={crop:function crop(duration){if(this.time>duration){if(this.repeat!=-1)this.repeat=Math.max(this.repeat-Math.floor(this.time/duration),0);this.time=this.time%duration;}return this.time;}};factory.declare('instance',function(target,options){if(options.group!=='skinned')return null;var mixerStack=[];return{get animationClip(){return mixerStack;},update:function(deltaTime){for(var i=mixerStack.length-1;i>=0;i--){var clip=mixerStack[i];clip.time+=clip.scale*deltaTime/1000;if(clip.repeat==0)mixerStack.splice(i,1);}}.extend(target.update),insertClip:function insertClip(layer,repeat,scale){mixerStack.push(AnimationClip(layer,repeat,scale));}};});factory.declare('scene',function(target){target.addEventListener('update',function(deltaTime){target.fetchInstancesByGroup('skinned').forEach(function(mesh){return mesh.instances.forEach(function(instance){return instance.update(deltaTime);});});});});var defaultTransform=mat4.identity();var tempTransform=mat4();factory.declare('instance',function(target,options){if(options.group!=='skinned')return null;var boundRagdoll=null;target.onCleanup(function(){if(boundRagdoll)boundRagdoll.delete();boundRagdoll=false;});function findImposter(bones,bone){while(bone){var imposter=boundRagdoll.imposterMap[bone.id];if(imposter)return imposter;bone=bones[bone.parent-1];}}return{bindRagdoll:function bindRagdoll(builder){target.delegate.loadEvent.listen(function(){if(boundRagdoll!==null)return;var data=target.delegate.data;var bones=data.armature.bones;boundRagdoll=builder(bones);});},update:function(deltaTime){if(boundRagdoll&&target.ragdollEnabled){target.position=boundRagdoll.position;if(target.parent)vec4.transform(target.position,mat4.invert(target.parent.modelMatrix),target.position);}}.extend(target.update),applyTransform:function applyTransform(armature){if(!boundRagdoll||!target.ragdollEnabled)return;var invModelMatrix=mat4.invert(target.modelMatrix);for(var i=armature.bones.length-1;i>=0;i--){var bone=armature.bones[i];var boneId=bone.id;var frameTransform=defaultTransform;var imposter=findImposter(armature.bones,bone);if(imposter){var localTransform=mat4.fromRotationTranslationScale(imposter.quaternion,imposter.position,vec3$1.ONE,tempTransform);mat4.multiply(invModelMatrix,localTransform,localTransform);mat4.multiply(localTransform,imposter.invBindPose,localTransform);frameTransform=localTransform;}dualquat.fromMat4(frameTransform,armature.transform[boneId]);}}};});var animation=Object.freeze({});factory.declare('interaction',function(target,options){return{};});var MOUSE={LEFT_CLICK:0,MIDDLE_CLICK:1,RIGHT_CLICK:2};factory.declare('interaction',function(target,options){var capture=options.capture||window,position=vec2(),prevPosition=vec2(),mouseState=[];capture.addEventListener('mousedown',function(event){if(event.gesture)return;mouseState[event.button]=true;});capture.addEventListener('mouseup',function(event){mouseState[event.button]=false;});capture.addEventListener('mousemove',function(event){if(target.pointerLocked){var sensitivity=0.5;position[0]+=sensitivity*(event.movementX||event.mozMovementX||event.webkitMovementX||0);position[1]+=sensitivity*(event.movementY||event.mozMovementY||event.webkitMovementY||0);}else{position[0]=event.clientX;position[1]=event.clientY;}});capture.addEventListener('mousewheel',function(event){event.preventDefault();event.stopPropagation();},{passive:false});return{mouse:{get position(){var screenSpaceCoords=vec2.copy(position);screenSpaceCoords[0]=screenSpaceCoords[0]/window.innerWidth*2-1;screenSpaceCoords[1]=-(screenSpaceCoords[1]/window.innerHeight)*2+1;return screenSpaceCoords;},get left(){return mouseState[MOUSE.LEFT_CLICK];},get middle(){return mouseState[MOUSE.MIDDLE_CLICK];},get right(){return mouseState[MOUSE.RIGHT_CLICK];},get hold(){return mouseState[MOUSE.LEFT_CLICK];},get delta(){var direction=vec2.subtract(position,prevPosition);vec2.copy(position,prevPosition);return direction;}}};});var KEY_BINDINGS={'W':87,'A':65,'S':83,'D':68,'UP':38,'DOWN':40,'LEFT':37,'RIGHT':39,'CTRL':17,'SPACE':32};factory.declare('interaction',function(target,options){var keys=[];window.addEventListener('keydown',function(evt){var key=evt.which||evt.keyCode||0;keys[key]=true;});window.addEventListener('keyup',function(evt){var key=evt.which||evt.keyCode||0;keys[key]=false;});return{keyboard:{getKey:function getKey(keyName){return keys[KEY_BINDINGS[keyName]];}}};});factory.declare('interaction',function(target,options){return{};});factory.declare('interaction',function(target,options){var prefix=['','ms','moz','webkit'].find(function(prefix){return unCapitalize(prefix+'PointerLockElement')in window.document;});if(prefix==null)return false;var pointerLocked=false;window.document.addEventListener(prefix+'pointerlockchange',function(event){pointerLocked=!pointerLocked;},false);window.document.addEventListener(prefix+'pointerlockerror',function(event){},false);var requestPointerlock=function requestPointerlock(_){var f=unCapitalize(prefix+'RequestPointerLock');window.document.body[f]();};window.document.addEventListener('mousedown',function(event){if(pointerLocked)return;requestPointerlock();event.gesture='pointerlock';},false);return{get pointerLocked(){return pointerLocked;}};});var interaction=Object.freeze({KEY_BINDINGS:KEY_BINDINGS});factory.declare('application',function(target){var ctx=factory.build('gl_context',{manager:target}),interaction=factory.build('interaction',{element:ctx.canvas}),scene=factory.build('scene',{manager:target}),audio=factory.build('audio_context',{scene:scene}),physics=factory.build('physics'),screen=factory.build('screen'),time=factory.build('time');window.document.body.appendChild(ctx.canvas);screen.resize.pipe(function(event){ctx.resize(event.screen.width,event.screen.height);scene.camera.resize(event.screen);}).fix(function(e){return console.error(e);});screen.focus.pipe(function(event){audio.pause=!event.focus;});time.start().pulse.pipe(function(event){target.dispatchEvent('update',event.deltaTime);physics.update(1/60);scene.update(event.deltaTime);ctx.render(scene);}).fix(function(e){return console.error(e);});return tie({ctx:ctx,audio:audio,screen:screen,time:time,scene:scene,physics:physics,interaction:interaction},EventEmitter());});factory.declare('application',function(target){var time=target.time,tasks=Queue(),maxInterval=1000/60,thresholdStep=250/60;var elapsedTime=0,threshold=0,task=null;time.pulse.pipe(function(event){var prevTimestamp=event.timestamp;elapsedTime=time.timestamp-prevTimestamp-threshold;threshold=Math.max(0,threshold+(elapsedTime>maxInterval?thresholdStep:-thresholdStep));while(elapsedTime<maxInterval&&(task=tasks.shift())){elapsedTime=(task(),time.timestamp-prevTimestamp);}}).fix(function(e){return console.error(e);});return{get tasks(){return tasks;},schedule:function schedule(task){var duplicate=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return duplicate?tasks.push(task):tasks.hasElement(task)||tasks.push(task);},deferIteration:function deferIteration(processor,end){var begin=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var chunkMaxSize=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Number.MAX_SAFE_INTEGER;var out=arguments[4];return Signal(function(done){for(var offset=begin;offset<end;offset+=chunkMaxSize){target.schedule(target.iterateChunk.bind(target,processor,offset+Math.min(chunkMaxSize,end-offset),offset));}target.schedule(done.bind(null,out));});},iterateChunk:function iterateChunk(processor,end){var begin=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;for(var i=begin;i<end;processor(i++)){}},deferredMap:function deferredMap(processor,array,chunkMaxSize){var out=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];return target.deferIteration(function(i){return out[i]=processor(array[i],i,array);},array.length,0,chunkMaxSize,out);},runGenerator:function runGenerator(generator){return Signal(function(done){var next=function next(_){var generatorState=generator.next();generatorState.done?done(generatorState.value):target.schedule(next);};target.schedule(next);});}};});var immediateInvoker={schedule:function schedule(task){return task();}};factory.declare('application',function(target){var loader=factory.build('loader',{manager:target}),GLContext=target.ctx,audioContext=target.audio,resources=Object.create(null);return{unloadResource:function unloadResource(url){if(!resources[url].loaded)return false;if(resources[url].data.unload)resources[url].data.unload();delete resources[url];},requestResource:function requestResource(url){return resources[url]||(resources[url]={loaded:false,unload:target.unloadResource.bind(target,url),loadEvent:loader.fetch(url).split(function(resource){if(resource.type!==loader.RESOURCE_TYPE.MESH)return null;return GLContext.uploadMeshData(resource.data,null,false).pipe(function(mesh){return mesh.materials.forEach(function(material){return material.textures=material.textures||material.textureNames.filter(function(x){return x;}).map(function(filename){return path(url).base+filename;}).map(function(fullpath){return target.requestResource(fullpath);});}),mesh;});},function(resource){if(resource.type!==loader.RESOURCE_TYPE.TEXTURE)return null;return GLContext.uploadTexture(resource.data);},function(resource){if(resource.type!==loader.RESOURCE_TYPE.AUDIO)return null;return audioContext.uploadAudioBuffer(resource.data);},function(any){if(!loader.pending.length)GLContext.deferredDataUpload();return null;}).pipe(function(responses){return responses.find(function(x){return x;});}).pipe(function(resource){resources[url].loaded=true;resources[url].data=resource;return true;})});}};});factory.declare('application',function(target){var GLContext=target.ctx,scene=target.scene;GLContext.pipeline.pass(passes.SkyboxPass(GLContext,scene)).pass(passes.StaticGeometryPass(GLContext,scene,true)).pass(passes.SkinnedGeometryPass(GLContext,scene)).pass(passes.RealtimeLightingPass(GLContext,scene)).pass(passes.DecalGeometryPass(GLContext,scene,true)).pass(passes.LiquidSurfacePass(GLContext,scene)).pass(passes.ParticleEffectPass(GLContext,scene));return{};});var framework=Object.freeze({immediateInvoker:immediateInvoker});var flat_color={vert:vglsl.createShader().attribute('vec3','position').attribute('vec3','normal').uniform('mat4','projectionMatrix').uniform('mat4','modelViewMatrix').varying('vec3','normalPass').main(['vec4 viewPosition = modelViewMatrix * vec4(position, 1.0);','vec4 viewNormal = modelViewMatrix * vec4(normal, 0.0);','normalPass = viewNormal.xyz;','gl_Position = projectionMatrix * viewPosition;']),frag:vglsl.createShader().varying('vec3','normalPass').uniform('vec3','color').main(['vec3 normal = normalize(normalPass);','vec3 lightDirection = normalize(vec3(-1,1,1));','float lightFactor = 0.5 + 0.5 * dot(normal, lightDirection);','gl_FragColor = vec4(lightFactor * color, 1.0);'])};var createVisualRepresentation=function createVisualRepresentation(submeshes){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var vertices=[],indices=[];var indexOffset=0;submeshes.forEach(function(submesh){indices.push.apply(indices,submesh.indices.map(function(index){return index+indexOffset;}));vertices.push.apply(vertices,Array.range(submesh.vertices.length).map(function(index){return[].concat(_toConsumableArray(submesh.vertices[index]),_toConsumableArray(submesh.normals[index]));}).flatten());indexOffset+=submesh.vertices.length;});var position=options.position||vec3$1(0),quaternion=options.quaternion||quat$1(),scale=options.scale||vec3$1(1);return Object.assign({vertexArray:new Float32Array(vertices),indexArray:new Uint16Array(indices),dataFormat:[{type:'position',size:3,byteSize:4},{type:'normal',size:3,byteSize:4}],stride:6,color:vec3$1(0.5),position:position,quaternion:quaternion,scale:scale,modelMatrix:mat4.fromRotationTranslationScale(quaternion,position,scale,mat4())},options);};factory.declare('application',function(target){var ctx=target.ctx,gl=ctx.gl,scene=target.scene;target.debugOptions=URLQuery();var deferredVisuals=[],debugPasses=[];scene.addEventListener('update',function(_){if(!deferredVisuals.length)return false;deferredVisuals.forEach(function(visual){return visual.uploadEvent=ctx.uploadMeshData(visual,null,false).listen(function(mesh){return visual.data=mesh;});});ctx.deferredDataUpload();deferredVisuals.length=0;});var shader=ctx.compileShader(flat_color);var renderVisual=function renderVisual(visual){if(!visual.data)return false;ctx.enableVAO(visual.data);shader.uao.modelViewMatrix=mat4.multiply(scene.camera.viewMatrix,visual.modelMatrix,shader.uao.modelViewMatrix);shader.uao.color=vec3$1.copy(visual.color,shader.uao.color);shader.uao.update();if(visual.wireframe)gl.drawElements(gl.LINES,visual.data.totalSize,gl.UNSIGNED_SHORT,Uint16Array.BYTES_PER_ELEMENT*visual.data.offset);else ctx.drawElements(visual.data.totalSize,visual.data.offset);};ctx.pipeline.pass(function(ctx,scene,next,frame){ctx.saveState();shader.use();shader.uao.projectionMatrix=mat4.copy(scene.camera.projectionMatrix,shader.uao.projectionMatrix);debugPasses.forEach(function(pass){return pass.call(ctx,ctx,renderVisual);});ctx.restoreState();next();});return{addDebugVisuals:function addDebugVisuals(submeshes,options){var mesh=createVisualRepresentation(submeshes,options);deferredVisuals.push(mesh);return mesh;},removeDebugVisuals:function removeDebugVisuals(mesh){deferredVisuals.remove(mesh);if(mesh.uploadEvent)mesh.uploadEvent.listen(function(_){return ctx.unloadData(mesh.data);});},addDebugPass:debugPasses.push.bind(debugPasses)};});var shapeGeometry=(_shapeGeometry={},_defineProperty(_shapeGeometry,SHAPE_TYPE.PLANE,function(shape){return PlaneGeometry({halfWidth:1e4,halfHeight:1e4});}),_defineProperty(_shapeGeometry,SHAPE_TYPE.SPHERE,function(shape){return SphereGeometry({radius:shape.radius});}),_defineProperty(_shapeGeometry,SHAPE_TYPE.BOX,function(shape){return BoxGeometry({halfX:shape.halfExtents[0],halfY:shape.halfExtents[1],halfZ:shape.halfExtents[2]});}),_defineProperty(_shapeGeometry,SHAPE_TYPE.CONVEX,function(shape){return ConvexPolyhedronGeometry({corners:shape.vertices,faces:shape.faces});}),_shapeGeometry);factory.declare('application',function(target){if(!target.debugOptions.physics)return false;var scene=target.scene,physics=target.physics;var visuals=[];physics.addEventListener('bodyAdded',function(body){if(!body.visual)return false;var mesh=target.addDebugVisuals(body.shapes.map(function(shape,idx){var geometry=shapeGeometry[shape.type](shape),offset=body.shapeOffsets[idx],orientation=body.shapeOrientations[idx];geometry.normals.forEach(function(normal){return vec3$1.transformQuat(normal,orientation,normal);});geometry.vertices.forEach(function(vertex){return vec3$1.add(vec3$1.transformQuat(vertex,orientation,vertex),offset,vertex);});return geometry;}),{color:vec3$1(0.5,0.5,0.5),position:body.position,quaternion:body.quaternion});visuals.push([body,mesh]);});physics.addEventListener('bodyRemoved',function(body){var idx=visuals.findIndex(function(pair){return pair[0]===body;});if(idx==-1)return false;var mesh=visuals[idx][1];visuals.splice(idx,1);target.removeDebugVisuals(mesh);});physics.addEventListener('postStep',function(_){for(var i=visuals.length-1;i>=0;i--){var visual=visuals[i][1],imposter=visuals[i][0];vec3$1.copy(imposter.dynamic?[0.5,0.5,0.5]:[0.2,0.2,0.2],visual.color);vec3$1.copy(imposter.position,visual.position);quat$1.copy(imposter.quaternion,visual.quaternion);mat4.fromRotationTranslationScale(visual.quaternion,visual.position,vec3$1.ONE,visual.modelMatrix);}});target.addDebugPass(function(ctx,render){ctx.depthTest=true;ctx.culling='back';visuals.forEach(function(pair){return render(pair[1]);});});});factory.declare('application',function(target){if(!target.debugOptions.lights)return false;var scene=target.scene;var visuals=[];scene.addEventListener('light',function(light){if(!light.position)return;var mesh=target.addDebugVisuals([BoxGeometry({halfX:0.2,halfY:0.2,halfZ:0.2})],{color:light.color,position:light.camera.position,quaternion:quat$1()});light.onCleanup(function(){target.removeDebugVisuals(mesh);var index=visuals.findIndex(function(pair){return pair[0]===light;});if(index!=-1)visuals.splice(index,1);});visuals.push([light,mesh]);});scene.addEventListener('update',function(){for(var i=visuals.length-1;i>=0;i--){var visual=visuals[i][1],imposter=visuals[i][0];vec3$1.copy(imposter.color,visual.color);vec3$1.copy(imposter.camera.position,visual.position);mat4.fromRotationTranslationScale(visual.quaternion,visual.position,vec3$1.ONE,visual.modelMatrix);}});target.addDebugPass(function(ctx,render){ctx.depthTest=true;ctx.culling='back';visuals.forEach(function(pair){return render(pair[1]);});});});var WireframeBox=function WireframeBox(options){return Object.assign(BoxGeometry(options),{indices:[0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,8,9,9,10,10,11,11,8,12,13,13,14,14,15,15,12,16,17,17,18,18,19,19,16,20,21,21,22,22,23,23,20]});};factory.declare('application',function(target){if(!target.debugOptions.decals)return false;var visual=target.addDebugVisuals([WireframeBox({halfX:0.5,halfY:0.5,halfZ:0.5})],{color:[0.7,0.75,0.8,1],wireframe:true});target.addDebugPass(function(ctx,render){ctx.depthTest=true;ctx.culling='back';app.scene.fetchInstancesByGroup('decal').forEach(function(_ref39){var instances=_ref39.instances;return instances.forEach(function(instance){mat4.copy(instance.modelMatrix,visual.modelMatrix);render(visual);});});});});factory.declare('application',function(target){if(!target.debugOptions.raycast)return false;var scene=target.scene,physics=target.physics;var visual=target.addDebugVisuals([BoxGeometry({halfX:0.5,halfY:0.5,halfZ:0.5})],{color:[1,0,0],position:[0,0,0],quaternion:[0,0,0,1]});scene.addEventListener('update',function(){var origin=app.scene.camera.position;var target=vec3$1.add(origin,vec3$1.scale(app.scene.camera.forward,1000));var ray=V.physics.Ray(origin,target);var result=physics.raycast(ray,{skipBackFaces:true,nearest:true});if(result[0])visual.position=result[0].intersectionPoint;mat4.fromRotationTranslationScale(visual.quaternion,visual.position,vec3$1.ONE,visual.modelMatrix);});target.addDebugPass(function(ctx,render){ctx.depthTest=true;ctx.culling='back';render(visual);});});factory.declare('application',function(target){if(!target.debugOptions.navigation)return false;var scene=target.scene;var offset=vec3$1(0,0,0);var navigationWireframe=null;var navigationMesh=null;scene.addEventListener('navigation',function(navigationMeshGeometry){if(navigationWireframe)target.removeDebugVisuals(navigationWireframe);var wireframeGeometry=navigationMeshGeometry.groups.map(function(group){return{vertices:group.vertices,normals:Array(group.vertices.length).fill(vec3$1.AXIS_Y),indices:group.polygons.map(function(polygon){var indices=[];for(var i=polygon.indices.length-1,j=0;i>=0;j=i--){indices.push(polygon.indices[i],polygon.indices[j]);}return indices;}).flatten()};});navigationWireframe=target.addDebugVisuals(wireframeGeometry,{color:[0.0,0.7,0.4],wireframe:true,position:offset});if(navigationMesh)target.removeDebugVisuals(navigationMesh);var geometry=navigationMeshGeometry.groups.map(function(group){return ConvexPolyhedronGeometry({corners:group.vertices,faces:group.polygons.map(function(polygon){return polygon.indices;}),faceNormals:group.polygons.map(function(polygon){return polygon.normal;})});});navigationMesh=target.addDebugVisuals(geometry,{color:[0.0,0.2,0.0],position:offset});});target.addDebugPass(function(ctx,render){if(!navigationWireframe||!navigationMesh)return false;ctx.depthTest=true;ctx.culling=false;render(navigationWireframe);ctx.blendMode='add';render(navigationMesh);});});factory.declare('application',function(target){var ctx=target.ctx,gl=ctx.gl;var shader=ctx.compileShader(shaders.fullscreen);var quadVBO=factory.build('vbo',{ctx:ctx}).staticUpload(new Float32Array([0,0,1,0,1,1,0,1]),new Uint16Array([0,1,2,0,2,3]));shader.uao.sampler=0;var debugTexture=null;ctx.pipeline.pass(function(ctx,scene,next,frame){if(!debugTexture)return next();ctx.saveState();shader.use();quadVBO.bind();ctx.bindArrayAttribute(ATTRIBUTE_LOCATIONS['uv'],2,gl.FLOAT,false,2*4,0);debugTexture.bind(0);gl.drawElements(gl.TRIANGLES,6,gl.UNSIGNED_SHORT,0);ctx.restoreState();next();});window.setDebugTexture=function(value){return debugTexture=value;};});var WalkingCameraController=function WalkingCameraController(camera,interaction,options){options=Object.assign({initialPosition:vec3$1(0),initialRotation:quat$1(),speedScale:1,walkingPlane:vec3$1(0,1,0)},options||{});var movement=vec3$1(0),forward=vec3$1(),left=vec3$1();camera.position=options.initialPosition||vec3$1.ZERO;camera.rotation=options.initialRotation||quat$1();return function(dt){var speed=dt*options.speedScale;vec3$1.copy(vec3$1.ZERO,movement);vec3$1.scale(options.walkingPlane,vec3$1.dot(camera.forward,options.walkingPlane),forward);vec3$1.subtract(camera.forward,forward,forward);vec3$1.normalize(forward,forward);vec3$1.scale(options.walkingPlane,vec3$1.dot(camera.left,options.walkingPlane),left);vec3$1.subtract(camera.left,left,left);vec3$1.normalize(left,left);if(interaction.keyboard.getKey('S'))vec3$1.subtract(movement,forward,movement);else if(interaction.keyboard.getKey('W'))vec3$1.add(movement,forward,movement);if(interaction.keyboard.getKey('D'))vec3$1.subtract(movement,left,movement);else if(interaction.keyboard.getKey('A'))vec3$1.add(movement,left,movement);vec3$1.normalize(movement,movement);vec3$1.scale(movement,speed,movement);vec3$1.add(camera.position,movement,camera.position);var delta=interaction.mouse.delta;if(interaction.pointerLocked)camera.rotate(0.01*delta[0],0.01*delta[1]);return movement;};};var defaultColors=['#FFF','#F77','#7FF','#7F0'];var DomElement=function DomElement(tagName){var dom=window.document.createElement(tagName);return{get dom(){return dom;},add:function add(element){return dom.appendChild(element.dom||element);},set visible(value){value?dom.style.removeProperty('display'):dom.style.setProperty('display','none');},set text(value){dom.innerHTML=value;}};};var Canvas=function Canvas(_){var element=DomElement('canvas'),canvas=element.dom,context=canvas.getContext('2d'),dpr=Math.round(window.devicePixelRatio||1);context.imageSmoothingEnabled=false;return Object.assign(element,{get context(){return context;},resize:function resize(width,height){canvas.width=width*dpr;canvas.height=height*dpr;canvas.style.width=width+'px';canvas.style.height=height+'px';},clear:function clear(_){return context.clearRect(0,0,canvas.width,canvas.height);},fill:function fill(offsetX,offsetY,width,height,color){context.globalCompositeOperation='source-over';context.fillStyle=color;context.fillRect(offsetX*dpr,offsetY*dpr,width*dpr,height*dpr);},blit:function blit(sourceOffsetX,sourceOffsetY,sourceWidth,sourceHeight,offsetX,offsetY,width,height){context.globalCompositeOperation='copy';context.drawImage(canvas,sourceOffsetX*dpr,sourceOffsetY*dpr,sourceWidth*dpr,sourceHeight*dpr,offsetX*dpr,offsetY*dpr,width*dpr,height*dpr);}});};var Graph$1=function Graph$1(){var _ref40=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref40$label=_ref40.label,label=_ref40$label===undefined?'':_ref40$label,_ref40$colors=_ref40.colors,colors=_ref40$colors===undefined?defaultColors:_ref40$colors,_ref40$width=_ref40.width,width=_ref40$width===undefined?72:_ref40$width,_ref40$height=_ref40.height,height=_ref40$height===undefined?36:_ref40$height,_ref40$range=_ref40.range,range=_ref40$range===undefined?64:_ref40$range,_ref40$precision=_ref40.precision,precision=_ref40$precision===undefined?0:_ref40$precision;var element=DomElement('div'),header=DomElement('div'),canvas=Canvas();element.add(header);element.add(canvas);canvas.dom.style.cssText="\n\tmargin: auto;\n\toutline: 1px solid "+colors[0]+";\n    outline-offset: -1px;";element.dom.style.cssText="\n\tcolor: "+colors[0]+";\n\tpadding: 4px;\n\tfont-size: "+Math.floor(height/4)+"px;\n\tdisplay: inline-block;\n\twidth: "+width+"px;";canvas.resize(width,height);header.text=label;var step=Math.round(width/range)||1,heights=new Float32Array(range);var max=0,cursor=0;return Object.assign(element,{update:function update(values,maxScale){if(!(values instanceof Array))values=[values];var value=values.reduce(function(sum,v){return sum+v;},0);cursor=(cursor||range)-1;heights[cursor]=value;for(var i=1;i<range;i++){var _ii=(cursor+i)%range;if(heights[_ii]>value)break;heights[_ii]=value;}var edgeMax=maxScale||heights[(cursor||range)-1];var scaleY=max/edgeMax||1;max=edgeMax;canvas.blit(step,0,width,height,0,(1-scaleY)*height,width,height*scaleY);for(var offset=0,_i55=0;_i55<values.length;_i55++){var y=Math.ceil(values[_i55]/max*height*0.8);canvas.fill(width-step,height-y-offset,step,y,colors[_i55%colors.length]);offset+=y;}header.text=label+" "+value.toFixed(precision)+"/"+max.toFixed(precision);}});};var Indicator=function Indicator(){var _ref41=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref41$label=_ref41.label,label=_ref41$label===undefined?'':_ref41$label,_ref41$colors=_ref41.colors,colors=_ref41$colors===undefined?defaultColors:_ref41$colors,_ref41$width=_ref41.width,width=_ref41$width===undefined?72:_ref41$width,_ref41$height=_ref41.height,height=_ref41$height===undefined?36:_ref41$height,_ref41$precision=_ref41.precision,precision=_ref41$precision===undefined?0:_ref41$precision;var element=DomElement('div'),header=DomElement('div'),canvas=Canvas();element.add(header);element.add(canvas);canvas.dom.style.cssText="\n\toutline: 1px solid "+colors[0]+";\n    outline-offset: -1px;";element.dom.style.cssText="\n\tcolor: "+colors[0]+";\n\tpadding: 4px;\n\tfont-size: "+Math.floor(height/4)+"px;\n\tdisplay: inline-block;\n\twidth: "+width+"px;";canvas.resize(width,height);header.text=label;return Object.assign(element,{update:function update(values,threshold){canvas.context.globalAlpha=0.96;canvas.blit(0,0,width,height,0,0,width,height);canvas.context.globalAlpha=1;for(var barWidth=height/values.length,i=0;i<values.length;i++){var x=Math.ceil(values[i]/threshold*width*0.9);canvas.fill(width-x,height-barWidth*(i+1),x,barWidth,colors[i%colors.length]);}header.text=label+" "+values.reduce(function(acc,v){return acc+v;},0).toFixed(precision);}});};var Display=function Display(){var _ref42=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref42$background=_ref42.background,background=_ref42$background===undefined?'rgba(0, 0, 0, 0.5)':_ref42$background;var element=DomElement('div');element.dom.style.cssText="\n\tbackground-color: "+background+";\n\tposition:fixed;\n\ttop:0;\n\tleft:0;\n\toverflow: hidden;\n\twhite-space: nowrap;\n\tcursor: default;\n\tuser-select: none;\n\tfont-weight: bold;\n\tfont-family: Verdana, Geneva, sans-serif;\n\tz-index:10000';";element.dom.addEventListener('click',function(event){event.preventDefault();},false);return Object.assign(element,{});};var MonitoringToolkit=function MonitoringToolkit(options){var display=Display();var fpsDisplay=Graph$1({label:'FPS',range:32}),msDisplay=Graph$1({label:'MS',precision:1}),memoryDisplay=Graph$1({label:'MB'}),queueDisplay=Graph$1({label:'TASKS',range:32}),drawCallDisplay=Indicator({label:'DRAWS'});display.add(fpsDisplay);display.add(msDisplay);display.add(queueDisplay);display.add(drawCallDisplay);display.add(memoryDisplay);var prevTimestamp=performance.now(),frameCounter=0;window.document.body.appendChild(display.dom);return{captureFrame:function captureFrame(_ref43){var drawCalls=_ref43.drawCalls,tasks=_ref43.tasks,ms=_ref43.ms;var timestamp=performance.now(),deltaTime=timestamp-prevTimestamp;frameCounter++;drawCallDisplay.update(drawCalls,100);queueDisplay.update(tasks);msDisplay.update(ms);if(deltaTime>=1000){fpsDisplay.update(frameCounter*1000/deltaTime,60);prevTimestamp=timestamp;frameCounter=0;if(performance.memory)memoryDisplay.update(performance.memory.usedJSHeapSize/1048576,performance.memory.jsHeapSizeLimit/1048576);}}};};var sharedData={drawCalls:0,ms:[]};factory.declare('gl_context',function(target){return{drawElements:function(_){return++sharedData.drawCalls;}.extend(target.drawElements),drawArrays:function(_){return++sharedData.drawCalls;}.extend(target.drawArrays),render:function(base){return function(){sharedData.ms[0]=window.performance.now();var out=base.apply(undefined,arguments);out.listen(function(_){return sharedData.ms[0]=window.performance.now()-sharedData.ms[0];},null,false);return out;};}(target.render)};});factory.declare('pipeline',function(target){var drawCalls=[];var passId=0;return{run:function(_){return drawCalls.length=passId=0;}.extend(target.run),get drawCalls(){return drawCalls;},pass:function(base){return function(callable){return base(function(ctx,scene,next){for(var _len20=arguments.length,args=Array(_len20>3?_len20-3:0),_key20=3;_key20<_len20;_key20++){args[_key20-3]=arguments[_key20];}return callable.apply(undefined,[ctx,scene,function(_){drawCalls[passId++]=sharedData.drawCalls;sharedData.drawCalls=0;}.extend(next)].concat(args));});};}(target.pass)};});factory.declare('scene',function(target){return{update:function(base){return function(){sharedData.ms[2]=window.performance.now();var out=base.apply(undefined,arguments);sharedData.ms[2]=window.performance.now()-sharedData.ms[2];return out;};}(target.update)};});factory.declare('application',function(target){var monitoring=MonitoringToolkit(),frameEvent={drawCalls:target.ctx.pipeline.drawCalls,tasks:0,ms:sharedData.ms};target.physics.addEventListener('preStep',function(_){return sharedData.ms[1]=window.performance.now();});target.physics.addEventListener('postStep',function(_){return sharedData.ms[1]=window.performance.now()-sharedData.ms[1];});target.time.pulse.attach(function(event){frameEvent.tasks=target.tasks.length;monitoring.captureFrame(frameEvent);},null,false);});window.DEBUG=true;var setupParticleEffects=function setupParticleEffects(app){var RangeSampler=V.graphics.RangeSampler,vec3=V.math.vec3,quat=V.math.quat;app.scene.defineParticleSystem({name:'fire',group:'billboarded',blend:'add',texture:null,static:true,colorRamp:[[1,1,1,1],[0.2,0.8,1,1],[0,0.2,1,1],[0,0,0.5,0.5],[0,0,0,0]],count:64,emitter:{worldVelocity:[0,0,0],worldAcceleration:[0,-9.8,0]},particle:{lifeTime:2,position:[0,0,0],startTime:function startTime(i,count,conf){return i*conf.lifeTime/count;},velocity:RangeSampler([0,1,0],[0.8,1.5,0.8]),startSize:1.2,acceleration:[0,12,0],endSize:6,spinStart:0,spinSpeed:RangeSampler(0,4),color:[0.75,0.75,0.5,1]}});app.scene.defineParticleSystem({name:'fog',group:'billboarded',blend:'blend',texture:'assets/effects/fog.png',colorRamp:[[0.8,0.8,0.8,0],[0.8,0.8,0.8,0.25],[0.8,0.8,0.8,0.25],[0,0,0,0]],static:true,count:36,frequency:1,emitter:{worldVelocity:[0,0,0],worldAcceleration:[0,0,0]},particle:{lifeTime:8,position:RangeSampler([0,5,0],[10,10,10]),startTime:function startTime(i,count,conf){return i*conf.lifeTime/count;},velocity:RangeSampler([-0.1,-0.1,-0.1],[0.1,0.1,0.1]),startSize:RangeSampler(16,24),acceleration:[0,0,0],endSize:RangeSampler(20,30),spinStart:RangeSampler(0,2*Math.PI),spinSpeed:RangeSampler(-0.2,0.2),color:[1,1,1,1]}});app.scene.defineParticleSystem({name:'projectile',group:'oriented',blend:'add',texture:'assets/effects/projectile.png',colorRamp:[[1,1,1,1],[1,1,1,1],[1,0,0,1],[0,0,0,0]],count:64,frequency:0.1,emitter:{worldVelocity:[0,0,0],worldAcceleration:[0,0,0],timeRange:4*128,frameCount:8,frameDuration:0.36*1/8},particle:{lifeTime:1,frameStart:0,position:[0,0,0],startTime:function startTime(i,count,conf){return i*conf.lifeTime/count;},velocity:[0,0,0],startSize:4,acceleration:[0,0,0],endSize:0,spinStart:RangeSampler(0,Math.PI),spinSpeed:RangeSampler(0,0.1),orientation:function orientation(_){return quat.normalize([Math.random(),Math.random(),Math.random(),Math.random()]);},color:[1,1,1,1]}});};var setupPhysics=function setupPhysics(app){defineMaterials:{var materials=V.physics.materialLibrary;materials.obstacleMaterial=materials.createMaterial({name:'obstacles'});materials.ragdollMaterial=materials.createMaterial({name:'ragdoll'});materials.playerMaterial=materials.createMaterial({name:'player'});materials.createContactMaterial(materials.playerMaterial,materials.defaultContactMaterial,{collisionResponse:false});materials.createContactMaterial(materials.obstacleMaterial,materials.defaultContactMaterial,{});materials.createContactMaterial(materials.obstacleMaterial,materials.playerMaterial,{friction:0.0,restitution:0.0});materials.createContactMaterial(materials.ragdollMaterial,materials.ragdollMaterial,{collisionResponse:false});}};var setupConfiguration=function setupConfiguration(app){setupPhysics(app);setupParticleEffects(app);};var World=function World(app){var scene=app.scene,physics=app.physics,entities=[],procedures=[];app.addEventListener('update',function(deltaTime){return procedures.forEach(function(regulation){return regulation.update(deltaTime);});});scene.addEventListener('update',function(_){return procedures.forEach(function(regulation){return regulation.synchronize();});});function deserializeVisuals(options){var _app$scene$createInst;var _options=options,_options$nodes=_options.nodes,nodes=_options$nodes===undefined?[]:_options$nodes,className=_options.className;options=Object.assign(Object.create(null),options);delete options.nodes;delete options.className;switch(className){case'instance':return(_app$scene$createInst=app.scene.createInstance(options)).addElement.apply(_app$scene$createInst,_toConsumableArray(nodes.map(deserializeVisuals)));case'light':return app.scene.createLight(options);case'emitter':return app.scene.createParticleEmitter(options);case'liquid':return app.scene.createLiquidSurface(options);case'audio':return app.scene.createAudioSource(options);default:throw new Error("Class \""+className+"\" not defined!");}}return{addEntity:function addEntity(entity){entity.visual=deserializeVisuals(entity.visual);entity.solidGeometry=scene.addSolidGeometry(entity.imposter);entity.imposter=V.physics.deserialize(entity.imposter).map(function(body){return physics.addBody(body);});entity.behavior=entity.behavior.map(function(initRegulation){return initRegulation(entity);});entity.behavior.forEach(function(regulation){return regulation.synchronize();});procedures.push.apply(procedures,_toConsumableArray(entity.behavior));entities.push(entity);return entity;},removeEntity:function removeEntity(entity){var idx=entities.indexOf(entity);if(idx==-1)return false;entities.splice(idx,1);entity.behavior.forEach(function(regulation){procedures.remove(regulation);regulation.clear();});entity.imposter.forEach(function(imposter){return physics.removeBody(imposter);});entity.visual&&entity.visual.delete();entity.solidGeometry&&scene.removeSolidGeometry(entity.solidGeometry);}};};var GroundPin=function GroundPin(target,physics,options){options=Object.assign({detachThreshold:5,rayLength:1e2},options||{});var rayTarget=vec3$1();var rayNormal=vec3$1.copy(vec3$1.AXIS_Y);var pinned=false;var ground=null;var pin=RigidBody({mass:0,position:vec3$1.copy(target.position),quaternion:quat$1()});var spring=Spring(target,pin,{restLength:1,stiffness:1e4,damping:1e3});function hitTestGround(){var contactEquations=physics.narrowphase.contactEquations;var normal=vec3$1();vec3$1.negate(vec3$1.AXIS_Y,normal);for(var minY=Infinity,i=contactEquations.length-1;i>=0;i--){var _contactEquations$i=contactEquations[i],bodyA=_contactEquations$i.bodyA,bodyB=_contactEquations$i.bodyB,contactPointA=_contactEquations$i.contactPointA,contactPointB=_contactEquations$i.contactPointB,contactNormal=_contactEquations$i.contactNormal;if(bodyA===target&&contactPointA[1]<minY){minY=contactPointA[1];vec3$1.negate(contactNormal,normal);ground=bodyB;}else if(bodyB===target&&contactPointB[1]<minY){minY=contactPointB[1];vec3$1.copy(contactNormal,normal);ground=bodyA;}}var dot=vec3$1.dot(vec3$1.AXIS_Y,normal);return dot>0;}return{normal:rayNormal,position:pin.position,get ground(){return ground;},get pinned(){return pinned;},detach:function detach(){pinned=false;physics.subsystems.remove(spring);},update:function update(deltaTime){vec3$1.scale(vec3$1.AXIS_Y,-options.rayLength,rayTarget);vec3$1.add(target.position,rayTarget,rayTarget);var ray=Ray$1(target.position,rayTarget);var _physics$raycast=physics.raycast(ray,{skipBackFaces:true,nearest:true}),_physics$raycast2=_slicedToArray(_physics$raycast,1),rayIntersection=_physics$raycast2[0];if(rayIntersection){var intersectionPoint=rayIntersection.intersectionPoint,intersectionNormal=rayIntersection.intersectionNormal;vec3$1.copy(intersectionNormal,rayNormal);vec3$1.copy(intersectionPoint,pin.position);}var grounded=hitTestGround();if(!pinned&&grounded){pinned=true;physics.subsystems.push(spring);}else if(pinned&&vec3$1.difference(ray.origin,pin.position)>options.detachThreshold){pinned=false;physics.subsystems.remove(spring);}}};};var Player=function Player(camera,interaction,app,handlers){return function(entity){var imposter=entity.imposter[0],visual=entity.visual,floorNormal=vec3$1(0,1,0),processCameraMovement=WalkingCameraController(camera,interaction,{walkingPlane:floorNormal}),groundPin=GroundPin(imposter,app.physics),cameraOffset=vec3$1(0,0.8,0);camera.rotation=quat$1.conjugate(imposter.quaternion);var footsteps={timeElapsed:0,concrete:visual.elements[1],metal:visual.elements[2],playing:null};return{update:function update(deltaTime,updateContext){groundPin.update(deltaTime);vec3$1.copy(groundPin.normal,floorNormal);var direction=processCameraMovement(deltaTime);vec3$1.scale(direction,0.16,direction);vec3$1.add(groundPin.position,direction,groundPin.position);if(groundPin.pinned){vec3$1.copy(vec3$1.ZERO,imposter.velocity);}else{imposter.velocity[0]=direction[0];imposter.velocity[2]=direction[2];}if(!vec3$1.equals(direction,vec3$1.ZERO)&&groundPin.ground){var cover=groundPin.ground.cover;if(footsteps.playing!=cover){if(footsteps.playing)footsteps[footsteps.playing].stop();footsteps.playing=cover;if(footsteps[footsteps.playing])footsteps[footsteps.playing].play();}footsteps.timeElapsed+=deltaTime;}else if(footsteps.playing){footsteps[footsteps.playing].stop();footsteps.playing=null;footsteps.timeElapsed=0;}if(interaction.mouse.left&&!visual.elements[0].animationClip.length){visual.elements[0].insertClip(0,1,1);var origin=vec3$1.add(imposter.position,cameraOffset);var _direction=vec3$1.transformQuat(vec3$1.AXIS_Z,visual.rotation);handlers.weapon.use(vec3$1.add(origin,vec3$1.scale(_direction,-0.5)),_direction);visual.elements[4].play();}},synchronize:function synchronize(_){camera.position=vec3$1.add(imposter.position,cameraOffset,vec3$1.temp);visual.position=camera.position;visual.position[1]+=0.012*Math.sin(0.01*footsteps.timeElapsed);visual.rotation=quat$1.conjugate(camera.rotation,quat$1.temp);},clear:function clear(_){}};};};var Weapon=function Weapon(world){return{use:function use(position,velocity){var projectile=world.addEntity({visual:{className:'instance',nodes:[{className:'emitter',type:'projectile',timeOffset:0,position:[0,0,0],frequency:0.4}]},behavior:[function(entity){vec3$1.scale(velocity,-20,velocity);vec3$1.copy(velocity,entity.imposter[0].velocity);var lifespan=5000;return{update:function update(deltaTime){lifespan-=deltaTime;if(lifespan<0)world.removeEntity(projectile);},synchronize:function synchronize(){return entity.visual.position=entity.imposter[0].position;},clear:function clear(){}};}],imposter:[{material:'playerMaterial',mass:1,position:vec3$1.copy(position),quaternion:quat$1(0,0,0,1),shapes:[{type:'sphere',radius:0.5}]}]});}};};var buildLadder=function buildLadder(name,position,quaternion){return[].concat(_toConsumableArray(Array.range(8).map(function(idx){return{material:'obstacleMaterial',cover:'metal',mass:0,position:[54.4,-32.6+idx*4,idx%2?-113:-117],quaternion:quat$1.setAxisAngle(vec3$1.AXIS_Y,idx%2?Math.PI:0),shapes:[{type:'convex',vertices:[[0,0,0],[0,4,0],[0,0,4],[2,0,0],[2,4,0],[2,0,4]],faces:[[2,1,0],[4,5,3],[2,5,4,1],[3,5,2,0],[1,4,3,0]]}]};})),_toConsumableArray(Array.range(8).map(function(idx){return{material:'obstacleMaterial',cover:'metal',mass:0,position:[54.4,-30.8+idx*4+0.2,idx%2?-112:-118],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2,2,1]}]};})),[{name:'ladder-center',mass:0,material:'obstacleMaterial',position:[54.6,-14.6,-115],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[0.2,18,2]}]},{name:'ladder-front-wall',mass:0,material:'obstacleMaterial',position:[57.4,-14.6,-115],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[1,18,4]}]},{name:'ladder-back-wall',mass:0,material:'obstacleMaterial',position:[51.6,-14.6,-115],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[1.2,14,4]}]},{name:'ladder-right-wall',mass:0,material:'obstacleMaterial',position:[54.4,-14.6,-120],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[4,18,1]}]},{name:'ladder-left-wall',mass:0,material:'obstacleMaterial',position:[54.4,-14.6,-110],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[4,18,1]}]}]);};var buildWalls=function buildWalls(){return[{name:'lower-floor',cover:'concrete',mass:0,material:'obstacleMaterial',position:[74,-42.6,-114],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[40,10,40]}]},{name:'upper-entrance-floor',cover:'concrete',mass:0,material:'obstacleMaterial',position:[16.2,-5.6,-114],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[34.2,5,40]}]},{name:'upper-entrance-ledge',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-14,0.7,-114],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[4,1.3,8]}]},{name:'upper-entrance-left-wall',mass:0,material:'obstacleMaterial',position:[-16.2,5.4,-114+4.5],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[1.8,6,3.5]}]},{name:'upper-entrance-right-wall',mass:0,material:'obstacleMaterial',position:[-16.2,5.4,-114-4.5],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[1.8,6,3.5]}]},{name:'upper-entrance-right-ramp',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-10,-0.6,-114-8],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[0,2.6,0],[4,0,0],[0,0,4],[0,2.6,4],[4,0,4]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'upper-entrance-left-ramp',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-10,-0.6,-114+8-4],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[0,2.6,0],[4,0,0],[0,0,4],[0,2.6,4],[4,0,4]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'upper-left-wall',mass:0,material:'obstacleMaterial',position:[10,5.4,-90],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[28,6,16]}]},{name:'upper-right-wall',mass:0,material:'obstacleMaterial',position:[10,5.4,-138],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[28,6,16]}]}].concat(_toConsumableArray(Array.range(8).map(function(idx,index,array){var center=[74,3.4,-114];var distance=38;var angle=Math.PI+2*Math.PI*idx/array.length;var direction=vec2.direction(angle,distance);center[0]+=direction[0];center[2]+=direction[1];var edge=2*(distance+2)*Math.tan(Math.PI/array.length);return{material:'obstacleMaterial',mass:0,position:center,quaternion:quat$1.setAxisAngle(vec3$1.AXIS_Y,-angle),shapes:[{type:'box',halfExtents:[2,36,0.5*edge]}]};}).slice(1)),_toConsumableArray(Array.range(8).map(function(idx,index,array){var center=[74,-5.6,-114];var distance=30;var angle=Math.PI+2*Math.PI*idx/array.length;var direction=vec2.direction(angle,distance);center[0]+=direction[0];center[2]+=direction[1];var edge=2*(distance+8)*Math.tan(Math.PI/array.length);return{material:'obstacleMaterial',cover:'concrete',mass:0,position:center,quaternion:quat$1.setAxisAngle(vec3$1.AXIS_Y,-angle),shapes:[{type:'box',halfExtents:[8,5,0.5*edge]}]};}).slice(1)),_toConsumableArray(buildLadder()),[{name:'lower-entrance-floor',cover:'concrete',mass:0,material:'obstacleMaterial',position:[16,-46.6,-114.1],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[18,6,3.9]}]},{name:'lower-entrance-ramp',cover:'concrete',mass:0,material:'obstacleMaterial',position:[0,-40.6,-118],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[34,8,0],[34,0,0],[0,0,7.8],[34,8,7.8],[34,0,7.8]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'lower-entrance-left-wall',mass:0,material:'obstacleMaterial',position:[-1,-26.3,-111.6],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[1,15.7,1.4]}]},{name:'lower-entrance-right-wall',mass:0,material:'obstacleMaterial',position:[-1,-26.3,-116.6],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[1,15.7,1.4]}]},{name:'A1_wall_lower_right',mass:0,material:'obstacleMaterial',position:[18,-31.6,-136],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[20,21,18]}]},{name:'A1_wall_lower_left',mass:0,material:'obstacleMaterial',position:[18,-31.6,-92.1],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[20,21,18.1]}]}]);};var chamberA={visual:{className:'instance',position:[0,0,0],rotation:[0,0,0,1],nodes:[{className:'instance',group:'static',url:'assets/environment/chamber-a.vmf',position:[0,0,0],scale:vec3$1(1)},{className:'instance',group:'static',url:'assets/environment/scaffolding-a.vmf',position:[0,0,0],scale:vec3$1(1)},{className:'instance',group:'static',url:'assets/environment/hob.vmf',position:[0,0,0],scale:vec3$1(1)},{className:'light',type:'spotlight',position:[-13,10,-114],destination:[50,2,-114],color:[1.0,0.3,0.3],angle:0.45*Math.PI,radius:24.0,castShadow:false},{className:'light',type:'spotlight',position:[100,64,-114],destination:[50,-30,-114],color:[0.5,0.54,0.6],angle:0.45*Math.PI,radius:56.0,castShadow:true},{className:'light',type:'omnilight',position:[-6,8,-114],color:[0.9,0.2,0.2],radius:8.0,castShadow:false},{className:'light',type:'omnilight',position:[74.5,-30,-114.5],color:[0.36,1.0,1.6],radius:24.0,castShadow:true},{className:'emitter',type:'fire',timeOffset:0,position:[74.5,-32,-114.5]},{className:'audio',url:'assets/sounds/gas.mp3',position:[74.5,-32,-114.5],volume:1.6,loop:true,startTime:0},{className:'instance',group:'decal',url:'assets/effects/blood-a.png',position:[74.5,-32.6,-114.5],scale:vec3$1(2*14,2*14,2*14),rotation:quat$1.setAxisAngle(vec3$1.AXIS_X,0.5*Math.PI)},{className:'instance',group:'dynamic',url:'assets/environment/cargo.vmf',position:[0,0,0],scale:[4,4,4]},{className:'instance',group:'dynamic',url:'assets/environment/cargo.vmf',position:[0,0,0],scale:[4,4,4]},{className:'instance',group:'dynamic',url:'assets/environment/cargo.vmf',position:[0,0,0],scale:[4,4,4]},{className:'instance',group:'dynamic',url:'assets/environment/cargo.vmf',position:[0,0,0],scale:[4,4,4]},{className:'instance',group:'dynamic',url:'assets/environment/cargo.vmf',position:[0,0,0],scale:[4,4,4]}]},behavior:[],imposter:[].concat(_toConsumableArray(buildWalls()),_toConsumableArray([[98,4,-93],[102,4,-102],[101.5,8,-101.5],[93,4,-96],[93.5,8,-95.5]].map(function(position){return{name:'box',mass:1,material:'defaultContactMaterial',position:position,quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2,2,2]}]};}))),metaData:{connectors:[{position:[-2+1,-40.6,-114-0.5],normal:[-1,0,0]},{position:[-18+1,2,-114],normal:[-1,0,0]}],start:[88,-20,-115]}};var buildLadder$1=function buildLadder$1(name,position,quaternion){return[].concat(_toConsumableArray(Array.range(4).map(function(idx){return{material:'obstacleMaterial',cover:'metal',mass:0,position:[-8.4,idx*4,idx%2?2:-2],quaternion:quat$1.setAxisAngle(vec3$1.AXIS_Y,idx%2?Math.PI:0),shapes:[{type:'convex',vertices:[[0,0,0],[0,4,0],[0,0,4],[2,0,0],[2,4,0],[2,0,4]],faces:[[2,1,0],[4,5,3],[2,5,4,1],[3,5,2,0],[1,4,3,0]]}]};})),_toConsumableArray(Array.range(4).map(function(idx){return{material:'obstacleMaterial',cover:'metal',mass:0,position:[-8.4,2+idx*4,idx%2?3:-3],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2,2,1]}]};})),[{name:'ladder-center',mass:0,material:'obstacleMaterial',position:[-8.2,9,0],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[0.2,9,2]}]},{name:'ladder-back-wall',mass:0,material:'obstacleMaterial',position:[-5.4,12,0],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[1,10,4]}]},{name:'ladder-bottom-part',mass:0,material:'obstacleMaterial',position:[-9.2,2,1],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[1.2,2,3]}]}]);};var buildWalls$1=function buildWalls$1(){return[{name:'floor',cover:'concrete',mass:0,material:'obstacleMaterial',position:[42,-10,0],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[62,10,35]}]}].concat(_toConsumableArray([[14,7],[14,-7],[18,16],[18,-16],[30,5],[30,-5],[40,16],[40,-16],[62,16],[62,-16],[73,5],[73,-5]].map(function(_ref44){var _ref45=_slicedToArray(_ref44,2),x=_ref45[0],z=_ref45[1];return{mass:0,material:'obstacleMaterial',position:[x,20,z],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[3.6,20,2]}]};})),[{name:'upper-entrance-floor',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-15,8,0],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[5,8,35]}]},{name:'upper-left-wall-top',mass:0,material:'obstacleMaterial',position:[-13.5,20,20],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[6.5,4,15]}]},{name:'upper-right-wall-top',mass:0,material:'obstacleMaterial',position:[-13.5,20,-20],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[6.5,4,15]}]},{name:'upper-left-wall',mass:0,material:'obstacleMaterial',position:[-8.4,12,19.5],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2,12,15.5]}]},{name:'upper-right-wall',mass:0,material:'obstacleMaterial',position:[-8.4,12,-19.5],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2,12,15.5]}]},{name:'upper-entrance-left-wall',mass:0,material:'obstacleMaterial',position:[-17.2,10,4.5],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2.8,10,3.5]}]},{name:'upper-entrance-right-wall',mass:0,material:'obstacleMaterial',position:[-17.2,10,-4.5],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2.8,10,3.5]}]},{name:'left-wall',mass:0,material:'obstacleMaterial',position:[38,14,30],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[58,14,5]}]},{name:'right-wall',mass:0,material:'obstacleMaterial',position:[38,14,-30],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[58,14,5]}]},{name:'lower-left-wall',mass:0,material:'obstacleMaterial',position:[97.2,14,18],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[6.8,14,17]}]},{name:'lower-right-wall',mass:0,material:'obstacleMaterial',position:[97.2,14,-18],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[6.8,14,17]}]},{name:'lower-entrance-ramp',cover:'concrete',mass:0,material:'obstacleMaterial',position:[98,0,0],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,-1],[3,2.8,-1],[6,2.8,-1],[6,0,-1],[0,0,1],[3,2.8,1],[6,2.8,1],[6,0,1]],faces:[[7,6,5,4],[0,1,2,3],[4,5,1,0],[5,6,2,1],[4,0,3,7],[2,6,7,3]]}]}],_toConsumableArray(buildLadder$1()));};var chamberB={visual:{className:'instance',position:[0,0,0],rotation:[0,0,0,1],nodes:[{className:'instance',group:'static',url:'assets/environment/chamber-b.vmf',position:[0,0,0],scale:vec3$1(1)},{className:'instance',group:'static',url:'assets/environment/scaffolding-b.vmf',position:[0,0,0],scale:vec3$1(1)},{className:'instance',group:'static',url:'assets/environment/pipes-b.vmf',position:[0,0,0],scale:vec3$1(1)},{className:'light',type:'spotlight',position:[16,40,0],destination:[16,0,0],color:[0.64,0.58,0.5],angle:0.36*Math.PI,radius:36.0,castShadow:true},{className:'light',type:'spotlight',position:[54,40,-24],destination:[54,0,-24],color:[0.64,0.58,0.5],angle:0.36*Math.PI,radius:36.0,castShadow:true},{className:'light',type:'spotlight',position:[54,40,24],destination:[54,0,24],color:[0.64,0.58,0.5],angle:0.36*Math.PI,radius:36.0,castShadow:true},{className:'light',type:'spotlight',position:[80,40,0],destination:[80,0,0],color:[0.64,0.58,0.5],angle:0.36*Math.PI,radius:36.0,castShadow:true},{className:'light',type:'omnilight',position:[48,20,0],color:[0.06,0.02,0.02],radius:128.0,castShadow:false},{className:'emitter',type:'fog',timeOffset:0,position:[40,0,0]},{className:'audio',url:'assets/sounds/noise.mp3',position:[40,0,0],volume:8,loop:true,startTime:0},{className:'instance',group:'decal',url:'assets/effects/wall-sign-a.png',position:[91,4,3],scale:vec3$1(3,3,3),rotation:quat$1.setAxisAngle(vec3$1.AXIS_Y,-0.5*Math.PI)},{className:'instance',group:'decal',url:'assets/effects/wall-sign-b.png',position:[91,4,-3],scale:vec3$1(3,3,3),rotation:quat$1.setAxisAngle(vec3$1.AXIS_Y,-0.5*Math.PI)},{className:'instance',group:'decal',url:'assets/effects/blood-a.png',position:[30,4,-22],scale:vec3$1(12,12,12),rotation:quat$1.setAxisAngle(vec3$1.AXIS_X,0.36*Math.PI)},{className:'instance',group:'decal',url:'assets/effects/blood-b.png',position:[32,4,22],scale:vec3$1(12,12,12),rotation:quat$1.setAxisAngle(vec3$1.AXIS_X,-0.8*Math.PI)}]},behavior:[],imposter:[].concat(_toConsumableArray(buildWalls$1())),metaData:{connectors:[{position:[104-1,2.8,0],normal:[1,0,0]},{position:[-20+1,16,0],normal:[-1,0,0]}],start:[50,10,0]}};var buildWalls$2=function buildWalls$2(){return[{name:'floor',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-50,-17.8,-0.1],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[20,6.2,26.7]}]},{name:'front-wall',mass:0,material:'obstacleMaterial',position:[-30+1,-14,-1.1],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[1,10,27.7]}]},{name:'corridor-floor',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-58.5,-18.4,59],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[11.5,5.6,32.4]}]},{name:'corridor-upper-floor',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-52,-11.3,59],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[5,1.5,32.4]}]},{name:'back-wall',mass:0,material:'obstacleMaterial',position:[-84,-12,45],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[14,12,64]}]},{name:'back-passage-ramp',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-87,-21,-26.8],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[17,9.4,0],[17,0,0],[0,0,7.8],[17,9.4,7.8],[17,0,7.8]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'back-passage-floor',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-84,-22.5,-22.9],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[14,1.5,3.9]}]},{name:'back-passage-door-right',mass:0,material:'obstacleMaterial',position:[-96,-10.5,-20.4],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2,10.5,1.4]}]},{name:'back-passage-door-left',mass:0,material:'obstacleMaterial',position:[-96,-10.5,-25.4],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2,10.5,1.4]}]},{name:'back-left-wall',mass:0,material:'obstacleMaterial',position:[-64,-12,-27.8],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[34,12,1]}]},{name:'left-side',mass:0,material:'obstacleMaterial',position:[-47.1,-12,-21.4],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[17.1,12,5.4]}]},{name:'right-side',mass:0,material:'obstacleMaterial',position:[-47.1,-12,20.6],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[17.1,12,6]}]},{name:'corridor-wall',mass:0,material:'obstacleMaterial',position:[-49,-4.9,56.5],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2,4.9,29.9]}]},{name:'corridor-wall-corner',mass:0,material:'obstacleMaterial',position:[-49,-4.9,90],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2,4.9,1.4]}]},{name:'corridor-end',mass:0,material:'obstacleMaterial',position:[-58.5,-12,100.2],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[11.5,12,8.8]}]},{name:'corridor-ramp',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-70,-12.8,26.6+1],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[0,1.2,-1],[0,0,-1],[9.8,0,0],[9.8,1.2,-1],[9.8,0,-1]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'corridor-left-ramp',cover:'metal',mass:0,material:'obstacleMaterial',position:[-57-3.2,-12.8,27.6],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[3.2,3,0],[3.2,0,0],[0,0,4.4],[3.2,3,4.4],[3.2,0,4.4]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'corridor-right-ramp',cover:'metal',mass:0,material:'obstacleMaterial',position:[-57-3.2,-12.8,86.6],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[3.2,3,0],[3.2,0,0],[0,0,4.8],[3.2,3,4.8],[3.2,0,4.8]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'corridor-divider',mass:0,material:'obstacleMaterial',position:[-57.9,-6.4,59.3],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[0.9,6.4,27.3]}]},{name:'corridor-divider-part',mass:0,material:'obstacleMaterial',position:[-58.6,-6.4,27.1],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[1.6,6.4,0.5]}]}];};var chamberC={visual:{className:'instance',position:[0,0,0],rotation:[0,0,0,1],nodes:[{className:'instance',group:'static',url:'assets/environment/chamber-c.vmf',position:[0,0,0],scale:vec3$1(1)},{className:'instance',group:'static',url:'assets/environment/scaffolding-c.vmf',position:[0,0,0],scale:vec3$1(1)},{className:'instance',group:'static',url:'assets/environment/pipes-c.vmf',position:[0,0,0],scale:vec3$1(1)},{className:'liquid',position:[-2,-14,-2],scale:[0.4,0.4,0.4],color:[0,0.05,0.05]},{className:'audio',url:'assets/sounds/water.mp3',position:[-2,-14,-2],volume:8,loop:true,startTime:0},{className:'light',type:'spotlight',position:[10,40,0],destination:[-20,-10,0],color:[0.4,0.5,0.56],angle:0.42*Math.PI,radius:78,castShadow:true},{className:'light',type:'spotlight',position:[-90,4,-23],destination:[-90,-20,-23],color:[0.72,0.3,0.26],angle:0.25*Math.PI,radius:64,castShadow:false},{className:'light',type:'spotlight',position:[-66,-2,90],destination:[-54,-10,30],color:[1,0.8,0.4],angle:0.3*Math.PI,radius:36,castShadow:true},{className:'light',type:'spotlight',position:[-68,0,30],destination:[-60,-20,34],color:[0.5,0.4,0.2],angle:0.25*Math.PI,radius:24,castShadow:false},{className:'light',type:'spotlight',position:[-68,0,90],destination:[-60,-20,90],color:[0.5,0.4,0.2],angle:0.25*Math.PI,radius:24,castShadow:false},{className:'light',type:'omnilight',position:[-60,0,-5],color:[0.2,0.18,0.1],radius:24,castShadow:true},{className:'instance',group:'decal',url:'assets/effects/blood-a.png',position:[-60,-11,74],scale:vec3$1(8,8,8),rotation:quat$1.fromEulerOrdered(-0.5*Math.PI,-0.42*Math.PI,0)}]},behavior:[],imposter:[].concat(_toConsumableArray(buildWalls$2())),metaData:{connectors:[{position:[-98+1+1,-21,-22.9],normal:[-1,0,0]},{position:[-47-1,-9.8,87.5],normal:[1,0,0]}],start:[-33,-5,5]}};var buildWalls$3=function buildWalls$3(){return[{name:'floor',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-146.1,-5,-186.4],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[20.7,5,63.6]}]},{name:'floor-ladder',cover:'metal',mass:0,material:'obstacleMaterial',position:[-171.5,-5,-186.4],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[4.7,5,63.6]}]},{name:'ramp',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-166.8,0,-200.4],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[0,14.8,-22.4],[0,0,-22.4],[8.6,0,0],[8.6,14.8,-22.4],[8.6,0,-22.4]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'room-center-wall',mass:0,material:'obstacleMaterial',position:[-142.1,10,-211.6],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[16.7,10,11.2]}]},{name:'room-left-wall',mass:0,material:'obstacleMaterial',position:[-171.5,10,-222.3],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[4.7,10,27.7]}]},{name:'room-upper-floor',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-150.8,7.4,-236.4],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[25.4,7.4,13.6]}]},{name:'room-upper-back-wall',mass:0,material:'obstacleMaterial',position:[-155.6,17.4,-241.5],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[20.6,2.6,8.5]}]},{name:'platform-inner-wall',mass:0,material:'obstacleMaterial',position:[-167.9,10,-159.9],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[4.3,10,24.9]}]},{name:'upper-entrance-left-wall',mass:0,material:'obstacleMaterial',position:[-133.1,17.4,-248.5],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[1.9,2.6,1.5]}]},{name:'upper-entrance-right-wall',mass:0,material:'obstacleMaterial',position:[-127.3,17.4,-248.5],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[1.9,2.6,1.5]}]},{name:'central-wall',mass:0,material:'obstacleMaterial',position:[-144.5,10,-159.9],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[19.1,10,24.9]}]},{name:'right-wall',mass:0,material:'obstacleMaterial',position:[-123.4,5,-186.4],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2,15,63.6]}]},{name:'left-wall',mass:0,material:'obstacleMaterial',position:[-178.2,5,-185.2],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2,15,64.8]}]},{name:'front-wall',mass:0,material:'obstacleMaterial',position:[-150.8,5,-118.4],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[29.4,15,2]}]},{name:'front-left-corner',mass:0,material:'obstacleMaterial',position:[-166.6,10,-124.1],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[9.6,10,3.7]}]},{name:'front-left-corner-part',mass:0,material:'obstacleMaterial',position:[-169.9,10,-129.2],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[6.3,10,1.4]}]},{name:'front-right-corner',mass:0,material:'obstacleMaterial',position:[-138.2,10,-126.7],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[12.8,10,3.9]}]},{name:'front-right-corner-part',mass:0,material:'obstacleMaterial',position:[-132.1,10,-132.8],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[6.7,10,2.2]}]},{name:'passage-floor',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-148.8,-7.5,-121.6],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[27.4,2.5,1.2]}]},{name:'passage-upper-floor',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-163.6,-2.5,-121.6],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[12.6,2.5,1.2]}]},{name:'front-platform-ladder',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-151,-5,-122.8],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[0,5,0],[12,0,0],[0,0,2.4],[0,5,2.4],[12,0,2.4]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]}];};var chamberD={visual:{className:'instance',position:[0,0,0],rotation:[0,0,0,1],nodes:[{className:'instance',group:'static',url:'assets/environment/chamber-d.vmf',position:[0,0,0],scale:vec3$1(1)},{className:'instance',group:'static',url:'assets/environment/scaffolding-d.vmf',position:[0,0,0],scale:vec3$1(1)},{className:'instance',group:'static',url:'assets/environment/pipes-d.vmf',position:[0,0,0],scale:vec3$1(1)},{className:'liquid',position:[-200,-10,-160],scale:[0.4,0.4,2],color:[0,0.1,0]},{className:'audio',url:'assets/sounds/water.mp3',position:[-200,-10,-160],volume:8,loop:true,startTime:0},{className:'audio',url:'assets/sounds/noise.mp3',position:[-150,4,-128],volume:8,loop:true,startTime:0},{className:'light',type:'spotlight',position:[-128,25,-188],destination:[-128,0,-230],color:[0.5,0.44,0.3],angle:0.36*Math.PI,radius:48,castShadow:true},{className:'light',type:'spotlight',position:[-144,25,-188],destination:[-144,0,-230],color:[0.5,0.44,0.3],angle:0.36*Math.PI,radius:48,castShadow:true},{className:'light',type:'omnilight',position:[-143,20,-213],color:[0.16,0.14,0.1],radius:48.0,castShadow:false},{className:'light',type:'spotlight',position:[-200,20,-190],destination:[-160,-10,-180],color:[0.4,0.6,0.6],angle:0.25*Math.PI,radius:128,castShadow:true},{className:'light',type:'spotlight',position:[-200,20,-132],destination:[-160,-10,-120],color:[0.4,0.6,0.6],angle:0.25*Math.PI,radius:128,castShadow:true},{className:'light',type:'omnilight',position:[-180,0,-160],color:[0.2,0.3,0.3],radius:28.0,castShadow:false},{className:'light',type:'spotlight',position:[-158,12,-128],destination:[-155,0,-134.5],color:[0.6,0.6,0.4],angle:0.3*Math.PI,radius:48,castShadow:true},{className:'light',type:'omnilight',position:[-153,8,-120],color:[0.2,0.18,0.1],radius:32.0,castShadow:false},{className:'instance',group:'decal',url:'assets/effects/wall-sign-a.png',position:[-150,4,-128],scale:vec3$1(4,4,4),rotation:quat$1.setAxisAngle(vec3$1.AXIS_Y,-0.5*Math.PI)},{className:'instance',group:'dynamic',url:'assets/environment/cargo.vmf',position:[0,0,0],scale:[4,4,4]},{className:'instance',group:'dynamic',url:'assets/environment/cargo.vmf',position:[0,0,0],scale:[4,4,4]},{className:'instance',group:'dynamic',url:'assets/environment/cargo.vmf',position:[0,0,0],scale:[4,4,4]}]},behavior:[],imposter:[].concat(_toConsumableArray(buildWalls$3()),_toConsumableArray([[-131,3,-195],[-131.5,6,-194.5],[-136,3,-191]].map(function(position){return{name:'box',mass:1,material:'defaultContactMaterial',position:position,quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2,2,2]}]};}))),metaData:{connectors:[{position:[-121-1.4,-5,-121.6],normal:[1,0,0]},{position:[-130.2,14.8,-250+1],normal:[0,0,-1]}],start:[-174,2,-160]}};var buildWalls$4=function buildWalls$4(){return[{name:'floor',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-41.5,-2,-134],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[28.7,4,60]}]},{name:'left-wall',mass:0,material:'obstacleMaterial',position:[-68.2,14,-134],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2,12,60]}]},{name:'right-wall',mass:0,material:'obstacleMaterial',position:[-14.8,14,-134],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2,12,60]}]},{name:'platform-floor',cover:'metal',mass:0,material:'obstacleMaterial',position:[-41.5,8.2,-173.5],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2.7,6.2,20.5]}]},{name:'platform-left-wall',mass:0,material:'obstacleMaterial',position:[-57.2,14,-178.6],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[13,12,15.4]}]},{name:'platform-right-wall',mass:0,material:'obstacleMaterial',position:[-25.8,14,-178.6],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[13,12,15.4]}]},{name:'entrance-right-wall',mass:0,material:'obstacleMaterial',position:[-39.7,20.2,-191.7],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[0.9,5.8,2.3]}]},{name:'entrance-left-wall',mass:0,material:'obstacleMaterial',position:[-43.3,20.2,-191.7],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[0.9,5.8,2.3]}]},{name:'front-ramp-corners',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-41.5,5.3,-160.3],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[28.7,3.3,2.9]}]},{name:'back-left-wall',mass:0,material:'obstacleMaterial',position:[-56.3,2+12,-76.8],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[13.9,12,2.8]}]},{name:'back-right-wall',mass:0,material:'obstacleMaterial',position:[-26.7,2+12,-76.8],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[13.9,12,2.8]}]},{name:'back-center-wall',mass:0,material:'obstacleMaterial',position:[-41.5,17.3,-76.8],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[0.9,8.7,2.8]}]},{name:'back-ramp-left-corner',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-56.3,5.3,-83.1],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[13.9,3.3,3.5]}]},{name:'back-ramp-right-corner',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-26.7,5.3,-83.1],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[13.9,3.3,3.5]}]},{name:'back-ramp-center',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-41.5,11.5,-83.1],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[2.7,2.9,3.5]}]},{name:'front-lower-left-ramp',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-66.2,2,-144.8],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[0,6.6,-12.6],[0,0,-12.6],[6.2,0,0],[6.2,6.6,-12.6],[6.2,0,-12.6]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'front-lower-right-ramp',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-23,2,-144.8],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[0,6.6,-12.6],[0,0,-12.6],[6.2,0,0],[6.2,6.6,-12.6],[6.2,0,-12.6]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'back-lower-left-ramp',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-66.2,2,-86.6],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[0,6.6,0],[0,0,-12.6],[6.2,0,0],[6.2,6.6,0],[6.2,0,-12.6]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'back-lower-right-ramp',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-23,2,-86.6],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[0,6.6,0],[0,0,-12.6],[6.2,0,0],[6.2,6.6,0],[6.2,0,-12.6]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'back-upper-left-ramp',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-60,8.6,-86.6],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[15.8,5.8,0],[15.8,0,0],[0,0,7],[15.8,5.8,7],[15.8,0,7]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'back-upper-right-ramp',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-38.8,8.6,-86.6],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[0,5.8,0],[15.8,0,0],[0,0,7],[0,5.8,7],[15.8,0,7]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'front-upper-left-ramp',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-60,8.6,-163.2],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[15.8,5.8,0],[15.8,0,0],[0,0,5.8],[15.8,5.8,5.8],[15.8,0,5.8]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'front-upper-right-ramp',cover:'concrete',mass:0,material:'obstacleMaterial',position:[-38.8,8.6,-163.2],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[0,5.8,0],[15.8,0,0],[0,0,5.8],[0,5.8,5.8],[15.8,0,5.8]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'front-platform-ladder',cover:'metal',mass:0,material:'obstacleMaterial',position:[-41.5-1.3,14.4,-153],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[0,3.8,0],[0,0,-4],[2*1.3,0,0],[2*1.3,3.8,0],[2*1.3,0,-4]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'back-platform-ladder',cover:'metal',mass:0,material:'obstacleMaterial',position:[-41.5-1.3,14.4,-86.6],quaternion:[0,0,0,1],shapes:[{type:'convex',vertices:[[0,0,0],[0,3.8,-4],[0,0,-4],[2*1.3,0,0],[2*1.3,3.8,-4],[2*1.3,0,-4]],faces:[[0,1,2],[3,5,4],[1,4,5,2],[0,2,5,3],[0,3,4,1]]}]},{name:'platform-bridge',cover:'metal',mass:0,material:'obstacleMaterial',position:[-41.5,16.3,-121.8],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[1.3,1.9,31.2]}]},{name:'platform-bridge-left-wall',mass:0,material:'obstacleMaterial',position:[-43.5,14.4+4,-122],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[0.7,4,35.4]}]},{name:'platform-bridge-right-wall',mass:0,material:'obstacleMaterial',position:[-39.5,14.4+4,-122],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[0.7,4,35.4]}]},{mass:0,material:'obstacleMaterial',position:[-25.4,22,-123],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[3,20,5.4]}]},{mass:0,material:'obstacleMaterial',position:[-57.8,22,-123],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[3,20,5.4]}]},{mass:0,material:'obstacleMaterial',position:[-56,22,-151.1],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[4,20,6.3]}]},{mass:0,material:'obstacleMaterial',position:[-27.2,22,-151.1],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[4,20,6.3]}]},{mass:0,material:'obstacleMaterial',position:[-56,22,-86.6-6.3],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[4,20,6.3]}]},{mass:0,material:'obstacleMaterial',position:[-27.2,22,-86.6-6.3],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[4,20,6.3]}]},{mass:0,material:'obstacleMaterial',position:[-41.6,2+6.2,-123],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[13.2,6.2,12+4.6]}]}];};var chamberE={visual:{className:'instance',position:[0,0,0],rotation:[0,0,0,1],nodes:[{className:'instance',group:'static',url:'assets/environment/chamber-e.vmf',position:[0,0,0],scale:vec3$1(1)},{className:'instance',group:'static',url:'assets/environment/scaffolding-e.vmf',position:[0,0,0],scale:vec3$1(1)},{className:'light',type:'omnilight',position:[-42,-5,-123],color:[0.2,0.1,0.1],radius:24.0,castShadow:false},{className:'liquid',position:[-40,0,-140],scale:[0.4,0.4,0.6],color:[0.3,0,0]},{className:'audio',url:'assets/sounds/water.mp3',position:[-42,-4,123],volume:20,loop:true,startTime:0},{className:'light',type:'spotlight',position:[-42,32,-135],destination:[-42,0,-135],color:[0.6,0.4,0.3],angle:0.36*Math.PI,radius:48,castShadow:true},{className:'light',type:'spotlight',position:[-42,32,-110],destination:[-42,0,-110],color:[0.6,0.4,0.3],angle:0.36*Math.PI,radius:48,castShadow:true},{className:'light',type:'spotlight',position:[-42,24,-186],destination:[-42,10,-158],color:[0.6,0.4,0.4],angle:0.2*Math.PI,radius:48,castShadow:true},{className:'light',type:'omnilight',position:[-42,0,-178],color:[0.2,0.1,0.1],radius:32.0,castShadow:false}]},behavior:[],imposter:[].concat(_toConsumableArray(buildWalls$4())),metaData:{connectors:[{position:[-41.5,14.4,-194+1],normal:[0,0,-1]},{position:[-41.5,2,-74-1],normal:[0,0,1]}],start:[-24,5,-134]}};var SynchronizeDynamic=function SynchronizeDynamic(entity){var imposters=entity.imposter.filter(function(imposter){return imposter.mass>0;});var visuals=entity.visual.elements.filter(function(instance){return instance.delegate&&instance.delegate.group==='dynamic';});visuals.forEach(function(instance){return instance.parent=null;});return{update:function update(deltaTime,updateContext){return null;},synchronize:function synchronize(_){for(var i=imposters.length-1;i>=0;i--){var imposter=imposters[i];var visual=visuals[i];visual.position=imposter.position;visual.rotation=imposter.quaternion;}},clear:function clear(_){return null;}};};var genRandomChar=function genRandomChar(rng){return String.fromCharCode(genRandomInt('A'.charCodeAt(0),'Z'.charCodeAt(0),rng));};var chambers=[chamberA,chamberB,chamberC,chamberD,chamberE];var cloneConfiguration=function cloneConfiguration(index){return Object.assign(snapshot(chambers[index]),{behavior:[SynchronizeDynamic]});};var ZoneGenerator=function ZoneGenerator(app,world,player){var head={entity:world.addEntity(cloneConfiguration(0)),identifier:'0',neighbours:[]};function unloadZone(zone){logger.info('spatial',"Unloading Zone: "+zone.identifier);world.removeEntity(zone.entity);for(var i=zone.neighbours.length;i>=0;i--){var neighbour=zone.neighbours[i];if(!neighbour)continue;var index=neighbour.neighbours.indexOf(zone);neighbour.neighbours[index]=null;}}function loadZone(parent,connector){var rng=rngSimple(connector.position[0]+0xFFFF0000*connector.position[2]+0x0f);var zoneOptions=cloneConfiguration(genRandomInt(0,chambers.length-1,rng));var zoneConnector=zoneOptions.metaData.connectors[genRandomInt(0,1,rng)];var identifier=Array.range(5).map(function(i){return i<2?genRandomChar(rng):genRandomInt(0,9,rng);}).join('');logger.info('spatial',"Loading Zone: "+identifier);var normal=vec3$1.negate(connector.normal);var angle=vec2.angle([normal[0],normal[2]],[zoneConnector.normal[0],zoneConnector.normal[2]]);var orientation=quat$1.setAxisAngle(vec3$1.AXIS_Y,angle);applyRotation:{vec3$1.transformQuat(zoneOptions.visual.position,orientation,zoneOptions.visual.position);quat$1.multiply(orientation,zoneOptions.visual.rotation,zoneOptions.visual.rotation);zoneOptions.imposter.forEach(function(body){return vec3$1.transformQuat(body.position,orientation,body.position);});zoneOptions.imposter.forEach(function(body){return quat$1.multiply(orientation,body.quaternion,body.quaternion);});zoneOptions.metaData.connectors.forEach(function(connector){return vec3$1.transformQuat(connector.position,orientation,connector.position);});zoneOptions.metaData.connectors.forEach(function(connector){return vec3$1.transformQuat(connector.normal,orientation,connector.normal);});}var offset=vec3$1.subtract(connector.position,zoneConnector.position);applyTranslation:{vec3$1.add(offset,zoneOptions.visual.position,zoneOptions.visual.position);zoneOptions.imposter.forEach(function(body){return vec3$1.add(offset,body.position,body.position);});zoneOptions.metaData.connectors.forEach(function(connector){return vec3$1.add(offset,connector.position,connector.position);});}var zone={entity:world.addEntity(zoneOptions),identifier:identifier,neighbours:[]};zone.neighbours[zoneOptions.metaData.connectors.indexOf(zoneConnector)]=parent;return zone;}var radius={upperBound:Math.pow(75,2),lowerBound:Math.pow(50,2)};app.scene.addEventListener('update',function(){var position=player.visual.position;var connectors=head.entity.metaData.connectors;var minDistance=Infinity,minIndex=9;for(var i=connectors.length-1;i>=0;i--){var connector=connectors[i];var distance=vec3$1.differenceSquared(position,connector.position);if(head.neighbours[i]&&distance>radius.upperBound)unloadZone(head.neighbours[i]);if(distance>minDistance)continue;minDistance=distance;minIndex=i;}if(!head.neighbours[minIndex]&&minDistance<radius.lowerBound)head.neighbours[minIndex]=loadZone(head,connectors[minIndex]);var side=vec3$1.dot(connectors[minIndex].normal,vec3$1.subtract(connectors[minIndex].position,position));if(side<0&&head.neighbours[minIndex]){head=head.neighbours[minIndex];logger.info('spatial',"Entering Zone: "+head.identifier);}});};function buildRagdoll(app,target,bones){var boneOrigins=bones.map(function(bone){return vec4.transform(vec3$1.ZERO,bone.bindPose,vec3$1());});var boneWidth=0.4;function boneFromTo(origin,target){var center=vec3$1.add(origin,target,vec3$1());vec3$1.scale(center,0.5,center);var difference=vec3$1.subtract(target,origin,vec3$1());var angle=Math.atan2(difference[1],difference[0]);return{position:center,quaternion:quat$1.setAxisAngle(vec3$1.AXIS_Z,0.5*Math.PI+angle),shapes:[{type:'box',halfExtents:[0.5*boneWidth,0.5*vec3$1.distance(difference),0.5*boneWidth]}]};}var worldTransform=target.modelMatrix;var worldOrientation=quat$1.fromMat4(worldTransform,quat$1());var imposters=deserialize$1([Object.assign({name:'lower left leg',boneIndex:11,mass:1},boneFromTo(boneOrigins[5],boneOrigins[11])),Object.assign({name:'lower right leg',boneIndex:13,mass:1},boneFromTo(boneOrigins[6],boneOrigins[13])),Object.assign({name:'upper left leg',boneIndex:5,mass:1},boneFromTo(boneOrigins[4],boneOrigins[5])),Object.assign({name:'upper right leg',boneIndex:6,mass:1},boneFromTo(boneOrigins[3],boneOrigins[6])),{name:'pelvis',boneIndex:1,mass:1,position:boneOrigins[1],quaternion:[0,0,0,1],shapes:[{type:'box',halfExtents:[0.3,0.3,0.2]}]},{name:'upper body',boneIndex:2,mass:1,position:boneOrigins[2],quaternion:quat$1.setAxisAngle(vec3$1.AXIS_X,Math.PI),shapes:[{type:'box',halfExtents:[0.3,0.3,0.2]}]},{name:'head',boneIndex:9,mass:1,position:vec3$1.add(boneOrigins[9],[0,0.4,0]),quaternion:quat$1.setAxisAngle(vec3$1.AXIS_X,Math.PI),shapes:[{type:'box',halfExtents:[0.4,0.4,0.4]}]},Object.assign({name:'upper left arm',boneIndex:12,mass:1},boneFromTo(boneOrigins[8],boneOrigins[12])),Object.assign({name:'upper right arm',boneIndex:10,mass:1},boneFromTo(boneOrigins[7],boneOrigins[10])),Object.assign({name:'lower left arm',boneIndex:15,mass:1},boneFromTo(boneOrigins[12],boneOrigins[15])),Object.assign({name:'lower right arm',boneIndex:14,mass:1},boneFromTo(boneOrigins[10],boneOrigins[14]))].map(function(body){body.bindPose=mat4.fromRotationTranslationScale(body.quaternion,body.position,vec3$1.ONE,mat4());body.invBindPose=mat4.invert(body.bindPose,mat4());vec4.transform(body.position,worldTransform,body.position);quat$1.multiply(worldOrientation,body.quaternion,body.quaternion);quat$1.normalize(body.quaternion,body.quaternion);return Object.assign(body,{material:'ragdollMaterial'});})).map(function(body){return app.physics.addBody(body);});var imposterMap=Object.create(null);imposters.forEach(function(imposter){return imposterMap[imposter.boneIndex+1]=imposter;});function linkBodies(imposter,parentImposter,axis){var boneHalfLength=imposter.shapes[0].halfExtents[1];var jointPivot=vec3$1(0,boneHalfLength,0);var jointAxis=vec3$1(0,1,0);var parentJointPivot=vec3$1.copy(jointPivot,vec3$1());var parentJointAxis=vec3$1.copy(jointAxis,vec3$1());Transform.pointToWorldFrame(parentJointPivot,imposter.position,imposter.quaternion,parentJointPivot);Transform.pointToLocalFrame(parentJointPivot,parentImposter.position,parentImposter.quaternion,parentJointPivot);Transform.vectorToWorldFrame(parentJointAxis,imposter.position,imposter.quaternion,parentJointAxis);Transform.vectorToLocalFrame(parentJointAxis,parentImposter.position,parentImposter.quaternion,parentJointAxis);return ConeTwistConstraint(imposter,parentImposter,{pivotA:jointPivot,pivotB:parentJointPivot,axisA:jointAxis,axisB:parentJointAxis,angle:0.24*Math.PI,twistAngle:0*Math.PI});}function traverseBoneHierarchy(bones,boneId,callback){var bone=bones[boneId-1];while(bone){var output=callback(bone);if(output)return output;bone=bones[bone.parent-1];}}var constraints=imposters.map(function(imposter){var boneIndex=imposter.boneIndex;var parentImposter=traverseBoneHierarchy(bones,boneIndex+1,function(bone){return bone.id!=boneIndex+1&&imposterMap[bone.id];});if(!parentImposter)return;return linkBodies(imposter,parentImposter);}).filter(function(constraint){return constraint;}).map(function(constraint){return app.physics.addConstraint(constraint);});return{get position(){return imposters[4].position;},imposters:imposters,constraints:constraints,imposterMap:imposterMap,delete:function _delete(){constraints.forEach(function(constraint){return app.physics.removeConstraint(constraint);});imposters.forEach(function(imposter){return app.physics.removeBody(imposter);});}};}var RandomRepeat=function RandomRepeat(cooldown,callback){var timeRemaining=typeof cooldown=='function'?cooldown():cooldown;return function update(deltaTime){timeRemaining-=0.001*deltaTime;if(timeRemaining>=0)return;callback(timeRemaining);timeRemaining=typeof cooldown=='function'?cooldown():cooldown;};};var STATES={DEAD:-1,FOLLOW:0,RAGDOLL:1};var StalkerAI=function StalkerAI(app,world,player){return function(entity){entity.state=STATES.FOLLOW;var visual=entity.visual;var harness=visual.elements[0];harness.insertClip(0,-1,1);var boid=Boid({position:visual.position,maxSpeed:0.016,maxForce:0.001});var followPlayer=FollowObjective(app.scene,player.visual);var traversePath=function traversePath(path,index){if(index<path.length-1)boid.wander(0.004,Math.PI*0.1);return boid.followPath(index,path,false);};var sounds=[visual.elements[1],visual.elements[2]];var randomNoise=RandomRepeat(genRandomFloat.bind(null,5,20),function(){sounds[genRandomInt(0,sounds.length-1)].play();});entity.switchToRagdoll=function(){if(entity.state!==STATES.FOLLOW)return;entity.state=STATES.RAGDOLL;harness.bindRagdoll(function(bones){return buildRagdoll(app,harness,bones);});harness.ragdollEnabled=true;};return{update:function update(deltaTime,updateContext){if(entity.state===STATES.FOLLOW){followPlayer(visual.position,traversePath);boid.update(deltaTime);randomNoise(deltaTime);}},synchronize:function synchronize(_){if(entity.state===STATES.FOLLOW){visual.position=boid.position;visual.rotation=boid.rotation;}},clear:function clear(_){entity.state=STATES.DEAD;}};};};var Stalker=function Stalker(options){return{visual:{className:'instance',position:options.position,nodes:[{className:'instance',trackSpatial:true,group:'skinned',url:'assets/critters/stalker.vmf',position:[0,1.36,0],scale:[1,1,1],rotation:quat$1.setAxisAngle(vec3$1.AXIS_Y,Math.PI)},{className:'audio',url:'assets/sounds/stalker-a.mp3',position:[0,0,0],volume:1,loop:false},{className:'audio',url:'assets/sounds/stalker-b.mp3',position:[0,0,0],volume:1,loop:false}]},behavior:[options.behavior],imposter:[]};};var CritterSpawner=function CritterSpawner(app,world,player){var critters=[];var tempPosition=vec3$1();var navigationLayer='default';app.scene.addEventListener('navigation',function(layer){for(var i=critters.length-1;i>=0;i--){vec3$1.translationFromMat4(critters[i].visual.modelMatrix,tempPosition);var node=app.scene.navigationMesh.detectNearestNode(tempPosition,navigationLayer,{checkBounds:true});var distance=vec3$1.distance(vec3$1.subtract(tempPosition,player.visual.position));if(node&&distance<124)continue;logger.info('ai',"Eliminate entity. "+i+"/"+critters.length);world.removeEntity(critters[i]);critters.splice(i,1);}for(var _i56=critters.length;_i56<1;_i56++){var position=vec3$1.add(player.visual.position,[genRandomInt(-10,10),0,genRandomInt(-10,10)]);var tile=app.scene.navigationMesh.detectNearestNode(position,navigationLayer);position[1]=tile.centroid[1];console.log(tile);var critter=world.addEntity(Stalker({position:position,behavior:StalkerAI(app,world,player)}));logger.info('ai',"Spawn entity. "+position);critters.push(critter);}});app.scene.addEventListener('update',function(){app.scene.entities.forEach(function(entity){return entity.highlight=[1,1,1];});var entities=app.scene.raytrace(app.interaction.mouse.position);var closest=void 0,minDistance=Infinity;for(var i=entities.length-1;i>=0;i--){var entity=entities[i];vec3$1.translationFromMat4(entity.modelMatrix,tempPosition);var distance=vec3$1.distance(vec3$1.subtract(tempPosition,player.visual.position));if(distance>=minDistance)continue;minDistance=distance;closest=entity;}if(closest&&!closest.ragdollEnabled&&minDistance<8){closest.highlight=[1,0.8,0.8];var _entity=critters.find(function(entity){return entity.visual.elements[0]===closest;});_entity.switchToRagdoll();}});};var DemoGame=function DemoGame(app){window.app=app;window.vec3=V.math.vec3;window.quat=V.math.quat;window.physics=V.physics;setupConfiguration(app);var world=World(app);setupEnvironment:{app.physics.gravity[1]=-9.81;app.scene.createLight({type:'hemisphere',up:[0,1,0],skyColor:[0.05,0.3,0.3],groundColor:[0.1,0.1,0]});app.scene.environment.fogDensity=0.0064;app.scene.environment.fogColor=[0.2,0.2,0.2];}var player=world.addEntity({visual:{className:'instance',nodes:[{className:'instance',group:'skinned',url:'assets/critters/arms.vmf',position:[0.5,-0.2,-0.6],rotation:quat.setAxisAngle(vec3.AXIS_Y,1.04*Math.PI),scale:[1,1,1]},{className:'audio',url:'assets/sounds/footsteps-concrete.mp3',position:[0,0,0],volume:1,loop:true},{className:'audio',url:'assets/sounds/footsteps-metal.mp3',position:[0,0,0],volume:1,loop:true},{className:'audio',url:'assets/sounds/dark-ambience.mp3',position:[0,0,0],volume:0.5,loop:true},{className:'audio',url:'assets/sounds/projectile.mp3',position:[0,0,0],volume:0.5,loop:false}]},behavior:[Player(app.scene.camera,app.interaction,app,{weapon:Weapon(world)})],imposter:[{material:'playerMaterial',angularDamping:1,linearDamping:0,mass:16,fixedRotation:true,visual:!true,position:[88,-20,-115],quaternion:quat.setAxisAngle(vec3.AXIS_Y,Math.PI/2),shapes:[{type:'sphere',radius:0.5}]}]});var ambience=player.visual.elements[3];ambience.play();ZoneGenerator(app,world,player);CritterSpawner(app,world,player);};var main=function main(){window.start=function(_){return V.init().pipe(function(app){return DemoGame(window.app=app);}).fix(function(error){return console.error(error);});};start();};window.V={util:util,math:math,geometry:geometry,events:events,device:device,resources:resources,graphics:graphics,audio:audio,animation:animation,behavior:behavior,physics:physics,scene:scene,interaction:interaction,framework:framework,init:function init(options){return onReady().pipe(function(_){return factory.build('application',options);});}};main();
//# sourceMappingURL=main.js.map
